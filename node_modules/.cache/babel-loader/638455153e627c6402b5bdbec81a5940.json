{"ast":null,"code":"var _jsxFileName = \"/Users/eduardanaida/Documents/GitHub/social-network/src/components/common/Paginator/Paginator.tsx\";\nimport React from 'react';\nimport styles from \"./Paginator.module.css\";\nimport { Pagination } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Paginator = _ref => {\n  let {\n    pageSize,\n    currentPage,\n    totalUsersCount,\n    onPageChanged\n  } = _ref;\n  let pagesCount = Math.ceil(totalUsersCount / pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Pagination, {\n      count: pagesCount,\n      onChange: () => {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), pages.map((p, index) => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: currentPage === p ? styles.selectedPage : 'default',\n        onClick: e => {\n          onPageChanged(p);\n        },\n        children: p\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = Paginator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginator\");","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/social-network/src/components/common/Paginator/Paginator.tsx"],"names":["React","styles","Pagination","Paginator","pageSize","currentPage","totalUsersCount","onPageChanged","pagesCount","Math","ceil","pages","i","push","map","p","index","selectedPage","e"],"mappings":";AAAA,OAAOA,KAAP,MAAwB,OAAxB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAAQC,UAAR,QAAyB,eAAzB;;AAUA,OAAO,MAAMC,SAAiC,GAAG,QACsB;AAAA,MADrB;AAACC,IAAAA,QAAD;AAAWC,IAAAA,WAAX;AAAwBC,IAAAA,eAAxB;AACEC,IAAAA;AADF,GACqB;AAErE,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUJ,eAAe,GAAGF,QAA5B,CAAjB;AAEA,MAAIO,KAAK,GAAG,EAAZ;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,UAArB,EAAiCI,CAAC,EAAlC,EAAsC;AACpCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,KAAK,EAAEJ,UADT;AAEE,MAAA,QAAQ,EAAE,MAAI,CAAE;AAFlB;AAAA;AAAA;AAAA;AAAA,YADF,EAKGG,KAAK,CAACG,GAAN,CAAU,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACvB,0BACE;AAAkB,QAAA,SAAS,EAAEX,WAAW,KAAKU,CAAhB,GAAoBd,MAAM,CAACgB,YAA3B,GAA0C,SAAvE;AACM,QAAA,OAAO,EAAGC,CAAD,IAAO;AACdX,UAAAA,aAAa,CAACQ,CAAD,CAAb;AACD,SAHP;AAAA,kBAGUA;AAHV,SAAWC,KAAX;AAAA;AAAA;AAAA;AAAA,cADF;AAMD,KAPA,CALH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA5BM;KAAMb,S","sourcesContent":["import React, {FC} from 'react';\nimport styles from \"./Paginator.module.css\";\nimport {Pagination} from \"@mui/material\";\n\nexport type PropsPaginatorType = {\n  pageSize: number\n  totalUsersCount: number\n  currentPage: number\n  onPageChanged: (pageNumber: number) => void\n  // handleSetPage: (event: React.ChangeEvent<unknown>, value: number) => void\n}\n\nexport const Paginator: FC<PropsPaginatorType> = ({pageSize, currentPage, totalUsersCount,\n                                                    onPageChanged}) => {\n\n  let pagesCount = Math.ceil(totalUsersCount / pageSize)\n\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  return (\n    <div>\n      <Pagination\n        count={pagesCount}\n        onChange={()=>{}}\n      />\n      {pages.map((p, index) => {\n        return (\n          <span key={index} className={currentPage === p ? styles.selectedPage : 'default'}\n                onClick={(e) => {\n                  onPageChanged(p)\n                }}>{p}</span>\n        )\n      })\n      }\n    </div>\n  );\n};"]},"metadata":{},"sourceType":"module"}