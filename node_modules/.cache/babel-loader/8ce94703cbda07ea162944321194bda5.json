{"ast":null,"code":"var _jsxFileName = \"/Users/eduardanaida/Documents/GitHub/social-network/src/hoc/WithAuthRedirect.tsx\";\nimport React from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.auth.isAuth\n  };\n};\n\nexport function withAuthRedirect(Component) {\n  const RedirectComponent = props => {\n    let {\n      isAuth,\n      ...restProps\n    } = props;\n    if (!isAuth) return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: 'login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 29\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Component, { ...restProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 16\n    }, this);\n  };\n\n  return connect(mapStateToProps)(RedirectComponent);\n}\nexport default withAuthRedirect;","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/social-network/src/hoc/WithAuthRedirect.tsx"],"names":["React","Redirect","connect","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","props","restProps"],"mappings":";AAAA,OAAOA,KAAP,MAAmC,OAAnC;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;;AAOA,MAAMC,eAAe,GAAIC,KAAD,IAAyB;AAC7C,SAAO;AACHC,IAAAA,MAAM,EAAED,KAAK,CAACE,IAAN,CAAWD;AADhB,GAAP;AAGH,CAJD;;AAKA,OAAO,SAASE,gBAAT,CAA6BC,SAA7B,EAA0D;AAC7D,QAAMC,iBAAiB,GAAIC,KAAD,IAA8B;AAEpD,QAAI;AAACL,MAAAA,MAAD;AAAS,SAAGM;AAAZ,QAAyBD,KAA7B;AACA,QAAI,CAACL,MAAL,EAAa,oBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AAEb,wBAAO,QAAC,SAAD,OAAeM;AAAf;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAND;;AAOA,SAAOT,OAAO,CAACC,eAAD,CAAP,CAAyBM,iBAAzB,CAAP;AACH;AAED,eAAeF,gBAAf","sourcesContent":["import React, {ComponentType} from 'react';\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../redux/reduxStore\";\n\ntype MapStatePropsType = {\n    isAuth: boolean\n}\n\nconst mapStateToProps = (state: AppStateType) => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\n    const RedirectComponent = (props: MapStatePropsType) => {\n\n        let {isAuth, ...restProps} = props\n        if (!isAuth) return <Redirect to={'login'}/>\n\n        return <Component {...restProps as T}/>;\n    }\n    return connect(mapStateToProps)(RedirectComponent)\n}\n\nexport default withAuthRedirect;"]},"metadata":{},"sourceType":"module"}