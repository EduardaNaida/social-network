{"ast":null,"code":"var _jsxFileName = \"/Users/eduardanaida/Documents/GitHub/social-network/src/components/Login/Login.tsx\";\nimport React from 'react';\nimport { Field, reduxForm } from \"redux-form\";\nimport { Input } from \"../common/formControls/formControl\";\nimport { requiredField } from \"../../utils/validators/validators\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../redux/authReducer\";\nimport { Redirect } from \"react-router-dom\";\nimport style from '../common/formControls/FormControls.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = _ref => {\n  let {\n    error,\n    handleSubmit,\n    captcha\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        placeholder: 'Email',\n        name: 'email',\n        component: Input,\n        validate: [requiredField]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        placeholder: 'Password',\n        type: 'password',\n        name: 'password',\n        component: Input,\n        validate: [requiredField]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        component: Input,\n        type: 'checkbox',\n        name: 'rememberMe',\n        validate: [requiredField]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), \"remember me\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.formControlError,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), captcha && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: captcha,\n      alt: \"captcha\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LoginForm;\nconst LoginReduxForm = reduxForm({\n  form: 'email'\n})(LoginForm);\n_c2 = LoginReduxForm;\n\nconst Login = props => {\n  const onSubmit = formData => {\n    props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\n  };\n\n  if (props.isAuth) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: '/profile'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Login page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginReduxForm, {\n      onSubmit: onSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Login;\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.auth.isAuth,\n    captchaUrl: state.auth.captchaUrl\n  };\n};\n\nexport default connect(mapStateToProps, {\n  login\n})(Login);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"LoginForm\");\n$RefreshReg$(_c2, \"LoginReduxForm\");\n$RefreshReg$(_c3, \"Login\");","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/social-network/src/components/Login/Login.tsx"],"names":["React","Field","reduxForm","Input","requiredField","connect","login","Redirect","style","LoginForm","error","handleSubmit","captcha","formControlError","LoginReduxForm","form","Login","props","onSubmit","formData","email","password","rememberMe","isAuth","mapStateToProps","state","auth","captchaUrl"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {Input} from \"../common/formControls/formControl\";\nimport {requiredField} from \"../../utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/authReducer\";\nimport {AppStateType} from \"../../redux/reduxStore\";\nimport {Redirect} from \"react-router-dom\";\nimport style from '../common/formControls/FormControls.module.css'\n\ntype FormDataType = {\n  email: string,\n  password: string,\n  rememberMe: boolean,\n  captcha: string\n  error: string\n}\n\ntype CaptchaType = {\n  captchaUrl: string | null\n}\n\nconst LoginForm: React.FC<InjectedFormProps<FormDataType> & FormDataType> = ({error, handleSubmit, captcha}) => {\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <Field placeholder={'Email'}\n               name={'email'}\n               component={Input}\n               validate={[requiredField]}/>\n      </div>\n      <div>\n        <Field placeholder={'Password'}\n               type={'password'}\n               name={'password'}\n               component={Input}\n               validate={[requiredField]}/>\n      </div>\n      <div>\n        <Field component={Input}\n               type={'checkbox'}\n               name={'rememberMe'}\n               validate={[requiredField]}/>remember me\n      </div>\n      {error && <div className={style.formControlError}>{error}</div>}\n      {captcha && <img src={captcha} alt=\"captcha\"/>}\n      <div>\n        <button>Login</button>\n      </div>\n    </form>\n  );\n};\n\nconst LoginReduxForm = reduxForm<FormDataType>({form: 'email'})(LoginForm)\n\nconst Login = (props: LoginPropsType) => {\n  const onSubmit = (formData: FormDataType) => {\n    props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\n  }\n\n  if (props.isAuth) {\n    return <Redirect to={'/profile'}/>\n  }\n  return (\n    <div>\n      <h3>Login page</h3>\n      <LoginReduxForm onSubmit={onSubmit}/>\n    </div>\n  );\n};\n\ntype LoginPropsType = mapDispatchToProps & mapStateToPropsType\n\ntype mapDispatchToProps = {\n  login: (email: string, password: string, rememberMe: boolean, captcha: string) => void\n}\n\ntype mapStateToPropsType = {\n  isAuth: boolean\n  captchaUrl: string | null\n}\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n  return {\n    isAuth: state.auth.isAuth,\n    captchaUrl: state.auth.captchaUrl\n  }\n}\nexport default connect(mapStateToProps, {login})(Login);\n\n\n"]},"metadata":{},"sourceType":"module"}