{"ast":null,"code":"import { AddPostAC } from \"../../../redux/profileReducer\";\nimport { MyPosts } from \"./MyPosts\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = state => {\n  return {\n    profilePage: state.profilePage,\n    newTextValue: state.profilePage.newTextValue\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addPostCallback: newTextValue => {\n      dispatch(AddPostAC(newTextValue));\n    }\n  };\n};\n\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/social-network/src/components/Profile/MyPosts/MyPostsContainer.tsx"],"names":["AddPostAC","MyPosts","connect","mapStateToProps","state","profilePage","newTextValue","mapDispatchToProps","dispatch","addPostCallback","MyPostsContainer"],"mappings":"AACA,SAAQA,SAAR,QAAyC,+BAAzC;AACA,SAAQC,OAAR,QAAsB,WAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAgBA,MAAMC,eAAe,GAAIC,KAAD,IAA4C;AAClE,SAAO;AACLC,IAAAA,WAAW,EAAED,KAAK,CAACC,WADd;AAELC,IAAAA,YAAY,EAAEF,KAAK,CAACC,WAAN,CAAkBC;AAF3B,GAAP;AAID,CALD;;AAOA,MAAMC,kBAAkB,GAAIC,QAAD,IAA8C;AACvE,SAAO;AACLC,IAAAA,eAAe,EAAGH,YAAD,IAA0B;AACzCE,MAAAA,QAAQ,CAACR,SAAS,CAACM,YAAD,CAAV,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,OAAO,MAAMI,gBAAgB,GAAGR,OAAO,CAACC,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CN,OAA7C,CAAzB","sourcesContent":["import React from 'react';\nimport {AddPostAC, ProfilePageType} from \"../../../redux/profileReducer\";\nimport {MyPosts} from \"./MyPosts\";\nimport {connect} from \"react-redux\";\nimport {Dispatch} from \"redux\";\nimport {AppStateType} from \"../../../redux/reduxStore\";\n\n\ntype MapStatePropsType = {\n  profilePage: ProfilePageType\n  newTextValue: string\n}\n\ntype MapDispatchPropsType = {\n  addPostCallback: (newTextValue: string) => void\n}\n\nexport type ProfilePropsType = MapStatePropsType & MapDispatchPropsType\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n  return {\n    profilePage: state.profilePage,\n    newTextValue: state.profilePage.newTextValue\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\n  return {\n    addPostCallback: (newTextValue: string) => {\n      dispatch(AddPostAC(newTextValue));\n    }\n  }\n}\n\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);"]},"metadata":{},"sourceType":"module"}