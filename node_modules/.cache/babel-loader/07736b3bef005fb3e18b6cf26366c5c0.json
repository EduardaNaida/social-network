{"ast":null,"code":"import{AddMessage,NewMessage}from\"../../redux/dialogsReducer\";import{Dialogs}from\"./Dialogs\";import{connect}from\"react-redux\";import{compose}from\"redux\";import withAuthRedirect from\"../../hoc/WithAuthRedirect\";var mapStateToProps=function mapStateToProps(state){return{dialogsPage:state.dialogsPage,newMessage:state.dialogsPage.newMessage};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{addMessage:function addMessage(text){dispatch(AddMessage(text));},onChangeMessage:function onChangeMessage(newMessage){dispatch(NewMessage(newMessage));}};};export default compose(connect(mapStateToProps,mapDispatchToProps),withAuthRedirect)(Dialogs);","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/social-network/src/components/Dialogs/DialogsContainer.tsx"],"names":["AddMessage","NewMessage","Dialogs","connect","compose","withAuthRedirect","mapStateToProps","state","dialogsPage","newMessage","mapDispatchToProps","dispatch","addMessage","text","onChangeMessage"],"mappings":"AACA,OAAQA,UAAR,CAAqCC,UAArC,KAAsD,4BAAtD,CACA,OAAQC,OAAR,KAAsB,WAAtB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,OAAR,KAAgC,OAAhC,CAEA,MAAOC,CAAAA,gBAAP,KAA6B,4BAA7B,CAcA,GAAIC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAA4C,CAC9D,MAAO,CACHC,WAAW,CAAED,KAAK,CAACC,WADhB,CAEHC,UAAU,CAAEF,KAAK,CAACC,WAAN,CAAkBC,UAF3B,CAAP,CAIH,CALD,CAMA,GAAIC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAA8C,CACnE,MAAO,CACHC,UAAU,CAAE,oBAACC,IAAD,CAAkB,CAC1BF,QAAQ,CAACX,UAAU,CAACa,IAAD,CAAX,CAAR,CACH,CAHE,CAIHC,eAAe,CAAE,yBAACL,UAAD,CAAwB,CACrCE,QAAQ,CAACV,UAAU,CAACQ,UAAD,CAAX,CAAR,CACH,CANE,CAAP,CAQH,CATD,CAWA,cAAeL,CAAAA,OAAO,CAClBD,OAAO,CAACG,eAAD,CAAkBI,kBAAlB,CADW,CAElBL,gBAFkB,CAAP,CAGbH,OAHa,CAAf","sourcesContent":["import React from 'react';\nimport {AddMessage, DialogsPageType, NewMessage} from \"../../redux/dialogsReducer\";\nimport {Dialogs} from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {compose, Dispatch} from \"redux\";\nimport {AppStateType} from \"../../redux/reduxStore\";\nimport withAuthRedirect from \"../../hoc/WithAuthRedirect\";\n\ntype MapStatePropsType = {\n    dialogsPage: DialogsPageType\n    newMessage: string\n}\n\ntype MapDispatchPropsType = {\n    addMessage: (text: string) => void\n    onChangeMessage: (newMessage: string) => void\n}\n\nexport type DialogsPropsType = MapStatePropsType & MapDispatchPropsType\n\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        dialogsPage: state.dialogsPage,\n        newMessage: state.dialogsPage.newMessage\n    }\n}\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\n    return {\n        addMessage: (text: string) => {\n            dispatch(AddMessage(text));\n        },\n        onChangeMessage: (newMessage: string) => {\n            dispatch(NewMessage(newMessage))\n        }\n    }\n}\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs)\n"]},"metadata":{},"sourceType":"module"}