{"ast":null,"code":"import _asyncToGenerator from\"/Users/eduardanaida/Documents/GitHub/social-network/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _objectSpread from\"/Users/eduardanaida/Documents/GitHub/social-network/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"/Users/eduardanaida/Documents/GitHub/social-network/node_modules/@babel/runtime/regenerator/index.js\";import{authAPI,securityAPI}from\"../api/api\";import{stopSubmit}from\"redux-form\";var SET_USER_DATA=\"AUTH/SET_USER_DATA\";var GET_CAPTCHA_URL='AUTH/GET_CAPTCHA_URL';var initialState={id:null,email:null,login:null,isAuth:false,captchaUrl:null};export var authReducer=function authReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case SET_USER_DATA:return _objectSpread(_objectSpread({},state),action.payload);case GET_CAPTCHA_URL:return _objectSpread(_objectSpread({},state),{},{captchaUrl:action.captchaUrl});default:return state;}};export var setUserData=function setUserData(id,email,login,isAuth){return{type:SET_USER_DATA,payload:{id:id,email:email,login:login,isAuth:isAuth}};};export var getCaptchaUrl=function getCaptchaUrl(captchaUrl){return{type:GET_CAPTCHA_URL,captchaUrl:captchaUrl};};export var getAuthUserData=function getAuthUserData(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var response,_response$data$data,id,email,_login;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return authAPI.authMe();case 2:response=_context.sent;if(response.data.resultCode===0){_response$data$data=response.data.data,id=_response$data$data.id,email=_response$data$data.email,_login=_response$data$data.login;dispatch(setUserData(id,email,_login,true));};case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var login=function login(email,password,rememberMe,captcha){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return authAPI.login(email,password,rememberMe,captcha);case 2:response=_context2.sent;if(response.data.resultCode===0){dispatch(getAuthUserData());}else{if(response.data.resultCode===10){dispatch(getCaptcha());}if(response.data.messages.length>0){dispatch(stopSubmit('email',{_error:response.data.messages}));}}case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var logout=function logout(){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return authAPI.logout();case 2:response=_context3.sent;if(response.data.resultCode===0){dispatch(setUserData(null,null,null,false));}case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var getCaptcha=function getCaptcha(){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var response,captchaUrl;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return securityAPI.getCaptcha();case 2:response=_context4.sent;captchaUrl=response.data.url;dispatch(getCaptchaUrl(captchaUrl));dispatch(stopSubmit('login',{_error:response.data.messages}));case 6:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x4){return _ref4.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/social-network/src/redux/authReducer.ts"],"names":["authAPI","securityAPI","stopSubmit","SET_USER_DATA","GET_CAPTCHA_URL","initialState","id","email","login","isAuth","captchaUrl","authReducer","state","action","type","payload","setUserData","getCaptchaUrl","getAuthUserData","dispatch","authMe","response","data","resultCode","password","rememberMe","captcha","getCaptcha","messages","length","_error","logout","url"],"mappings":"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","sourcesContent":["import {Dispatch} from \"redux\";\nimport {authAPI, securityAPI} from \"../api/api\";\nimport {DispatchType} from \"./reduxStore\";\nimport {stopSubmit} from \"redux-form\";\n\nexport type authReducersActionType =\n  | ReturnType<typeof setUserData>\n  | ReturnType<typeof getCaptchaUrl>\n\nconst SET_USER_DATA = \"AUTH/SET_USER_DATA\";\nconst GET_CAPTCHA_URL = 'AUTH/GET_CAPTCHA_URL'\n\nexport type UserDataType = {\n  id: number | null,\n  email: string | null,\n  login: string | null\n  isAuth: boolean\n  captchaUrl: string | null\n}\n\nconst initialState = {\n  id: null,\n  email: null,\n  login: null,\n  isAuth: false,\n  captchaUrl: null\n}\n\n\nexport const authReducer = (state: UserDataType = initialState, action: authReducersActionType): UserDataType => {\n  switch (action.type) {\n    case SET_USER_DATA:\n      return {\n        ...state,\n        ...action.payload\n      }\n    case GET_CAPTCHA_URL:\n      return {\n        ...state,\n        captchaUrl: action.captchaUrl\n      }\n    default:\n      return state;\n  }\n};\n\nexport const setUserData = (id: number | null, email: string | null, login: string | null, isAuth: boolean) => ({\n    type: SET_USER_DATA,\n    payload: {id, email, login, isAuth}\n  } as const\n)\n\nexport const getCaptchaUrl = (captchaUrl: string) => {\n  return {\n    type: GET_CAPTCHA_URL,\n    captchaUrl: captchaUrl\n  } as const\n}\n\nexport const getAuthUserData = () => {\n  return async (dispatch: Dispatch) => {\n    let response = await authAPI.authMe()\n\n    if (response.data.resultCode === 0) {\n      let {id, email, login} = response.data.data;\n      dispatch(setUserData(id, email, login, true))\n    }\n    ;\n  }\n}\n\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string) => {\n\n  return async (dispatch: DispatchType) => {\n    let response = await authAPI.login(email, password, rememberMe, captcha)\n\n    if (response.data.resultCode === 0) {\n      dispatch(getAuthUserData())\n    } else {\n      if (response.data.resultCode === 10) {\n        dispatch(getCaptcha())\n      }\n      if (response.data.messages.length > 0) {\n        dispatch(stopSubmit('email', {_error: response.data.messages}));\n      }\n    }\n\n  }\n}\n\nexport const logout = () => {\n  return async (dispatch: Dispatch) => {\n    let response = await authAPI.logout()\n\n    if (response.data.resultCode === 0) {\n      dispatch(setUserData(null, null, null, false))\n    }\n  }\n}\n\nexport const getCaptcha = () => {\n  return async (dispatch: Dispatch) => {\n    const response = await securityAPI.getCaptcha()\n    const captchaUrl = response.data.url\n\n    dispatch(getCaptchaUrl(captchaUrl))\n    dispatch(stopSubmit('login', {_error: response.data.messages}))\n  }\n}"]},"metadata":{},"sourceType":"module"}