{"ast":null,"code":"import axios from\"axios\";var instance=axios.create({baseURL:'https://social-network.samuraijs.com/api/1.0/',withCredentials:true,headers:{'API-KEY':'c13fa168-cea5-4630-847d-9c0d00665f01'}});export var usersAPI={getUsersData:function getUsersData(currentPage,pageSize){return instance.get(\"users?page=\".concat(currentPage,\"&count=\").concat(pageSize)).then(function(response){return response.data;});},unfollowUsers:function unfollowUsers(id){return instance.delete(\"follow/\".concat(id)).then(function(response){return response.data;});},followUsers:function followUsers(id){return instance.post(\"follow/\".concat(id)).then(function(response){return response.data;});}};export var profileAPI={getProfile:function getProfile(userId){return instance.get(\"profile/\"+userId);},getStatus:function getStatus(userId){return instance.get(\"profile/status/\".concat(userId));},updateStatus:function updateStatus(status){return instance.put('profile/status',{status:status});},saveProfile:function saveProfile(profile){return instance.put('profile',profile);},savePhoto:function savePhoto(file){var formData=new FormData();formData.append('image',file);return instance.put('profile/photo',formData,{headers:{'Content-Type':'multipart/form-data'}});}};export var authAPI={authMe:function authMe(){return instance.get('auth/me');},login:function login(email,password,rememberMe,captcha){return instance.post('auth/login',{email:email,password:password,rememberMe:rememberMe,captcha:captcha});},logout:function logout(){return instance.delete('auth/login');}};export var securityAPI={getCaptcha:function getCaptcha(){return instance.get(\"security/get-captcha-url\");}};","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/social-network/src/api/api.tsx"],"names":["axios","instance","create","baseURL","withCredentials","headers","usersAPI","getUsersData","currentPage","pageSize","get","then","response","data","unfollowUsers","id","delete","followUsers","post","profileAPI","getProfile","userId","getStatus","updateStatus","status","put","saveProfile","profile","savePhoto","file","formData","FormData","append","authAPI","authMe","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptcha"],"mappings":"AACA,MAAOA,CAAAA,KAAP,KAAmC,OAAnC,CAGA,GAAMC,CAAAA,QAAQ,CAAGD,KAAK,CAACE,MAAN,CAAa,CAC5BC,OAAO,CAAE,+CADmB,CAE5BC,eAAe,CAAE,IAFW,CAG5BC,OAAO,CAAE,CAAC,UAAW,sCAAZ,CAHmB,CAAb,CAAjB,CAMA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,CACtBC,YADsB,uBACTC,WADS,CACYC,QADZ,CAC8B,CAClD,MAAOR,CAAAA,QAAQ,CAACS,GAAT,sBAA2BF,WAA3B,mBAAgDC,QAAhD,GACJE,IADI,CACC,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAb,EADT,CAAP,CAED,CAJqB,CAKtBC,aALsB,wBAKRC,EALQ,CAKI,CACxB,MAAOd,CAAAA,QAAQ,CAACe,MAAT,kBAAgED,EAAhE,GAAsEJ,IAAtE,CAA2E,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAb,EAAnF,CAAP,CACD,CAPqB,CAQtBI,WARsB,sBAQVF,EARU,CAQE,CACtB,MAAOd,CAAAA,QAAQ,CAACiB,IAAT,kBAA8DH,EAA9D,GAAoEJ,IAApE,CAAyE,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAb,EAAjF,CAAP,CACD,CAVqB,CAAjB,CAcP,MAAO,IAAMM,CAAAA,UAAU,CAAG,CACxBC,UADwB,qBACbC,MADa,CACU,CAChC,MAAOpB,CAAAA,QAAQ,CAACS,GAAT,CAAa,WAAaW,MAA1B,CAAP,CACD,CAHuB,CAIxBC,SAJwB,oBAIdD,MAJc,CAIE,CACxB,MAAOpB,CAAAA,QAAQ,CAACS,GAAT,0BAA+BW,MAA/B,EAAP,CACD,CANuB,CAOxBE,YAPwB,uBAOXC,MAPW,CAOK,CAC3B,MAAOvB,CAAAA,QAAQ,CAACwB,GAAT,CAAa,gBAAb,CAA+B,CAACD,MAAM,CAAEA,MAAT,CAA/B,CAAP,CACD,CATuB,CAUxBE,WAVwB,sBAUZC,OAVY,CAUiB,CACvC,MAAO1B,CAAAA,QAAQ,CAACwB,GAAT,CAAa,SAAb,CAAwBE,OAAxB,CAAP,CACD,CAZuB,CAaxBC,SAbwB,oBAadC,IAbc,CAaF,CACpB,GAAMC,CAAAA,QAAQ,CAAG,GAAIC,CAAAA,QAAJ,EAAjB,CACAD,QAAQ,CAACE,MAAT,CAAgB,OAAhB,CAAyBH,IAAzB,EAEA,MAAO5B,CAAAA,QAAQ,CAACwB,GAAT,CAAa,eAAb,CAA8BK,QAA9B,CAAwC,CAC7CzB,OAAO,CAAE,CACP,eAAgB,qBADT,CADoC,CAAxC,CAAP,CAKD,CAtBuB,CAAnB,CAwBP,MAAO,IAAM4B,CAAAA,OAAO,CAAG,CACrBC,MADqB,kBACZ,CACP,MAAOjC,CAAAA,QAAQ,CAACS,GAAT,CAAa,SAAb,CAAP,CACD,CAHoB,CAIrByB,KAJqB,gBAIfC,KAJe,CAIAC,QAJA,CAIkBC,UAJlB,CAIuCC,OAJvC,CAIwD,CAC3E,MAAOtC,CAAAA,QAAQ,CAACiB,IAAT,CAAc,YAAd,CAA4B,CAACkB,KAAK,CAALA,KAAD,CAAQC,QAAQ,CAARA,QAAR,CAAkBC,UAAU,CAAVA,UAAlB,CAA8BC,OAAO,CAAPA,OAA9B,CAA5B,CAAP,CACD,CANoB,CAOrBC,MAPqB,kBAOZ,CACP,MAAOvC,CAAAA,QAAQ,CAACe,MAAT,CAAgB,YAAhB,CAAP,CACD,CAToB,CAAhB,CAYP,MAAO,IAAMyB,CAAAA,WAAW,CAAG,CACzBC,UADyB,sBACb,CACV,MAAOzC,CAAAA,QAAQ,CAACS,GAAT,4BAAP,CACD,CAHwB,CAApB","sourcesContent":["import React from 'react';\nimport axios, {AxiosResponse} from \"axios\";\n\n\nconst instance = axios.create({\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n  withCredentials: true,\n  headers: {'API-KEY': 'c13fa168-cea5-4630-847d-9c0d00665f01'}\n});\n\nexport const usersAPI = {\n  getUsersData(currentPage: number, pageSize: number) {\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`,)\n      .then(response => response.data);\n  },\n  unfollowUsers(id: number) {\n    return instance.delete<any, AxiosResponse<ResponseUserType>>(`follow/${id}`).then(response => response.data);\n  },\n  followUsers(id: number) {\n    return instance.post<any, AxiosResponse<ResponseUserType>>(`follow/${id}`).then(response => response.data);\n  },\n}\n\n\nexport const profileAPI = {\n  getProfile(userId: number | null) {\n    return instance.get(`profile/` + userId);\n  },\n  getStatus(userId: string) {\n    return instance.get(`profile/status/${userId}`);\n  },\n  updateStatus(status: string) {\n    return instance.put('profile/status', {status: status});\n  },\n  saveProfile(profile: ProfileRequestType) {\n    return instance.put('profile', profile);\n  },\n  savePhoto(file: File) {\n    const formData = new FormData();\n    formData.append('image', file)\n\n    return instance.put('profile/photo', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    })\n  }\n}\nexport const authAPI = {\n  authMe() {\n    return instance.get('auth/me');\n  },\n  login(email: string, password: string, rememberMe: boolean, captcha: string) {\n    return instance.post('auth/login', {email, password, rememberMe, captcha});\n  },\n  logout() {\n    return instance.delete('auth/login');\n  }\n}\n\nexport const securityAPI = {\n  getCaptcha(){\n    return instance.get(`security/get-captcha-url`)\n  }\n}\n\nexport type ResponseUserType<T = {}> = {\n  data: T,\n  messages: string[],\n  fieldsErrors: string[],\n  resultCode: number\n}\n\nexport type ProfileRequestType = {\n  userId: number,\n  lookingForAJob: boolean,\n  lookingForAJobDescription: string,\n  fullName: string,\n  aboutMe: string,\n  contacts: ContactsType\n}\n\nexport type ContactsType = {\n  github: string,\n  vk: string,\n  facebook: string,\n  instagram: string,\n  twitter: string,\n  website: string,\n  youtube: string,\n  mainLink: string\n}"]},"metadata":{},"sourceType":"module"}