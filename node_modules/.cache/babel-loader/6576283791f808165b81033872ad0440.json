{"ast":null,"code":"import _objectSpread from\"/Users/eduardanaida/Documents/GitHub/social-network/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React from'react';import{Field}from\"redux-form\";import styles from'./FormControls.module.css';import{TextField}from\"@mui/material\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FormControl=function FormControl(props){var hasError=props.meta.touched&&props.meta.error;return/*#__PURE__*/_jsxs(\"div\",{className:styles.formControl+' '+(hasError?styles.error:''),children:[/*#__PURE__*/_jsx(\"div\",{children:props.children}),hasError&&/*#__PURE__*/_jsx(\"span\",{children:props.meta.error})]});};export var TextArea=function TextArea(props){return/*#__PURE__*/_jsx(FormControl,_objectSpread(_objectSpread({},props),{},{children:/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({inputProps:{style:{width:500}},multiline:true,rows:2},props.input),props))}));};export var InputArea=function InputArea(props){return/*#__PURE__*/_jsx(FormControl,_objectSpread(_objectSpread({},props),{},{children:/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({inputProps:{style:{padding:3}}},props.input),props))}));};export var CheckBox=function CheckBox(props){return/*#__PURE__*/_jsx(FormControl,_objectSpread(_objectSpread({},props),{},{children:/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({type:'checkbox'},props.input),props))}));};export var createField=function createField(placeholder,name,validators){var props=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};var text=arguments.length>4&&arguments[4]!==undefined?arguments[4]:'';var component=arguments.length>5?arguments[5]:undefined;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Field,_objectSpread({placeholder:placeholder,name:name,component:component,validate:validators},props)),\" \",text]});};","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/social-network/src/components/common/formControls/formControl.tsx"],"names":["React","Field","styles","TextField","FormControl","props","hasError","meta","touched","error","formControl","children","TextArea","style","width","input","InputArea","padding","CheckBox","createField","placeholder","name","validators","text","component"],"mappings":"wIAAA,MAAOA,CAAAA,KAAP,KAA2D,OAA3D,CACA,OAAQC,KAAR,KAAsF,YAAtF,CACA,MAAOC,CAAAA,MAAP,KAAmB,2BAAnB,CACA,OAAeC,SAAf,KAA+B,eAA/B,C,wFAWA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAyB,CAC3C,GAAMC,CAAAA,QAAQ,CAAGD,KAAK,CAACE,IAAN,CAAWC,OAAX,EAAsBH,KAAK,CAACE,IAAN,CAAWE,KAAlD,CACA,mBACE,aAAK,SAAS,CAAEP,MAAM,CAACQ,WAAP,CAAqB,GAArB,EAA4BJ,QAAQ,CAAGJ,MAAM,CAACO,KAAV,CAAkB,EAAtD,CAAhB,wBACE,qBACGJ,KAAK,CAACM,QADT,EADF,CAIKL,QAAQ,eAAI,sBAAOD,KAAK,CAACE,IAAN,CAAWE,KAAlB,EAJjB,GADF,CAQD,CAVD,CAYA,MAAO,IAAMG,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACP,KAAD,CAAyB,CAC/C,mBAAO,KAAC,WAAD,gCAAiBA,KAAjB,4BAAwB,KAAC,SAAD,8BAC7B,UAAU,CAAE,CACVQ,KAAK,CAAE,CACLC,KAAK,CAAE,GADF,CADG,CADiB,CAM7B,SAAS,KANoB,CAO7B,IAAI,CAAE,CAPuB,EAQzBT,KAAK,CAACU,KARmB,EASzBV,KATyB,EAAxB,GAAP,CAWD,CAZM,CAcP,MAAO,IAAMW,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACX,KAAD,CAAyB,CAChD,mBAAO,KAAC,WAAD,gCAAiBA,KAAjB,4BAAwB,KAAC,SAAD,8BAC7B,UAAU,CAAE,CACVQ,KAAK,CAAE,CACLI,OAAO,CAAE,CADJ,CADG,CADiB,EAMzBZ,KAAK,CAACU,KANmB,EAOzBV,KAPyB,EAAxB,GAAP,CASD,CAVM,CAYP,MAAO,IAAMa,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACb,KAAD,CAAyB,CAC/C,mBAAO,KAAC,WAAD,gCAAiBA,KAAjB,4BAAwB,0CAAO,IAAI,CAAE,UAAb,EAA6BA,KAAK,CAACU,KAAnC,EAA8CV,KAA9C,EAAxB,GAAP,CACD,CAFM,CAIP,MAAO,IAAMc,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,WAAD,CACCC,IADD,CAECC,UAFD,CAKtB,IAFuBjB,CAAAA,KAEvB,2DAF+B,EAE/B,IAFmCkB,CAAAA,IAEnC,2DAF0C,EAE1C,IADuBC,CAAAA,SACvB,2CACH,mBACE,oCACE,KAAC,KAAD,gBAAO,WAAW,CAAEJ,WAApB,CACO,IAAI,CAAEC,IADb,CAEO,SAAS,CAAEG,SAFlB,CAGO,QAAQ,CAAEF,UAHjB,EAIWjB,KAJX,EADF,KAMMkB,IANN,GADF,CAUD,CAhBM","sourcesContent":["import React, {ComponentType, HTMLInputTypeAttribute} from 'react';\nimport {Field, WrappedFieldInputProps, WrappedFieldMetaProps, WrappedFieldProps} from \"redux-form\";\nimport styles from './FormControls.module.css'\nimport {Input, TextField} from \"@mui/material\";\n\ntype FormsControl = {\n  input: WrappedFieldInputProps,\n  meta: WrappedFieldMetaProps,\n  placeholder?: string,\n  type?: HTMLInputTypeAttribute,\n  autoFocuse?: boolean,\n  children?: JSX.Element\n}\n\nconst FormControl = (props: FormsControl) => {\n  const hasError = props.meta.touched && props.meta.error\n  return (\n    <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\n      <div>\n        {props.children}\n      </div>\n        {hasError && <span>{props.meta.error}</span>}\n    </div>\n  );\n}\n\nexport const TextArea = (props: FormsControl) => {\n  return <FormControl {...props}><TextField\n    inputProps={{\n      style: {\n        width: 500\n      }\n    }}\n    multiline\n    rows={2}\n    {...props.input}\n    {...props}\n  /></FormControl>\n};\n\nexport const InputArea = (props: FormsControl) => {\n  return <FormControl {...props}><TextField\n    inputProps={{\n      style: {\n        padding: 3\n      }\n    }}\n    {...props.input}\n    {...props}\n  /></FormControl>\n};\n\nexport const CheckBox = (props: FormsControl) => {\n  return <FormControl {...props}><input type={'checkbox'} {...props.input} {...props}/></FormControl>\n};\n\nexport const createField = (placeholder: string | null,\n                            name: string,\n                            validators: ((value: string) => string | undefined)[],\n                            props = {}, text = '',\n                            component?: ComponentType<WrappedFieldProps & Omit<any, keyof WrappedFieldProps>> | 'input' | 'select' | 'textarea'\n) => {\n  return (\n    <div>\n      <Field placeholder={placeholder}\n             name={name}\n             component={component}\n             validate={validators}\n             {...props}\n      /> {text}\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}