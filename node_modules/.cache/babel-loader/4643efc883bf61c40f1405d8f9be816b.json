{"ast":null,"code":"import{AddPostAC}from\"../../../redux/profileReducer\";import{MyPosts}from\"./MyPosts\";import{connect}from\"react-redux\";var mapStateToProps=function mapStateToProps(state){return{profilePage:state.profilePage,newTextValue:state.profilePage.newTextValue};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{addPostCallback:function addPostCallback(newTextValue){dispatch(AddPostAC(newTextValue));}};};export var MyPostsContainer=connect(mapStateToProps,mapDispatchToProps)(MyPosts);","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/social-network/src/components/Profile/MyPosts/MyPostsContainer.tsx"],"names":["AddPostAC","MyPosts","connect","mapStateToProps","state","profilePage","newTextValue","mapDispatchToProps","dispatch","addPostCallback","MyPostsContainer"],"mappings":"AACA,OAAQA,SAAR,KAAyC,+BAAzC,CACA,OAAQC,OAAR,KAAsB,WAAtB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CAgBA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAA4C,CAClE,MAAO,CACLC,WAAW,CAAED,KAAK,CAACC,WADd,CAELC,YAAY,CAAEF,KAAK,CAACC,WAAN,CAAkBC,YAF3B,CAAP,CAID,CALD,CAOA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAA8C,CACvE,MAAO,CACLC,eAAe,CAAE,yBAACH,YAAD,CAA0B,CACzCE,QAAQ,CAACR,SAAS,CAACM,YAAD,CAAV,CAAR,CACD,CAHI,CAAP,CAKD,CAND,CAQA,MAAO,IAAMI,CAAAA,gBAAgB,CAAGR,OAAO,CAACC,eAAD,CAAkBI,kBAAlB,CAAP,CAA6CN,OAA7C,CAAzB","sourcesContent":["import React from 'react';\nimport {AddPostAC, ProfilePageType} from \"../../../redux/profileReducer\";\nimport {MyPosts} from \"./MyPosts\";\nimport {connect} from \"react-redux\";\nimport {Dispatch} from \"redux\";\nimport {AppStateType} from \"../../../redux/reduxStore\";\n\n\ntype MapStatePropsType = {\n  profilePage: ProfilePageType\n  newTextValue: string\n}\n\ntype MapDispatchPropsType = {\n  addPostCallback: (newTextValue: string) => void\n}\n\nexport type ProfilePropsType = MapStatePropsType & MapDispatchPropsType\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n  return {\n    profilePage: state.profilePage,\n    newTextValue: state.profilePage.newTextValue\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\n  return {\n    addPostCallback: (newTextValue: string) => {\n      dispatch(AddPostAC(newTextValue));\n    }\n  }\n}\n\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);"]},"metadata":{},"sourceType":"module"}