{"ast":null,"code":"import axios from \"axios\";\nconst instance = axios.create({\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n  withCredentials: true,\n  headers: {\n    'API-KEY': 'c13fa168-cea5-4630-847d-9c0d00665f01'\n  }\n});\nexport const usersAPI = {\n  getUsersData(currentPage, pageSize) {\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data);\n  },\n\n  unfollowUsers(id) {\n    return instance.delete(`follow/${id}`).then(response => response.data);\n  },\n\n  followUsers(id) {\n    return instance.post(`follow/${id}`).then(response => response.data);\n  },\n\n  getProfile(userId) {\n    return profileAPI.getProfile(userId);\n  }\n\n};\nexport const profileAPI = {\n  getProfile(userId) {\n    return instance.get(`profile/` + userId);\n  },\n\n  getStatus(userId) {\n    return instance.get(`profile/status/${userId}`);\n  },\n\n  updateStatus(status) {\n    return instance.put('profile/status', {\n      status: status\n    });\n  },\n\n  saveProfile(profile) {\n    return instance.put('profile', {\n      profile: profile\n    });\n  }\n\n};\nexport const authAPI = {\n  authMe() {\n    return instance.get('auth/me');\n  },\n\n  login(email, password, rememberMe, captcha) {\n    return instance.post('auth/login', {\n      email,\n      password,\n      rememberMe,\n      captcha\n    });\n  },\n\n  logout() {\n    return instance.delete('auth/login');\n  }\n\n};","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/social-network/src/api/api.tsx"],"names":["axios","instance","create","baseURL","withCredentials","headers","usersAPI","getUsersData","currentPage","pageSize","get","then","response","data","unfollowUsers","id","delete","followUsers","post","getProfile","userId","profileAPI","getStatus","updateStatus","status","put","saveProfile","profile","authAPI","authMe","login","email","password","rememberMe","captcha","logout"],"mappings":"AACA,OAAOA,KAAP,MAAmC,OAAnC;AAGA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAE,+CADmB;AAE5BC,EAAAA,eAAe,EAAE,IAFW;AAG5BC,EAAAA,OAAO,EAAE;AAAC,eAAW;AAAZ;AAHmB,CAAb,CAAjB;AAMA,OAAO,MAAMC,QAAQ,GAAG;AACtBC,EAAAA,YAAY,CAACC,WAAD,EAAsBC,QAAtB,EAAwC;AAClD,WAAOR,QAAQ,CAACS,GAAT,CAAc,cAAaF,WAAY,UAASC,QAAS,EAAzD,EACJE,IADI,CACCC,QAAQ,IAAIA,QAAQ,CAACC,IADtB,CAAP;AAED,GAJqB;;AAKtBC,EAAAA,aAAa,CAACC,EAAD,EAAa;AACxB,WAAOd,QAAQ,CAACe,MAAT,CAAuD,UAASD,EAAG,EAAnE,EAAsEJ,IAAtE,CAA2EC,QAAQ,IAAIA,QAAQ,CAACC,IAAhG,CAAP;AACD,GAPqB;;AAQtBI,EAAAA,WAAW,CAACF,EAAD,EAAa;AACtB,WAAOd,QAAQ,CAACiB,IAAT,CAAqD,UAASH,EAAG,EAAjE,EAAoEJ,IAApE,CAAyEC,QAAQ,IAAIA,QAAQ,CAACC,IAA9F,CAAP;AACD,GAVqB;;AAWtBM,EAAAA,UAAU,CAACC,MAAD,EAAiB;AACzB,WAAOC,UAAU,CAACF,UAAX,CAAsBC,MAAtB,CAAP;AACD;;AAbqB,CAAjB;AAiBP,OAAO,MAAMC,UAAU,GAAG;AACxBF,EAAAA,UAAU,CAACC,MAAD,EAAiB;AACzB,WAAOnB,QAAQ,CAACS,GAAT,CAAc,UAAD,GAAaU,MAA1B,CAAP;AACD,GAHuB;;AAIxBE,EAAAA,SAAS,CAACF,MAAD,EAAiB;AACxB,WAAOnB,QAAQ,CAACS,GAAT,CAAc,kBAAiBU,MAAO,EAAtC,CAAP;AACD,GANuB;;AAOxBG,EAAAA,YAAY,CAACC,MAAD,EAAiB;AAC3B,WAAOvB,QAAQ,CAACwB,GAAT,CAAa,gBAAb,EAA+B;AAACD,MAAAA,MAAM,EAAEA;AAAT,KAA/B,CAAP;AACD,GATuB;;AAUxBE,EAAAA,WAAW,CAACC,OAAD,EAAe;AACxB,WAAO1B,QAAQ,CAACwB,GAAT,CAAa,SAAb,EAAwB;AAACE,MAAAA,OAAO,EAAEA;AAAV,KAAxB,CAAP;AACD;;AAZuB,CAAnB;AAcP,OAAO,MAAMC,OAAO,GAAG;AACrBC,EAAAA,MAAM,GAAG;AACP,WAAO5B,QAAQ,CAACS,GAAT,CAAa,SAAb,CAAP;AACD,GAHoB;;AAIrBoB,EAAAA,KAAK,CAACC,KAAD,EAAgBC,QAAhB,EAAkCC,UAAlC,EAAuDC,OAAvD,EAAyE;AAC5E,WAAOjC,QAAQ,CAACiB,IAAT,CAAc,YAAd,EAA4B;AAACa,MAAAA,KAAD;AAAQC,MAAAA,QAAR;AAAkBC,MAAAA,UAAlB;AAA8BC,MAAAA;AAA9B,KAA5B,CAAP;AACD,GANoB;;AAOrBC,EAAAA,MAAM,GAAG;AACP,WAAOlC,QAAQ,CAACe,MAAT,CAAgB,YAAhB,CAAP;AACD;;AAToB,CAAhB","sourcesContent":["import React from 'react';\nimport axios, {AxiosResponse} from \"axios\";\n\n\nconst instance = axios.create({\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n  withCredentials: true,\n  headers: {'API-KEY': 'c13fa168-cea5-4630-847d-9c0d00665f01'}\n});\n\nexport const usersAPI = {\n  getUsersData(currentPage: number, pageSize: number) {\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`,)\n      .then(response => response.data);\n  },\n  unfollowUsers(id: number) {\n    return instance.delete<any, AxiosResponse<ResponseUserType>>(`follow/${id}`).then(response => response.data);\n  },\n  followUsers(id: number) {\n    return instance.post<any, AxiosResponse<ResponseUserType>>(`follow/${id}`).then(response => response.data);\n  },\n  getProfile(userId: string) {\n    return profileAPI.getProfile(userId)\n  }\n}\n\n\nexport const profileAPI = {\n  getProfile(userId: string) {\n    return instance.get(`profile/` + userId);\n  },\n  getStatus(userId: string) {\n    return instance.get(`profile/status/${userId}`);\n  },\n  updateStatus(status: string) {\n    return instance.put('profile/status', {status: status});\n  },\n  saveProfile(profile: any) {\n    return instance.put('profile', {profile: profile});\n  }\n}\nexport const authAPI = {\n  authMe() {\n    return instance.get('auth/me');\n  },\n  login(email: string, password: string, rememberMe: boolean, captcha: boolean) {\n    return instance.post('auth/login', {email, password, rememberMe, captcha});\n  },\n  logout() {\n    return instance.delete('auth/login');\n  }\n}\n\nexport type ResponseUserType<T = {}> = {\n  data: T,\n  messages: string[],\n  fieldsErrors: string[],\n  resultCode: number\n}"]},"metadata":{},"sourceType":"module"}