{"ast":null,"code":"var _jsxFileName = \"/Users/eduardanaida/Documents/GitHub/social-network/src/components/Profile/MyPosts/MyPosts.tsx\";\nimport React from 'react';\nimport s from './MyPosts.module.css';\nimport { Post } from \"./Post/Post\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { maxLengthCreator, requiredField } from \"../../../utils/validators/validators\";\nimport { TextArea } from \"../../common/formControls/formControl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst maxLength = maxLengthCreator(10);\n\nconst MyPostForm = props => {\n  console.log(\"RENDER \");\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        placeholder: 'Write your new post',\n        name: 'text',\n        component: TextArea,\n        validate: [requiredField, maxLength]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MyPostForm;\nconst PostReduxForm = reduxForm({\n  form: 'text'\n})(MyPostForm);\n_c2 = PostReduxForm;\nexport const MyPosts = /*#__PURE__*/React.memo(_c3 = props => {\n  console.log(\"RENDER POST\");\n  let getPostData = props.profilePage.postData.map((ev, id) => {\n    return /*#__PURE__*/_jsxDEV(Post, {\n      name: ev.name,\n      message: ev.message,\n      likes: ev.likes\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  });\n\n  const addPost = newTextValue => {\n    props.addPostCallback(newTextValue.text);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.posts,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"My posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostReduxForm, {\n      onSubmit: addPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), getPostData]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n});\n_c4 = MyPosts;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"MyPostForm\");\n$RefreshReg$(_c2, \"PostReduxForm\");\n$RefreshReg$(_c3, \"MyPosts$React.memo\");\n$RefreshReg$(_c4, \"MyPosts\");","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/social-network/src/components/Profile/MyPosts/MyPosts.tsx"],"names":["React","s","Post","Field","reduxForm","maxLengthCreator","requiredField","TextArea","maxLength","MyPostForm","props","console","log","handleSubmit","PostReduxForm","form","MyPosts","memo","getPostData","profilePage","postData","map","ev","id","name","message","likes","addPost","newTextValue","addPostCallback","text","posts"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,SAAQC,IAAR,QAAmB,aAAnB;AAEA,SAAQC,KAAR,EAAkCC,SAAlC,QAAkD,YAAlD;AACA,SAAQC,gBAAR,EAA0BC,aAA1B,QAA8C,sCAA9C;AACA,SAAQC,QAAR,QAAuB,uCAAvB;;AAMA,MAAMC,SAAS,GAAGH,gBAAgB,CAAC,EAAD,CAAlC;;AAEA,MAAMI,UAAqD,GAAIC,KAAD,IAAY;AAExEC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAEF,KAAK,CAACG,YAAtB;AAAA,4BACE;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,WAAW,EAAE,qBAApB;AACO,QAAA,IAAI,EAAE,MADb;AAEO,QAAA,SAAS,EAAEN,QAFlB;AAGO,QAAA,QAAQ,EAAE,CAACD,aAAD,EAAgBE,SAAhB;AAHjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAjBD;;KAAMC,U;AAoBN,MAAMK,aAAa,GAAGV,SAAS,CAAe;AAACW,EAAAA,IAAI,EAAE;AAAP,CAAf,CAAT,CAAwCN,UAAxC,CAAtB;MAAMK,a;AAGN,OAAO,MAAME,OAAO,gBAAGhB,KAAK,CAACiB,IAAN,OAA8BP,KAAD,IAAW;AAE7DC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,MAAIM,WAAW,GAAGR,KAAK,CAACS,WAAN,CAAkBC,QAAlB,CAA2BC,GAA3B,CAA+B,CAACC,EAAD,EAAKC,EAAL,KAAY;AAC3D,wBACE,QAAC,IAAD;AAAe,MAAA,IAAI,EAAED,EAAE,CAACE,IAAxB;AAA8B,MAAA,OAAO,EAAEF,EAAE,CAACG,OAA1C;AAAmD,MAAA,KAAK,EAAEH,EAAE,CAACI;AAA7D,OAAWH,EAAX;AAAA;AAAA;AAAA;AAAA,YADF;AAGD,GAJiB,CAAlB;;AAMA,QAAMI,OAAO,GAAIC,YAAD,IAAgC;AAC9ClB,IAAAA,KAAK,CAACmB,eAAN,CAAsBD,YAAY,CAACE,IAAnC;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAE7B,CAAC,CAAC8B,KAAlB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AAAe,MAAA,QAAQ,EAAEJ;AAAzB;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGT,WAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CApBsB,CAAhB;MAAMF,O","sourcesContent":["import React from 'react';\nimport s from './MyPosts.module.css';\nimport {Post} from \"./Post/Post\";\nimport {ProfilePropsType} from \"./MyPostsContainer\";\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\nimport {TextArea} from \"../../common/formControls/formControl\";\n\ntype FormDataType = {\n  text: string\n}\n\nconst maxLength = maxLengthCreator(10);\n\nconst MyPostForm: React.FC<InjectedFormProps<FormDataType>> = (props ) => {\n\n  console.log(\"RENDER \")\n\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field placeholder={'Write your new post'}\n               name={'text'}\n               component={TextArea}\n               validate={[requiredField, maxLength]}/>\n      </div>\n      <div>\n        <button>Add post</button>\n      </div>\n    </form>\n  );\n};\n\n\nconst PostReduxForm = reduxForm<FormDataType>({form: 'text'})(MyPostForm)\n\n\nexport const MyPosts = React.memo<ProfilePropsType>((props) => {\n\n  console.log(\"RENDER POST\")\n  let getPostData = props.profilePage.postData.map((ev, id) => {\n    return (\n      <Post key={id} name={ev.name} message={ev.message} likes={ev.likes}/>\n    )\n  })\n\n  const addPost = (newTextValue: FormDataType) => {\n    props.addPostCallback(newTextValue.text);\n  }\n\n  return (\n    <div className={s.posts}>\n      <h3>My posts</h3>\n      <PostReduxForm onSubmit={addPost}/>\n      {getPostData}\n    </div>\n  )\n});"]},"metadata":{},"sourceType":"module"}