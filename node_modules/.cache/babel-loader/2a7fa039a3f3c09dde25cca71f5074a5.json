{"ast":null,"code":"import { AddMessage, NewMessage } from \"../../redux/dialogsReducer\";\nimport { Dialogs } from \"./Dialogs\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport withAuthRedirect from \"../../hoc/WithAuthRedirect\"; // type DialogsType = {\n//     store: StoreType\n// }\n\n/*\nexport const DialogsContainer = (props: DialogsType) => {\n    let state = props.store.getState();\n\n    const addMessage = () => {\n        props.store.dispatch(AddMessage(state.dialogsPage.newMessage));\n    }\n\n    const onChangeMessage = (newMessage: string) => {\n        props.store.dispatch(NewMessage(newMessage))\n    }\n\n    return (\n\n        <div className={s.dialogs}>\n            <Dialogs addMessage={addMessage}\n                     onChangeMessage={onChangeMessage}\n                     dialogsPage={state.dialogsPage}/>\n\n        </div>\n    );\n};\n*/\n\nlet mapStateToProps = state => {\n  return {\n    dialogsPage: state.dialogsPage,\n    newMessage: state.dialogsPage.newMessage\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    addMessage: text => {\n      dispatch(AddMessage(text));\n    },\n    onChangeMessage: newMessage => {\n      dispatch(NewMessage(newMessage));\n    }\n  };\n}; // const AuthRedirectComponent = withAuthRedirect(Dialogs)\n//\n//\n// export const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\n\n\nexport default compose( //export default compose<React.FC>(\nconnect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs);","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/social-network/src/components/Dialogs/DialogsContainer.tsx"],"names":["AddMessage","NewMessage","Dialogs","connect","compose","withAuthRedirect","mapStateToProps","state","dialogsPage","newMessage","mapDispatchToProps","dispatch","addMessage","text","onChangeMessage"],"mappings":"AACA,SAAQA,UAAR,EAAqCC,UAArC,QAAsD,4BAAtD;AACA,SAAQC,OAAR,QAAsB,WAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,OAAR,QAAgC,OAAhC;AAEA,OAAOC,gBAAP,MAA6B,4BAA7B,C,CAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAcA,IAAIC,eAAe,GAAIC,KAAD,IAA4C;AAC9D,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACC,WADhB;AAEHC,IAAAA,UAAU,EAAEF,KAAK,CAACC,WAAN,CAAkBC;AAF3B,GAAP;AAIH,CALD;;AAMA,IAAIC,kBAAkB,GAAIC,QAAD,IAA8C;AACnE,SAAO;AACHC,IAAAA,UAAU,EAAGC,IAAD,IAAkB;AAC1BF,MAAAA,QAAQ,CAACX,UAAU,CAACa,IAAD,CAAX,CAAR;AACH,KAHE;AAIHC,IAAAA,eAAe,EAAGL,UAAD,IAAwB;AACrCE,MAAAA,QAAQ,CAACV,UAAU,CAACQ,UAAD,CAAX,CAAR;AACH;AANE,GAAP;AAQH,CATD,C,CAWA;AACA;AACA;AACA;;;AAEA,eAAeL,OAAO,EACtB;AACID,OAAO,CAACG,eAAD,EAAkBI,kBAAlB,CAFW,EAGlBL,gBAHkB,CAAP,CAIbH,OAJa,CAAf","sourcesContent":["import React from 'react';\nimport {AddMessage, DialogsPageType, NewMessage} from \"../../redux/dialogsReducer\";\nimport {Dialogs} from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {compose, Dispatch} from \"redux\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport withAuthRedirect from \"../../hoc/WithAuthRedirect\";\n\n// type DialogsType = {\n//     store: StoreType\n// }\n\n/*\nexport const DialogsContainer = (props: DialogsType) => {\n    let state = props.store.getState();\n\n    const addMessage = () => {\n        props.store.dispatch(AddMessage(state.dialogsPage.newMessage));\n    }\n\n    const onChangeMessage = (newMessage: string) => {\n        props.store.dispatch(NewMessage(newMessage))\n    }\n\n    return (\n\n        <div className={s.dialogs}>\n            <Dialogs addMessage={addMessage}\n                     onChangeMessage={onChangeMessage}\n                     dialogsPage={state.dialogsPage}/>\n\n        </div>\n    );\n};\n*/\n\ntype MapStatePropsType = {\n    dialogsPage: DialogsPageType\n    newMessage: string\n}\n\ntype MapDispatchPropsType = {\n    addMessage: (text: string) => void\n    onChangeMessage: (newMessage: string) => void\n}\n\nexport type DialogsPropsType = MapStatePropsType & MapDispatchPropsType\n\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        dialogsPage: state.dialogsPage,\n        newMessage: state.dialogsPage.newMessage\n    }\n}\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\n    return {\n        addMessage: (text: string) => {\n            dispatch(AddMessage(text));\n        },\n        onChangeMessage: (newMessage: string) => {\n            dispatch(NewMessage(newMessage))\n        }\n    }\n}\n\n// const AuthRedirectComponent = withAuthRedirect(Dialogs)\n//\n//\n// export const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\n\nexport default compose<React.ComponentType>(\n//export default compose<React.FC>(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs)\n"]},"metadata":{},"sourceType":"module"}