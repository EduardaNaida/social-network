{"ast":null,"code":"var _jsxFileName = \"/Users/eduardanaida/Documents/GitHub/social-network/src/components/Dialogs/Dialogs.tsx\";\nimport React from 'react';\nimport s from './Dialogs.module.css';\nimport { DialogItem } from \"./DialogItem/DialogItem\";\nimport { Message } from \"./Message/Message\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { maxLengthCreator, requiredField } from \"../../utils/validators/validators\";\nimport { TextArea } from \"../common/formControls/formControl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst maxLength = maxLengthCreator(50);\nexport const Dialogs = props => {\n  const dialog = props.dialogsPage.dialogsData.map((ev, index) => {\n    return /*#__PURE__*/_jsxDEV(DialogItem, {\n      id: ev.id,\n      name: ev.name\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  });\n  const message = props.dialogsPage.messageData.map((ev, index) => {\n    return /*#__PURE__*/_jsxDEV(Message, {\n      id: ev.id,\n      message: ev.message\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  });\n\n  const addMessage = newMessage => {\n    //props.dispatch(AddMessage(props.newMessage));\n    props.addMessage(newMessage.text);\n  };\n\n  const onChangeMessage = e => {\n    props.onChangeMessage(e.currentTarget.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.dialogs,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.dialogItem,\n      children: dialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.messages,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(DialogsReduxForm, {\n          onSubmit: addMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_c = Dialogs;\n\nconst DialogsForm = props => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        placeholder: 'Enter your message',\n        component: TextArea,\n        name: 'text',\n        validate: [requiredField, maxLength]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = DialogsForm;\nconst DialogsReduxForm = reduxForm({\n  form: 'text'\n})(DialogsForm);\n_c3 = DialogsReduxForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Dialogs\");\n$RefreshReg$(_c2, \"DialogsForm\");\n$RefreshReg$(_c3, \"DialogsReduxForm\");","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/social-network/src/components/Dialogs/Dialogs.tsx"],"names":["React","s","DialogItem","Message","Field","reduxForm","maxLengthCreator","requiredField","TextArea","maxLength","Dialogs","props","dialog","dialogsPage","dialogsData","map","ev","index","id","name","message","messageData","addMessage","newMessage","text","onChangeMessage","e","currentTarget","value","dialogs","dialogItem","messages","DialogsForm","handleSubmit","DialogsReduxForm","form"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,SAAQC,UAAR,QAAyB,yBAAzB;AACA,SAAQC,OAAR,QAAsB,mBAAtB;AAEA,SAAQC,KAAR,EAAkCC,SAAlC,QAAkD,YAAlD;AACA,SAAQC,gBAAR,EAA0BC,aAA1B,QAA8C,mCAA9C;AACA,SAAQC,QAAR,QAAuB,oCAAvB;;AAEA,MAAMC,SAAS,GAAIH,gBAAgB,CAAC,EAAD,CAAnC;AAEA,OAAO,MAAMI,OAAO,GAAIC,KAAD,IAA6B;AAEhD,QAAMC,MAAM,GAAGD,KAAK,CAACE,WAAN,CAAkBC,WAAlB,CAA8BC,GAA9B,CAAkC,CAACC,EAAD,EAAKC,KAAL,KAAe;AAC5D,wBACI,QAAC,UAAD;AAAwB,MAAA,EAAE,EAAED,EAAE,CAACE,EAA/B;AAAmC,MAAA,IAAI,EAAEF,EAAE,CAACG;AAA5C,OAAiBF,KAAjB;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAJc,CAAf;AAKA,QAAMG,OAAO,GAAGT,KAAK,CAACE,WAAN,CAAkBQ,WAAlB,CAA8BN,GAA9B,CAAkC,CAACC,EAAD,EAAKC,KAAL,KAAe;AAC7D,wBACI,QAAC,OAAD;AAAqB,MAAA,EAAE,EAAED,EAAE,CAACE,EAA5B;AAAgC,MAAA,OAAO,EAAEF,EAAE,CAACI;AAA5C,OAAcH,KAAd;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAJe,CAAhB;;AAMA,QAAMK,UAAU,GAAIC,UAAD,IAA8B;AAC7C;AACAZ,IAAAA,KAAK,CAACW,UAAN,CAAiBC,UAAU,CAACC,IAA5B;AACH,GAHD;;AAKA,QAAMC,eAAe,GAAIC,CAAD,IAAyC;AAC7Df,IAAAA,KAAK,CAACc,eAAN,CAAsBC,CAAC,CAACC,aAAF,CAAgBC,KAAtC;AAEH,GAHD;;AAMA,sBAEI;AAAK,IAAA,SAAS,EAAE3B,CAAC,CAAC4B,OAAlB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAE5B,CAAC,CAAC6B,UAAlB;AAAA,gBACKlB;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,SAAS,EAAEX,CAAC,CAAC8B,QAAlB;AAAA,8BACI;AAAA,kBAAMX;AAAN;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,+BACI,QAAC,gBAAD;AAAkB,UAAA,QAAQ,EAAEE;AAA5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAgBH,CAxCM;KAAMZ,O;;AA8Cb,MAAMsB,WAAsD,GAAIrB,KAAD,IAAW;AACtE,sBACI;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAACsB,YAAtB;AAAA,4BACI;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,WAAW,EAAE,oBAApB;AACO,QAAA,SAAS,EAAEzB,QADlB;AAEO,QAAA,IAAI,EAAE,MAFb;AAGO,QAAA,QAAQ,EAAE,CAACD,aAAD,EAAgBE,SAAhB;AAHjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAfD;;MAAMuB,W;AAiBN,MAAME,gBAAgB,GAAG7B,SAAS,CAAe;AAAC8B,EAAAA,IAAI,EAAE;AAAP,CAAf,CAAT,CAAwCH,WAAxC,CAAzB;MAAME,gB","sourcesContent":["import React, {ChangeEvent} from 'react';\nimport s from './Dialogs.module.css'\nimport {DialogItem} from \"./DialogItem/DialogItem\";\nimport {Message} from \"./Message/Message\";\nimport {DialogsPropsType} from \"./DialogsContainer\";\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, requiredField} from \"../../utils/validators/validators\";\nimport {TextArea} from \"../common/formControls/formControl\";\n\nconst maxLength =  maxLengthCreator(50);\n\nexport const Dialogs = (props: DialogsPropsType) => {\n\n    const dialog = props.dialogsPage.dialogsData.map((ev, index) => {\n        return (\n            <DialogItem key={index} id={ev.id} name={ev.name}/>\n        )\n    })\n    const message = props.dialogsPage.messageData.map((ev, index) => {\n        return (\n            <Message key={index} id={ev.id} message={ev.message}/>\n        )\n    })\n\n    const addMessage = (newMessage: FormDataType) => {\n        //props.dispatch(AddMessage(props.newMessage));\n        props.addMessage(newMessage.text);\n    }\n\n    const onChangeMessage = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        props.onChangeMessage(e.currentTarget.value)\n\n    }\n\n\n    return (\n\n        <div className={s.dialogs}>\n            <div className={s.dialogItem}>\n                {dialog}\n            </div>\n\n            <div className={s.messages}>\n                <div>{message}</div>\n                <div>\n                    <DialogsReduxForm onSubmit={addMessage}/>\n                </div>\n            </div>\n\n        </div>\n    );\n};\n\ntype FormDataType = {\n    text: string\n}\n\nconst DialogsForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field placeholder={'Enter your message'}\n                       component={TextArea}\n                       name={'text'}\n                       validate={[requiredField, maxLength]}\n                ></Field>\n            </div>\n            <div>\n                <button>Send</button>\n            </div>\n        </form>\n    )\n}\n\nconst DialogsReduxForm = reduxForm<FormDataType>({form: 'text'})(DialogsForm)"]},"metadata":{},"sourceType":"module"}