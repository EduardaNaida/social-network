{"ast":null,"code":"var _jsxFileName = \"/Users/eduardanaida/Documents/GitHub/social-network/src/components/common/Paginator/Paginator.tsx\";\nimport React from 'react';\nimport { Pagination } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Paginator = _ref => {\n  let {\n    pageSize,\n    currentPage,\n    totalUsersCount,\n    onPageChanged\n  } = _ref;\n  let pagesCount = Math.ceil(totalUsersCount / pageSize);\n\n  const handleChange = (event, value) => {\n    onPageChanged(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Pagination, {\n      page: pageSize,\n      count: pagesCount,\n      onChange: handleChange,\n      size: 'large'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = Paginator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginator\");","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/social-network/src/components/common/Paginator/Paginator.tsx"],"names":["React","Pagination","Paginator","pageSize","currentPage","totalUsersCount","onPageChanged","pagesCount","Math","ceil","handleChange","event","value"],"mappings":";AAAA,OAAOA,KAAP,MAAwB,OAAxB;AAEA,SAAQC,UAAR,QAAyB,eAAzB;;AASA,OAAO,MAAMC,SAAiC,GAAG,QAGO;AAAA,MAHN;AACEC,IAAAA,QADF;AACYC,IAAAA,WADZ;AACyBC,IAAAA,eADzB;AAEEC,IAAAA;AAFF,GAGM;AAEtD,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUJ,eAAe,GAAGF,QAA5B,CAAjB;;AACA,QAAMO,YAAY,GAAG,CAACC,KAAD,EAAoCC,KAApC,KAAsD;AACzEN,IAAAA,aAAa,CAACM,KAAD,CAAb;AACD,GAFD;;AAGA,sBACE;AAAA,2BACM,QAAC,UAAD;AACE,MAAA,IAAI,EAAET,QADR;AAEE,MAAA,KAAK,EAAEI,UAFT;AAGE,MAAA,QAAQ,EAAEG,YAHZ;AAIE,MAAA,IAAI,EAAE;AAJR;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAnBM;KAAMR,S","sourcesContent":["import React, {FC} from 'react';\nimport styles from \"./Paginator.module.css\";\nimport {Pagination} from \"@mui/material\";\n\nexport type PropsPaginatorType = {\n  pageSize: number\n  totalUsersCount: number\n  currentPage: number\n  onPageChanged: (value: number) => void\n}\n\nexport const Paginator: FC<PropsPaginatorType> = ({\n                                                    pageSize, currentPage, totalUsersCount,\n                                                    onPageChanged\n                                                  }) => {\n\n  let pagesCount = Math.ceil(totalUsersCount / pageSize)\n  const handleChange = (event: React.ChangeEvent<unknown>, value: number) => {\n    onPageChanged(value)\n  }\n  return (\n    <div>\n          <Pagination\n            page={pageSize}\n            count={pagesCount}\n            onChange={handleChange}\n            size={'large'}\n          />\n    </div>\n  );\n};"]},"metadata":{},"sourceType":"module"}