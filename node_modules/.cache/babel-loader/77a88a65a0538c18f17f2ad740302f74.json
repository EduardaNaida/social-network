{"ast":null,"code":"import React from'react';import{Field,reduxForm}from\"redux-form\";import{CheckBox,InputArea}from\"../common/formControls/formControl\";import{requiredField}from\"../../utils/validators/validators\";import{connect,useSelector}from\"react-redux\";import{login}from\"../../redux/authReducer\";import{Redirect}from\"react-router-dom\";import styleError from'../common/formControls/FormControls.module.css';import style from'./Login.module.css';import{Button}from\"@mui/material\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LoginForm=function LoginForm(_ref){var error=_ref.error,handleSubmit=_ref.handleSubmit,captchaUrl=_ref.captchaUrl;return/*#__PURE__*/_jsx(\"form\",{onSubmit:handleSubmit,children:/*#__PURE__*/_jsxs(\"div\",{className:style.loginForm,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Field,{placeholder:'Email',name:'email',component:InputArea,validate:[requiredField]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Field,{placeholder:'Password',type:'password',name:'password',component:InputArea,validate:[requiredField]})}),/*#__PURE__*/_jsxs(\"div\",{className:style.checkBox,children:[/*#__PURE__*/_jsx(Field,{component:CheckBox,type:'checkbox',name:'rememberMe',validate:[requiredField]}),/*#__PURE__*/_jsx(\"div\",{children:\"Remember me\"})]}),/*#__PURE__*/_jsx(\"div\",{children:error&&/*#__PURE__*/_jsx(\"div\",{className:styleError.formControlError,children:error})}),captchaUrl&&/*#__PURE__*/_jsx(\"img\",{src:captchaUrl,alt:\"captcha\"}),captchaUrl&&/*#__PURE__*/_jsx(Field,{placeholder:'Type symbols',name:'captcha',component:InputArea,validate:[requiredField]}),/*#__PURE__*/_jsx(\"div\",{className:style.button,children:/*#__PURE__*/_jsx(Button,{sx:styleButton,type:'submit',children:\"Login\"})})]})});};var LoginReduxForm=reduxForm({form:'email'})(LoginForm);var Login=function Login(props){var captchaUrl=useSelector(function(state){return state.auth.captchaUrl;});var onSubmit=function onSubmit(formData){props.login(formData.email,formData.password,formData.rememberMe,formData.captcha);};if(props.isAuth){return/*#__PURE__*/_jsx(Redirect,{to:'/profile'});}return/*#__PURE__*/_jsxs(\"div\",{className:style.loginBlock,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login page\"}),/*#__PURE__*/_jsx(LoginReduxForm,{onSubmit:onSubmit,captchaUrl:captchaUrl})]});};var mapStateToProps=function mapStateToProps(state){return{isAuth:state.auth.isAuth,captchaUrl:state.auth.captchaUrl};};var styleButton={display:'flex',bgcolor:'rgba(79,123,250,0.96)',color:'white',borderRadius:30,width:111,height:36,fontSize:15,fontFamily:\"'Montserrat', sans-serif\",textTransform:'none','&:hover':{color:'#366EFF'}};export default connect(mapStateToProps,{login:login})(Login);","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/social-network/src/components/Login/Login.tsx"],"names":["React","Field","reduxForm","CheckBox","InputArea","requiredField","connect","useSelector","login","Redirect","styleError","style","Button","LoginForm","error","handleSubmit","captchaUrl","loginForm","checkBox","formControlError","button","styleButton","LoginReduxForm","form","Login","props","state","auth","onSubmit","formData","email","password","rememberMe","captcha","isAuth","loginBlock","mapStateToProps","display","bgcolor","color","borderRadius","width","height","fontSize","fontFamily","textTransform"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {CheckBox, InputArea} from \"../common/formControls/formControl\";\nimport {requiredField} from \"../../utils/validators/validators\";\nimport {connect, useSelector} from \"react-redux\";\nimport {login} from \"../../redux/authReducer\";\nimport {AppStateType} from \"../../redux/reduxStore\";\nimport {Redirect} from \"react-router-dom\";\nimport styleError from '../common/formControls/FormControls.module.css'\nimport style from './Login.module.css'\nimport {Button} from \"@mui/material\";\n\n\ntype FormDataType = {\n  email: string,\n  password: string,\n  rememberMe: boolean,\n  captcha: string\n}\n\ntype LoginCaptchaType = {\n  captchaUrl: string | null\n}\n\nconst LoginForm: React.FC<InjectedFormProps<FormDataType, LoginCaptchaType> & LoginCaptchaType> = ({\n                                                                                                     error,\n                                                                                                     handleSubmit,\n                                                                                                     captchaUrl\n                                                                                                   }) => {\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className={style.loginForm}>\n        <div>\n          <Field placeholder={'Email'}\n                 name={'email'}\n                 component={InputArea}\n                 validate={[requiredField]}/>\n        </div>\n        <div>\n          <Field placeholder={'Password'}\n                 type={'password'}\n                 name={'password'}\n                 component={InputArea}\n                 validate={[requiredField]}/>\n        </div>\n        <div className={style.checkBox}>\n          <Field component={CheckBox}\n                 type={'checkbox'}\n                 name={'rememberMe'}\n                 validate={[requiredField]}/>\n          <div>Remember me\n        </div>\n        </div>\n        <div>\n          {error && <div className={styleError.formControlError}>{error}</div>}\n        </div>\n        {captchaUrl && <img src={captchaUrl} alt=\"captcha\"/>}\n        {captchaUrl && <Field placeholder={'Type symbols'}\n                              name={'captcha'}\n                              component={InputArea}\n                              validate={[requiredField]}/>}\n\n        <div className={style.button}>\n          <Button sx={styleButton} type={'submit'}>Login</Button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nconst LoginReduxForm = reduxForm<FormDataType, LoginCaptchaType>({form: 'email'})(LoginForm)\n\nconst Login = (props: LoginPropsType) => {\n  const captchaUrl = useSelector((state: AppStateType) => state.auth.captchaUrl)\n  const onSubmit = (formData: FormDataType) => {\n    props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\n  }\n\n  if (props.isAuth) {\n    return <Redirect to={'/profile'}/>\n  }\n\n  return (\n    <div className={style.loginBlock}>\n      <h2>Login page</h2>\n      <LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl}/>\n    </div>\n  );\n};\n\ntype LoginPropsType = mapDispatchToProps & mapStateToPropsType\n\ntype mapDispatchToProps = {\n  login: (email: string, password: string, rememberMe: boolean, captcha: string) => void\n}\n\ntype mapStateToPropsType = {\n  isAuth: boolean\n  captchaUrl: string | null\n}\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n  return {\n    isAuth: state.auth.isAuth,\n    captchaUrl: state.auth.captchaUrl\n  }\n}\n\nconst styleButton = {\n  display: 'flex',\n  bgcolor: 'rgba(79,123,250,0.96)',\n  color: 'white',\n  borderRadius: 30,\n  width: 111,\n  height: 36,\n  fontSize: 15,\n  fontFamily: `'Montserrat', sans-serif`,\n  textTransform: 'none',\n  '&:hover': {\n    color: '#366EFF',\n  },\n}\n\nexport default connect(mapStateToProps, {login})(Login);\n\n\n"]},"metadata":{},"sourceType":"module"}