{"ast":null,"code":"var _jsxFileName = \"/Users/eduardanaida/Documents/GitHub/social-network/src/components/Login/Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Field, reduxForm } from \"redux-form\";\nimport { CheckBox, InputArea } from \"../common/formControls/formControl\";\nimport { requiredField } from \"../../utils/validators/validators\";\nimport { connect, useSelector } from \"react-redux\";\nimport { login } from \"../../redux/authReducer\";\nimport { Redirect } from \"react-router-dom\";\nimport styleError from '../common/formControls/FormControls.module.css';\nimport style from './Login.module.css';\nimport { Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = _ref => {\n  let {\n    error,\n    handleSubmit,\n    captchaUrl\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        placeholder: 'Email',\n        name: 'email',\n        component: InputArea,\n        validate: [requiredField]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        placeholder: 'Password',\n        type: 'password',\n        name: 'password',\n        component: InputArea,\n        validate: [requiredField]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.checkBox,\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        component: CheckBox,\n        type: 'checkbox',\n        name: 'rememberMe',\n        validate: [requiredField]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), \"remember me\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styleError.formControlError,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), captchaUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: captchaUrl,\n      alt: \"captcha\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 22\n    }, this), captchaUrl && /*#__PURE__*/_jsxDEV(Field, {\n      placeholder: 'Type symbols',\n      name: 'captcha',\n      component: InputArea,\n      validate: [requiredField]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LoginForm;\nconst LoginReduxForm = reduxForm({\n  form: 'email'\n})(LoginForm);\n_c2 = LoginReduxForm;\n\nconst Login = props => {\n  _s();\n\n  const captchaUrl = useSelector(state => state.auth.captchaUrl);\n\n  const onSubmit = formData => {\n    props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\n  };\n\n  if (props.isAuth) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: '/profile'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.loginBlock,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.loginForm,\n      children: /*#__PURE__*/_jsxDEV(LoginReduxForm, {\n        onSubmit: onSubmit,\n        captchaUrl: captchaUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"NTevnZcCJMUEe0nOyO9WnoD0FzE=\", false, function () {\n  return [useSelector];\n});\n\n_c3 = Login;\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.auth.isAuth,\n    captchaUrl: state.auth.captchaUrl\n  };\n};\n\nexport default connect(mapStateToProps, {\n  login\n})(Login);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"LoginForm\");\n$RefreshReg$(_c2, \"LoginReduxForm\");\n$RefreshReg$(_c3, \"Login\");","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/social-network/src/components/Login/Login.tsx"],"names":["React","Field","reduxForm","CheckBox","InputArea","requiredField","connect","useSelector","login","Redirect","styleError","style","Button","LoginForm","error","handleSubmit","captchaUrl","checkBox","formControlError","LoginReduxForm","form","Login","props","state","auth","onSubmit","formData","email","password","rememberMe","captcha","isAuth","loginBlock","loginForm","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {CheckBox, InputArea} from \"../common/formControls/formControl\";\nimport {requiredField} from \"../../utils/validators/validators\";\nimport {connect, useSelector} from \"react-redux\";\nimport {login} from \"../../redux/authReducer\";\nimport {AppStateType} from \"../../redux/reduxStore\";\nimport {Redirect} from \"react-router-dom\";\nimport styleError from '../common/formControls/FormControls.module.css'\nimport style from './Login.module.css'\nimport {Button} from \"@mui/material\";\n\n\ntype FormDataType = {\n  email: string,\n  password: string,\n  rememberMe: boolean,\n  captcha: string\n}\n\ntype LoginCaptchaType = {\n  captchaUrl: string | null\n}\n\nconst LoginForm: React.FC<InjectedFormProps<FormDataType, LoginCaptchaType> & LoginCaptchaType> = ({error, handleSubmit, captchaUrl}) => {\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <Field placeholder={'Email'}\n               name={'email'}\n               component={InputArea}\n               validate={[requiredField]}/>\n      </div>\n      <div>\n        <Field placeholder={'Password'}\n               type={'password'}\n               name={'password'}\n               component={InputArea}\n               validate={[requiredField]}/>\n      </div>\n      <div className={style.checkBox}>\n        <Field component={CheckBox}\n               type={'checkbox'}\n               name={'rememberMe'}\n               validate={[requiredField]}/>remember me\n      </div>\n      {error && <div className={styleError.formControlError}>{error}</div>}\n\n      {captchaUrl && <img src={captchaUrl} alt=\"captcha\"/>}\n      {captchaUrl && <Field placeholder={'Type symbols'}\n                            name={'captcha'}\n                            component={InputArea}\n                            validate={[requiredField]}/>}\n\n      <div>\n        <Button>Login</Button>\n      </div>\n    </form>\n  );\n};\n\nconst LoginReduxForm = reduxForm<FormDataType, LoginCaptchaType>({form: 'email'})(LoginForm)\n\nconst Login = (props: LoginPropsType) => {\n  const captchaUrl = useSelector((state:AppStateType) => state.auth.captchaUrl)\n  const onSubmit = (formData: FormDataType) => {\n    props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\n  }\n\n  if (props.isAuth) {\n    return <Redirect to={'/profile'}/>\n  }\n\n  return (\n    <div className={style.loginBlock}>\n      <h2>Login page</h2>\n      <div className={style.loginForm}>\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl}/>\n      </div>\n    </div>\n  );\n};\n\ntype LoginPropsType = mapDispatchToProps & mapStateToPropsType\n\ntype mapDispatchToProps = {\n  login: (email: string, password: string, rememberMe: boolean, captcha: string) => void\n}\n\ntype mapStateToPropsType = {\n  isAuth: boolean\n  captchaUrl: string | null\n}\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n  return {\n    isAuth: state.auth.isAuth,\n    captchaUrl: state.auth.captchaUrl\n  }\n}\nexport default connect(mapStateToProps, {login})(Login);\n\n\n"]},"metadata":{},"sourceType":"module"}