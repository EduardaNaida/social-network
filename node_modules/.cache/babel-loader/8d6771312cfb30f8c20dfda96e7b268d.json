{"ast":null,"code":"import { AddPostAC } from \"../../../redux/profileReducer\";\nimport { MyPosts } from \"./MyPosts\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = state => {\n  var _state$profilePage$pr;\n\n  debugger;\n  return {\n    profilePage: state.profilePage,\n    newTextValue: state.profilePage.newTextValue,\n    name: (_state$profilePage$pr = state.profilePage.profile) === null || _state$profilePage$pr === void 0 ? void 0 : _state$profilePage$pr.fullName\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  debugger;\n  return {\n    addPostCallback: (newTextValue, name) => {\n      dispatch(AddPostAC(newTextValue, name));\n    }\n  };\n};\n\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/social-network/src/components/Profile/MyPosts/MyPostsContainer.tsx"],"names":["AddPostAC","MyPosts","connect","mapStateToProps","state","profilePage","newTextValue","name","profile","fullName","mapDispatchToProps","dispatch","addPostCallback","MyPostsContainer"],"mappings":"AACA,SAAQA,SAAR,QAAyC,+BAAzC;AACA,SAAQC,OAAR,QAAsB,WAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAiBA,MAAMC,eAAe,GAAIC,KAAD,IAA4C;AAAA;;AAClE;AACA,SAAO;AACLC,IAAAA,WAAW,EAAED,KAAK,CAACC,WADd;AAELC,IAAAA,YAAY,EAAEF,KAAK,CAACC,WAAN,CAAkBC,YAF3B;AAGLC,IAAAA,IAAI,2BAAEH,KAAK,CAACC,WAAN,CAAkBG,OAApB,0DAAE,sBAA2BC;AAH5B,GAAP;AAKD,CAPD;;AASA,MAAMC,kBAAkB,GAAIC,QAAD,IAA8C;AACvE;AACA,SAAO;AACLC,IAAAA,eAAe,EAAE,CAACN,YAAD,EAAuBC,IAAvB,KAAwC;AACvDI,MAAAA,QAAQ,CAACX,SAAS,CAACM,YAAD,EAAeC,IAAf,CAAV,CAAR;AACD;AAHI,GAAP;AAKD,CAPD;;AASA,OAAO,MAAMM,gBAAgB,GAAGX,OAAO,CAACC,eAAD,EAAkBO,kBAAlB,CAAP,CAA6CT,OAA7C,CAAzB","sourcesContent":["import React from 'react';\nimport {AddPostAC, ProfilePageType} from \"../../../redux/profileReducer\";\nimport {MyPosts} from \"./MyPosts\";\nimport {connect} from \"react-redux\";\nimport {Dispatch} from \"redux\";\nimport {AppStateType} from \"../../../redux/reduxStore\";\n\n\ntype MapStatePropsType = {\n  profilePage: ProfilePageType\n  newTextValue: string\n  name?: string\n}\n\ntype MapDispatchPropsType = {\n  addPostCallback: (newTextValue: string, name: string) => void\n}\n\nexport type ProfilePropsType = MapStatePropsType & MapDispatchPropsType\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n  debugger\n  return {\n    profilePage: state.profilePage,\n    newTextValue: state.profilePage.newTextValue,\n    name: state.profilePage.profile?.fullName\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\n  debugger\n  return {\n    addPostCallback: (newTextValue: string, name: string) => {\n      dispatch(AddPostAC(newTextValue, name));\n    }\n  }\n}\n\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);"]},"metadata":{},"sourceType":"module"}