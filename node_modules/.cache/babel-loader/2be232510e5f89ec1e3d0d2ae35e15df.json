{"ast":null,"code":"var _jsxFileName = \"/Users/eduardanaida/Documents/GitHub/social-network/src/components/Profile/ProfileContainer.tsx\";\nimport React from 'react';\nimport { Profile } from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport { getUserProfile, getUserStatus, savePhoto, saveProfile, updateUserStatus } from \"../../redux/profileReducer\";\nimport { withRouter } from \"react-router-dom\";\nimport withAuthRedirect from \"../../hoc/WithAuthRedirect\";\nimport { compose } from \"redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ProfileContainer extends React.Component {\n  refreshProfile() {\n    let userId = this.props.match.params.userId;\n\n    if (!userId) {\n      userId = String(this.props.userId);\n\n      if (!userId) {\n        this.props.history.push('/login');\n      }\n    }\n\n    this.props.getUserProfile(userId);\n    this.props.getUserStatus(userId);\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.match.params.userId != prevProps.match.params.userId) {\n      this.refreshProfile();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Profile, { ...this.props,\n      profile: this.props.profile,\n      status: this.props.status,\n      updateStatus: this.props.updateUserStatus,\n      saveProfile: this.props.saveProfile,\n      isOwner: !this.props.match.params.userId,\n      savePhoto: this.props.savePhoto\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    userId: state.auth.id,\n    isAuth: state.auth.isAuth\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  getUserProfile,\n  getUserStatus,\n  updateUserStatus,\n  saveProfile,\n  savePhoto\n}), withRouter, withAuthRedirect)(ProfileContainer);","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/social-network/src/components/Profile/ProfileContainer.tsx"],"names":["React","Profile","connect","getUserProfile","getUserStatus","savePhoto","saveProfile","updateUserStatus","withRouter","withAuthRedirect","compose","ProfileContainer","Component","refreshProfile","userId","props","match","params","String","history","push","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","render","profile","status","mapStateToProps","state","profilePage","auth","id","isAuth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,WAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SACEC,cADF,EAEEC,aAFF,EAIEC,SAJF,EAKEC,WALF,EAMEC,gBANF,QAOO,4BAPP;AAQA,SAA6BC,UAA7B,QAA8C,kBAA9C;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,SAAQC,OAAR,QAAsB,OAAtB;;AAuBA,OAAO,MAAMC,gBAAN,SAA+BX,KAAK,CAACY,SAArC,CAAqE;AAE1EC,EAAAA,cAAc,GAAG;AACf,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;AACA,QAAI,CAACA,MAAL,EAAa;AACXA,MAAAA,MAAM,GAAGI,MAAM,CAAC,KAAKH,KAAL,CAAWD,MAAZ,CAAf;;AACA,UAAI,CAACA,MAAL,EAAa;AACX,aAAKC,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACD;AACF;;AACD,SAAKL,KAAL,CAAWZ,cAAX,CAA0BW,MAA1B;AACA,SAAKC,KAAL,CAAWX,aAAX,CAAyBU,MAAzB;AACD;;AAEDO,EAAAA,iBAAiB,GAAG;AAClB,SAAKR,cAAL;AACD;;AAEDS,EAAAA,kBAAkB,CAACC,SAAD,EAA4CC,SAA5C,EAAqEC,QAArE,EAAqF;AACrG,QAAI,KAAKV,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAAxB,IAAkCS,SAAS,CAACP,KAAV,CAAgBC,MAAhB,CAAuBH,MAA7D,EAAqE;AACnE,WAAKD,cAAL;AACD;AACF;;AAEDa,EAAAA,MAAM,GAAG;AAEP,wBACE,QAAC,OAAD,OAAa,KAAKX,KAAlB;AACS,MAAA,OAAO,EAAE,KAAKA,KAAL,CAAWY,OAD7B;AAES,MAAA,MAAM,EAAE,KAAKZ,KAAL,CAAWa,MAF5B;AAGS,MAAA,YAAY,EAAE,KAAKb,KAAL,CAAWR,gBAHlC;AAIS,MAAA,WAAW,EAAE,KAAKQ,KAAL,CAAWT,WAJjC;AAKS,MAAA,OAAO,EAAE,CAAC,KAAKS,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAL3C;AAMS,MAAA,SAAS,EAAE,KAAKC,KAAL,CAAWV;AAN/B;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AApCyE;;AAwC5E,MAAMwB,eAAe,GAAIC,KAAD,IAA4C;AAClE,SAAO;AACLH,IAAAA,OAAO,EAAEG,KAAK,CAACC,WAAN,CAAkBJ,OADtB;AAELC,IAAAA,MAAM,EAAEE,KAAK,CAACC,WAAN,CAAkBH,MAFrB;AAGLd,IAAAA,MAAM,EAAEgB,KAAK,CAACE,IAAN,CAAWC,EAHd;AAILC,IAAAA,MAAM,EAAEJ,KAAK,CAACE,IAAN,CAAWE;AAJd,GAAP;AAMD,CAPD;;AAUA,eAAexB,OAAO,CACpBR,OAAO,CAAC2B,eAAD,EAAkB;AAAC1B,EAAAA,cAAD;AAAiBC,EAAAA,aAAjB;AAAgCG,EAAAA,gBAAhC;AAAkDD,EAAAA,WAAlD;AAA+DD,EAAAA;AAA/D,CAAlB,CADa,EAEpBG,UAFoB,EAGpBC,gBAHoB,CAAP,CAIbE,gBAJa,CAAf","sourcesContent":["import React from 'react';\nimport {Profile} from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../../redux/reduxStore\";\nimport {\n  getUserProfile,\n  getUserStatus,\n  ProfileType,\n  savePhoto,\n  saveProfile,\n  updateUserStatus\n} from \"../../redux/profileReducer\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\nimport withAuthRedirect from \"../../hoc/WithAuthRedirect\";\nimport {compose} from \"redux\";\nimport {ProfileRequestType} from \"../../api/api\";\n\n\ntype ParamsType = {\n  userId: string\n}\ntype MapStatePropsType = {\n  profile: ProfileType | null,\n  status: string,\n  userId: number | null,\n  isAuth: boolean\n}\n\ntype MapDispatchPropsType = {\n  getUserProfile: (userId: string) => void,\n  getUserStatus: (status: string) => void,\n  updateUserStatus: (status: string) => void\n  saveProfile: (profile: ProfileRequestType) => Promise<any>\n  savePhoto: (file: File) => void\n}\nexport type ProfilePagePropsType = RouteComponentProps<ParamsType> & MapStatePropsType & MapDispatchPropsType\n\nexport class ProfileContainer extends React.Component<ProfilePagePropsType> {\n\n  refreshProfile() {\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = String(this.props.userId);\n      if (!userId) {\n        this.props.history.push('/login')\n      }\n    }\n    this.props.getUserProfile(userId)\n    this.props.getUserStatus(userId)\n  }\n\n  componentDidMount() {\n    this.refreshProfile()\n  }\n\n  componentDidUpdate(prevProps: Readonly<ProfilePagePropsType>, prevState: Readonly<{}>, snapshot?: any) {\n    if (this.props.match.params.userId != prevProps.match.params.userId) {\n      this.refreshProfile()\n    }\n  }\n\n  render() {\n\n    return (\n      <Profile {...this.props}\n               profile={this.props.profile}\n               status={this.props.status}\n               updateStatus={this.props.updateUserStatus}\n               saveProfile={this.props.saveProfile}\n               isOwner={!this.props.match.params.userId}\n               savePhoto={this.props.savePhoto}\n      />\n    );\n  }\n}\n\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    userId: state.auth.id,\n    isAuth: state.auth.isAuth\n  }\n}\n\n\nexport default compose<React.ComponentType>(\n  connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus, saveProfile, savePhoto}),\n  withRouter,\n  withAuthRedirect\n)(ProfileContainer)"]},"metadata":{},"sourceType":"module"}