{"ast":null,"code":"var _jsxFileName = \"/Users/eduardanaida/Documents/GitHub/social-network/src/components/Profile/ProfileContainer.tsx\";\nimport React from 'react';\nimport { Profile } from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport { getUserProfile, getUserStatus, saveProfile, updateUserStatus } from \"../../redux/profileReducer\";\nimport { withRouter } from \"react-router-dom\";\nimport withAuthRedirect from \"../../hoc/WithAuthRedirect\";\nimport { compose } from \"redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ProfileContainer extends React.Component {\n  refreshProfile() {\n    let userId = this.props.match.params.userId;\n\n    if (!userId) {\n      userId = String(this.props.userId);\n\n      if (!userId) {\n        this.props.history.push('/login');\n      }\n    }\n\n    this.props.getUserProfile(userId);\n    this.props.getUserStatus(userId);\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    this.refreshProfile();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Profile, { ...this.props,\n      profile: this.props.profile,\n      status: this.props.status,\n      updateStatus: this.props.updateUserStatus,\n      saveProfile: this.props.saveProfile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    userId: state.auth.id,\n    isAuth: state.auth.isAuth\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  getUserProfile,\n  getUserStatus,\n  updateUserStatus,\n  saveProfile\n}), withRouter, withAuthRedirect)(ProfileContainer);","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/social-network/src/components/Profile/ProfileContainer.tsx"],"names":["React","Profile","connect","getUserProfile","getUserStatus","saveProfile","updateUserStatus","withRouter","withAuthRedirect","compose","ProfileContainer","Component","refreshProfile","userId","props","match","params","String","history","push","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","render","profile","status","mapStateToProps","state","profilePage","auth","id","isAuth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,WAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAAQC,cAAR,EAAwBC,aAAxB,EAAoDC,WAApD,EAAiEC,gBAAjE,QAAwF,4BAAxF;AACA,SAA6BC,UAA7B,QAA8C,kBAA9C;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,SAAQC,OAAR,QAAsB,OAAtB;;AAsBA,OAAO,MAAMC,gBAAN,SAA+BV,KAAK,CAACW,SAArC,CAAqE;AAE1EC,EAAAA,cAAc,GAAG;AACf,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;AACA,QAAI,CAACA,MAAL,EAAa;AACXA,MAAAA,MAAM,GAAGI,MAAM,CAAC,KAAKH,KAAL,CAAWD,MAAZ,CAAf;;AACA,UAAI,CAACA,MAAL,EAAa;AACX,aAAKC,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACD;AACF;;AACD,SAAKL,KAAL,CAAWX,cAAX,CAA0BU,MAA1B;AACA,SAAKC,KAAL,CAAWV,aAAX,CAAyBS,MAAzB;AACD;;AAEDO,EAAAA,iBAAiB,GAAG;AAClB,SAAKR,cAAL;AACD;;AAEDS,EAAAA,kBAAkB,CAACC,SAAD,EAA4CC,SAA5C,EAAqEC,QAArE,EAAqF;AACrG,SAAKZ,cAAL;AACD;;AAEDa,EAAAA,MAAM,GAAG;AAEP,wBACE,QAAC,OAAD,OAAa,KAAKX,KAAlB;AAAyB,MAAA,OAAO,EAAE,KAAKA,KAAL,CAAWY,OAA7C;AAAsD,MAAA,MAAM,EAAE,KAAKZ,KAAL,CAAWa,MAAzE;AACS,MAAA,YAAY,EAAE,KAAKb,KAAL,CAAWR,gBADlC;AACoD,MAAA,WAAW,EAAE,KAAKQ,KAAL,CAAWT;AAD5E;AAAA;AAAA;AAAA;AAAA,YADF;AAID;;AA5ByE;;AAgC5E,MAAMuB,eAAe,GAAIC,KAAD,IAA4C;AAClE,SAAO;AACLH,IAAAA,OAAO,EAAEG,KAAK,CAACC,WAAN,CAAkBJ,OADtB;AAELC,IAAAA,MAAM,EAAEE,KAAK,CAACC,WAAN,CAAkBH,MAFrB;AAGLd,IAAAA,MAAM,EAAEgB,KAAK,CAACE,IAAN,CAAWC,EAHd;AAILC,IAAAA,MAAM,EAAEJ,KAAK,CAACE,IAAN,CAAWE;AAJd,GAAP;AAMD,CAPD;;AAUA,eAAexB,OAAO,CACpBP,OAAO,CAAC0B,eAAD,EAAkB;AAACzB,EAAAA,cAAD;AAAiBC,EAAAA,aAAjB;AAAgCE,EAAAA,gBAAhC;AAAkDD,EAAAA;AAAlD,CAAlB,CADa,EAEpBE,UAFoB,EAGpBC,gBAHoB,CAAP,CAIbE,gBAJa,CAAf","sourcesContent":["import React from 'react';\nimport {Profile} from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../../redux/reduxStore\";\nimport {getUserProfile, getUserStatus, ProfileType, saveProfile, updateUserStatus} from \"../../redux/profileReducer\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\nimport withAuthRedirect from \"../../hoc/WithAuthRedirect\";\nimport {compose} from \"redux\";\nimport {ProfileRequestType} from \"../../api/api\";\n\n\ntype ParamsType = {\n  userId: string\n}\ntype MapStatePropsType = {\n  profile: ProfileType | null,\n  status: string,\n  userId: number | null,\n  isAuth: boolean\n}\n\ntype MapDispatchPropsType = {\n  getUserProfile: (userId: string) => void,\n  getUserStatus: (status: string) => void,\n  updateUserStatus: (status: string) => void\n  saveProfile: (profile: ProfileRequestType) => Promise<any>\n}\nexport type ProfilePagePropsType = RouteComponentProps<ParamsType> & MapStatePropsType & MapDispatchPropsType\n\nexport class ProfileContainer extends React.Component<ProfilePagePropsType> {\n\n  refreshProfile() {\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = String(this.props.userId);\n      if (!userId) {\n        this.props.history.push('/login')\n      }\n    }\n    this.props.getUserProfile(userId)\n    this.props.getUserStatus(userId)\n  }\n\n  componentDidMount() {\n    this.refreshProfile()\n  }\n\n  componentDidUpdate(prevProps: Readonly<ProfilePagePropsType>, prevState: Readonly<{}>, snapshot?: any) {\n    this.refreshProfile()\n  }\n\n  render() {\n\n    return (\n      <Profile {...this.props} profile={this.props.profile} status={this.props.status}\n               updateStatus={this.props.updateUserStatus} saveProfile={this.props.saveProfile}/>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    userId: state.auth.id,\n    isAuth: state.auth.isAuth\n  }\n}\n\n\nexport default compose<React.ComponentType>(\n  connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus, saveProfile}),\n  withRouter,\n  withAuthRedirect\n)(ProfileContainer)"]},"metadata":{},"sourceType":"module"}