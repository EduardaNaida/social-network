{"ast":null,"code":"import _asyncToGenerator from\"/Users/eduardanaida/Documents/GitHub/social-network/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _toConsumableArray from\"/Users/eduardanaida/Documents/GitHub/social-network/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/Users/eduardanaida/Documents/GitHub/social-network/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"/Users/eduardanaida/Documents/GitHub/social-network/node_modules/@babel/runtime/regenerator/index.js\";import{profileAPI}from\"../api/api\";import{stopSubmit}from\"redux-form\";var ADD_POST='PROFILE/ADD-POST';var NEW_POST_TEXT='PROFILE/NEW-POST-TEXT';var SET_USER_PROFILE='PROFILE/SET_USER_PROFILE';var SET_STATUS='PROFILE/SET_STATUS';var UPDATE_USER_STATUS='PROFILE/UPDATE_USER_STATUS';var SET_PHOTO='PROFILE/SET-PHOTO';var initialState={postData:[{name:'Eduarda',message:'Hello',likes:'15'},{name:'Artiom',message:'Good morning',likes:'20'}],newTextValue:'',profile:null,status:''};export var profileReducer=function profileReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ADD_POST:{var newPost={name:'Eduarda',message:action.postMessage,likes:'10'};return _objectSpread(_objectSpread({},state),{},{newTextValue:'',postData:[].concat(_toConsumableArray(state.postData),[newPost])});}case NEW_POST_TEXT:{return _objectSpread(_objectSpread({},state),{},{newTextValue:action.newText});}case SET_USER_PROFILE:{return _objectSpread(_objectSpread({},state),{},{profile:action.profile});}case SET_STATUS:{return _objectSpread(_objectSpread({},state),{},{status:action.status});}case UPDATE_USER_STATUS:{return _objectSpread(_objectSpread({},state),{},{status:action.status});}case SET_PHOTO:{return _objectSpread(_objectSpread({},state),{},{profile:_objectSpread(_objectSpread({},state.profile),{},{photos:action.photos})});}default:return state;}};export var AddPostAC=function AddPostAC(newTextValue){return{type:ADD_POST,postMessage:newTextValue};};export var NewPostText=function NewPostText(newText){return{type:NEW_POST_TEXT,newText:newText};};export var setUserProfile=function setUserProfile(profile){return{type:SET_USER_PROFILE,profile:profile};};export var setUserStatus=function setUserStatus(status){return{type:SET_STATUS,status:status};};export var setPhoto=function setPhoto(photos){return{type:SET_PHOTO,photos:photos};};export var updateStatus=function updateStatus(status){return{type:UPDATE_USER_STATUS,status:status};};export var getUserProfile=function getUserProfile(userId){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return profileAPI.getProfile(userId);case 2:response=_context.sent;dispatch(setUserProfile(response.data));case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var getUserStatus=function getUserStatus(userId){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return profileAPI.getStatus(userId);case 2:response=_context2.sent;dispatch(setUserStatus(response.data));case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var updateUserStatus=function updateUserStatus(status){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return profileAPI.updateStatus(status);case 2:response=_context3.sent;if(response.data.resultCode===0){dispatch(setUserStatus(status));}case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var saveProfile=function saveProfile(profile){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch,getState){var userId,response;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:userId=getState().auth.id;_context4.next=3;return profileAPI.saveProfile(profile);case 3:response=_context4.sent;if(!(response.data.resultCode===0)){_context4.next=8;break;}dispatch(getUserProfile(userId));_context4.next=10;break;case 8:dispatch(stopSubmit('edit-profile',{_error:response.data.messages[0]}));return _context4.abrupt(\"return\",Promise.reject());case 10:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x4,_x5){return _ref4.apply(this,arguments);};}();};export var savePhoto=function savePhoto(file){return/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch){var response;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return profileAPI.savePhoto(file);case 2:response=_context5.sent;if(response.data.resultCode===0){dispatch(setPhoto(response.data.data.photos));}case 4:case\"end\":return _context5.stop();}}},_callee5);}));return function(_x6){return _ref5.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/social-network/src/redux/profileReducer.ts"],"names":["profileAPI","stopSubmit","ADD_POST","NEW_POST_TEXT","SET_USER_PROFILE","SET_STATUS","UPDATE_USER_STATUS","SET_PHOTO","initialState","postData","name","message","likes","newTextValue","profile","status","profileReducer","state","action","type","newPost","postMessage","newText","photos","AddPostAC","NewPostText","setUserProfile","setUserStatus","setPhoto","updateStatus","getUserProfile","userId","dispatch","getProfile","response","data","getUserStatus","getStatus","updateUserStatus","resultCode","saveProfile","getState","auth","id","_error","messages","Promise","reject","savePhoto","file"],"mappings":"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","sourcesContent":["import {Dispatch} from \"redux\";\nimport {ContactsType, profileAPI, ProfileRequestType} from \"../api/api\";\nimport {AppThunk} from \"./reduxStore\";\nimport {stopSubmit} from \"redux-form\";\n\nexport type ProfileReducersActionType =\n  | ReturnType<typeof AddPostAC>\n  | ReturnType<typeof NewPostText>\n  | ReturnType<typeof setUserProfile>\n  | ReturnType<typeof setUserStatus>\n  | ReturnType<typeof updateStatus>\n  | ReturnType<typeof setPhoto>\n\n\nconst ADD_POST = 'PROFILE/ADD-POST';\nconst NEW_POST_TEXT = 'PROFILE/NEW-POST-TEXT';\nconst SET_USER_PROFILE = 'PROFILE/SET_USER_PROFILE';\nconst SET_STATUS = 'PROFILE/SET_STATUS';\nconst UPDATE_USER_STATUS = 'PROFILE/UPDATE_USER_STATUS';\nconst SET_PHOTO = 'PROFILE/SET-PHOTO';\n\nexport type PhotosType = {\n  small: string | null\n  large: string | null\n}\n\nexport type PostData = {\n  name: string\n  message: string\n  likes: string\n}\nexport type ProfilePageType = {\n  postData: Array<PostData>\n  newTextValue: string\n  profile: ProfileType | null\n  status: string\n}\n\nexport type ProfileType = {\n  lookingForAJobDescription: string,\n  lookingForAJob: boolean,\n  fullName: string,\n  aboutMe: string,\n  contacts: ContactsType\n  photos: PhotosType\n}\n\nconst initialState: ProfilePageType = {\n  postData: [\n    {name: 'Eduarda', message: 'Hello', likes: '15'},\n    {name: 'Artiom', message: 'Good morning', likes: '20'}\n  ],\n  newTextValue: '',\n  profile: null,\n  status: '',\n}\n\n\nexport const profileReducer = (state: ProfilePageType = initialState, action: ProfileReducersActionType): ProfilePageType => {\n\n  switch (action.type) {\n    case ADD_POST: {\n      const newPost: PostData = {\n        name: 'Eduarda',\n        message: action.postMessage,\n        likes: '10',\n      }\n\n      return {\n        ...state,\n        newTextValue: '',\n        postData: [...state.postData, newPost]\n      };\n    }\n    case NEW_POST_TEXT: {\n      return {\n        ...state,\n        newTextValue: action.newText\n      };\n    }\n    case SET_USER_PROFILE: {\n      return {\n        ...state,\n        profile: action.profile\n      }\n    }\n    case SET_STATUS: {\n      return {\n        ...state,\n        status: action.status\n      }\n    }\n    case UPDATE_USER_STATUS: {\n      return {\n        ...state,\n        status: action.status\n      }\n    }\n    case SET_PHOTO: {\n      return {\n        ...state,\n        profile: {...state.profile, photos: action.photos } as ProfileType\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nexport const AddPostAC = (newTextValue: string) => {\n  return {\n    type: ADD_POST,\n    postMessage: newTextValue\n  } as const\n}\n\nexport const NewPostText = (newText: string) => {\n  return {\n    type: NEW_POST_TEXT,\n    newText: newText\n  } as const\n}\n\nexport const setUserProfile = (profile: any) => {\n  return {\n    type: SET_USER_PROFILE,\n    profile: profile\n  } as const\n}\n\nexport const setUserStatus = (status: string) => {\n  return {\n    type: SET_STATUS,\n    status: status\n  } as const\n}\n\nexport const setPhoto = (photos: PhotosType) => {\n  return {\n    type: SET_PHOTO,\n    photos: photos\n  } as const\n}\n\nexport const updateStatus = (status: string) => {\n  return {\n    type: UPDATE_USER_STATUS,\n    status: status\n  } as const\n}\n\nexport const getUserProfile = (userId: number | null) => {\n  return async (dispatch: Dispatch) => {\n\n    let response = await profileAPI.getProfile(userId)\n    dispatch(setUserProfile(response.data));\n  }\n}\n\nexport const getUserStatus = (userId: string) => {\n  return async (dispatch: Dispatch) => {\n\n    let response = await profileAPI.getStatus(userId)\n    dispatch(setUserStatus(response.data))\n\n  }\n}\n\nexport const updateUserStatus = (status: string) => {\n  return async (dispatch: Dispatch) => {\n    let response = await profileAPI.updateStatus(status)\n\n    if (response.data.resultCode === 0) {\n      dispatch(setUserStatus(status))\n    }\n  }\n}\n\nexport const saveProfile = (profile: ProfileRequestType): AppThunk => {\n  return async (dispatch, getState) => {\n    const userId = getState().auth.id\n    const response = await profileAPI.saveProfile(profile)\n\n    if (response.data.resultCode === 0) {\n      dispatch(getUserProfile(userId))\n    } else {\n      dispatch(stopSubmit('edit-profile', {_error: response.data.messages[0]}))\n      return Promise.reject()\n    }\n  }\n}\n\nexport const savePhoto = (file: File) => {\n  return async (dispatch: Dispatch) => {\n    let response = await profileAPI.savePhoto(file)\n    if (response.data.resultCode === 0) {\n      dispatch(setPhoto(response.data.data.photos))\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}