{"ast":null,"code":"import React from'react';import s from'./MyPosts.module.css';import{Post}from\"./Post/Post\";import{Field,reduxForm}from\"redux-form\";import{requiredLength}from\"../../../utils/validators/validators\";import{TextArea}from\"../../common/formControls/formControl\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MyPostForm=function MyPostForm(props){return/*#__PURE__*/_jsx(\"form\",{onSubmit:props.handleSubmit,children:/*#__PURE__*/_jsxs(\"div\",{className:s.postsBlock,children:[/*#__PURE__*/_jsx(\"div\",{className:s.field,children:/*#__PURE__*/_jsx(Field,{placeholder:'Write your new post',name:'text',component:TextArea,validate:[requiredLength]})}),/*#__PURE__*/_jsx(\"div\",{className:s.buttonBlock,children:/*#__PURE__*/_jsx(\"button\",{className:s.button,children:\"Add post\"})})]})});};var PostReduxForm=reduxForm({form:'text'})(MyPostForm);export var MyPosts=/*#__PURE__*/React.memo(function(props){var getPostData=props.profilePage.postData.map(function(ev,id){var _props$profilePage$pr;return/*#__PURE__*/_jsx(\"div\",{className:s.postsInfo,children:/*#__PURE__*/_jsx(Post,{name:ev.name,message:ev.message,likes:ev.likes,photos:(_props$profilePage$pr=props.profilePage.profile)===null||_props$profilePage$pr===void 0?void 0:_props$profilePage$pr.photos},id)});});var addPost=function addPost(newTextValue){var _props$profilePage$pr2;props.addPostCallback(newTextValue.text,(_props$profilePage$pr2=props.profilePage.profile)===null||_props$profilePage$pr2===void 0?void 0:_props$profilePage$pr2.fullName);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:s.posts,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"My posts\"}),/*#__PURE__*/_jsx(PostReduxForm,{onSubmit:addPost})]}),/*#__PURE__*/_jsx(\"div\",{className:s.postsInfoBlock,children:getPostData})]});});","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/social-network/src/components/Profile/MyPosts/MyPosts.tsx"],"names":["React","s","Post","Field","reduxForm","requiredLength","TextArea","MyPostForm","props","handleSubmit","postsBlock","field","buttonBlock","button","PostReduxForm","form","MyPosts","memo","getPostData","profilePage","postData","map","ev","id","postsInfo","name","message","likes","profile","photos","addPost","newTextValue","addPostCallback","text","fullName","posts","postsInfoBlock"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,CAAP,KAAc,sBAAd,CACA,OAAQC,IAAR,KAAmB,aAAnB,CAEA,OAAQC,KAAR,CAAkCC,SAAlC,KAAkD,YAAlD,CACA,OAAyCC,cAAzC,KAA8D,sCAA9D,CACA,OAAQC,QAAR,KAAuB,uCAAvB,C,wFAOA,GAAMC,CAAAA,UAAqD,CAAG,QAAxDA,CAAAA,UAAwD,CAACC,KAAD,CAAW,CAEvE,mBACE,aAAM,QAAQ,CAAEA,KAAK,CAACC,YAAtB,uBACE,aAAK,SAAS,CAAER,CAAC,CAACS,UAAlB,wBACE,YAAK,SAAS,CAAET,CAAC,CAACU,KAAlB,uBACE,KAAC,KAAD,EAAO,WAAW,CAAE,qBAApB,CACO,IAAI,CAAE,MADb,CAEO,SAAS,CAAEL,QAFlB,CAGO,QAAQ,CAAE,CAACD,cAAD,CAHjB,EADF,EADF,cAOE,YAAK,SAAS,CAAEJ,CAAC,CAACW,WAAlB,uBACE,eAAQ,SAAS,CAAEX,CAAC,CAACY,MAArB,sBADF,EAPF,GADF,EADF,CAeD,CAjBD,CAoBA,GAAMC,CAAAA,aAAa,CAAGV,SAAS,CAAe,CAACW,IAAI,CAAE,MAAP,CAAf,CAAT,CAAwCR,UAAxC,CAAtB,CAGA,MAAO,IAAMS,CAAAA,OAAO,cAAGhB,KAAK,CAACiB,IAAN,CAA6B,SAACT,KAAD,CAAW,CAE7D,GAAIU,CAAAA,WAAW,CAAGV,KAAK,CAACW,WAAN,CAAkBC,QAAlB,CAA2BC,GAA3B,CAA+B,SAACC,EAAD,CAAKC,EAAL,CAAY,2BAC3D,mBACE,YAAK,SAAS,CAAEtB,CAAC,CAACuB,SAAlB,uBACE,KAAC,IAAD,EACM,IAAI,CAAEF,EAAE,CAACG,IADf,CAEM,OAAO,CAAEH,EAAE,CAACI,OAFlB,CAGM,KAAK,CAAEJ,EAAE,CAACK,KAHhB,CAIM,MAAM,wBAAEnB,KAAK,CAACW,WAAN,CAAkBS,OAApB,gDAAE,sBAA2BC,MAJzC,EAAWN,EAAX,CADF,EADF,CASD,CAViB,CAAlB,CAYA,GAAMO,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,YAAD,CAAgC,4BAC9CvB,KAAK,CAACwB,eAAN,CAAsBD,YAAY,CAACE,IAAnC,yBAAyCzB,KAAK,CAACW,WAAN,CAAkBS,OAA3D,iDAAyC,uBAA2BM,QAApE,EACD,CAFD,CAIA,mBACE,oCACE,aAAK,SAAS,CAAEjC,CAAC,CAACkC,KAAlB,wBACE,gCADF,cAEE,KAAC,aAAD,EAAe,QAAQ,CAAEL,OAAzB,EAFF,GADF,cAKE,YAAK,SAAS,CAAE7B,CAAC,CAACmC,cAAlB,UACGlB,WADH,EALF,GADF,CAWD,CA7BsB,CAAhB","sourcesContent":["import React from 'react';\nimport s from './MyPosts.module.css';\nimport {Post} from \"./Post/Post\";\nimport {ProfilePropsType} from \"./MyPostsContainer\";\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, requiredField, requiredLength} from \"../../../utils/validators/validators\";\nimport {TextArea} from \"../../common/formControls/formControl\";\n\ntype FormDataType = {\n  text: string\n}\n\n\nconst MyPostForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\n\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div className={s.postsBlock}>\n        <div className={s.field}>\n          <Field placeholder={'Write your new post'}\n                 name={'text'}\n                 component={TextArea}\n                 validate={[requiredLength]}/>\n        </div>\n        <div className={s.buttonBlock}>\n          <button className={s.button}>Add post</button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\n\nconst PostReduxForm = reduxForm<FormDataType>({form: 'text'})(MyPostForm)\n\n\nexport const MyPosts = React.memo<ProfilePropsType>((props) => {\n\n  let getPostData = props.profilePage.postData.map((ev, id) => {\n    return (\n      <div className={s.postsInfo}>\n        <Post key={id}\n              name={ev.name}\n              message={ev.message}\n              likes={ev.likes}\n              photos={props.profilePage.profile?.photos}/>\n      </div>\n    )\n  })\n\n  const addPost = (newTextValue: FormDataType) => {\n    props.addPostCallback(newTextValue.text, props.profilePage.profile?.fullName as string);\n  }\n\n  return (\n    <div>\n      <div className={s.posts}>\n        <h3>My posts</h3>\n        <PostReduxForm onSubmit={addPost}/>\n      </div>\n      <div className={s.postsInfoBlock}>\n        {getPostData}\n      </div>\n    </div>\n  )\n});"]},"metadata":{},"sourceType":"module"}