{"ast":null,"code":"var _jsxFileName = \"/Users/eduardanaida/Documents/GitHub/social-network/src/components/Profile/ProfileInfo/ProfileInfo.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport s from \"./ProfileInfo.module.css\";\nimport Preloader from \"../../common/preloader/Preloder\";\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\nimport avatar from \"../../../assets/images/avatar.png\";\nimport { ProfileData } from \"./ProfileData/ProfileData\";\nimport { ProfileDataFormRedux } from \"./ProfileData/ProfileDataForm/ProfileDataForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProfileInfo = _ref => {\n  _s();\n\n  let {\n    profile,\n    status,\n    updateStatus,\n    saveProfile\n  } = _ref;\n  const [editMode, setEditMode] = useState(false);\n\n  if (!profile) {\n    return /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n\n  const onSubmit = formData => {\n    saveProfile(formData).then(() => {\n      setEditMode(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.profile,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.description,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: profile.photos.small != null ? profile.photos.large : avatar,\n        alt: \"profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), editMode ? /*#__PURE__*/_jsxDEV(ProfileDataFormRedux, {\n        initialValues: profile,\n        profile: profile,\n        onSubmit: onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ProfileData, {\n        profile: profile,\n        status: status,\n        updateStatus: updateStatus,\n        callback: () => {\n          setEditMode(true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProfileStatus, {\n      status: status,\n      updateStatus: updateStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfileInfo, \"rVR9Tx2gSsa7LZkJIG7mlWuXVu0=\");\n\n_c = ProfileInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileInfo\");","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/social-network/src/components/Profile/ProfileInfo/ProfileInfo.tsx"],"names":["React","useState","s","Preloader","ProfileStatus","avatar","ProfileData","ProfileDataFormRedux","ProfileInfo","profile","status","updateStatus","saveProfile","editMode","setEditMode","onSubmit","formData","then","description","photos","small","large"],"mappings":";;;AAAA,OAAOA,KAAP,IAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,CAAP,MAAc,0BAAd;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AAEA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,SAAQC,WAAR,QAA0B,2BAA1B;AACA,SAAQC,oBAAR,QAAmC,+CAAnC;;AAWA,OAAO,MAAMC,WAAgC,GAAG,QAAkD;AAAA;;AAAA,MAAjD;AAACC,IAAAA,OAAD;AAAUC,IAAAA,MAAV;AAAkBC,IAAAA,YAAlB;AAAgCC,IAAAA;AAAhC,GAAiD;AAEhG,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;;AAEA,MAAI,CAACQ,OAAL,EAAc;AACZ,wBAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,QAAMM,QAAQ,GAAIC,QAAD,IAAkC;AACjDJ,IAAAA,WAAW,CAACI,QAAD,CAAX,CAAsBC,IAAtB,CAA2B,MAAM;AAC/BH,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD,KAFD;AAID,GALD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAEZ,CAAC,CAACO,OAAlB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEP,CAAC,CAACgB,WAAlB;AAAA,8BACE;AAAK,QAAA,GAAG,EAAET,OAAO,CAACU,MAAR,CAAeC,KAAf,IAAwB,IAAxB,GAA+BX,OAAO,CAACU,MAAR,CAAeE,KAA9C,GAAsDhB,MAAhE;AAAwE,QAAA,GAAG,EAAC;AAA5E;AAAA;AAAA;AAAA;AAAA,cADF,EAGGQ,QAAQ,gBACP,QAAC,oBAAD;AAAsB,QAAA,aAAa,EAAEJ,OAArC;AAA8C,QAAA,OAAO,EAAEA,OAAvD;AAAgE,QAAA,QAAQ,EAAEM;AAA1E;AAAA;AAAA;AAAA;AAAA,cADO,gBAGP,QAAC,WAAD;AAAa,QAAA,OAAO,EAAEN,OAAtB;AAA+B,QAAA,MAAM,EAAEC,MAAvC;AAA+C,QAAA,YAAY,EAAEC,YAA7D;AAA2E,QAAA,QAAQ,EAAE,MAAM;AACzFG,UAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AAFD;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAeE,QAAC,aAAD;AAAe,MAAA,MAAM,EAAEJ,MAAvB;AAA+B,MAAA,YAAY,EAAEC;AAA7C;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAjCM;;GAAMH,W;;KAAAA,W","sourcesContent":["import React, {FC, useState} from 'react';\nimport s from \"./ProfileInfo.module.css\";\nimport Preloader from \"../../common/preloader/Preloder\";\nimport {ProfileType} from \"../../../redux/profileReducer\";\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\nimport avatar from \"../../../assets/images/avatar.png\";\nimport {ProfileData} from \"./ProfileData/ProfileData\";\nimport {ProfileDataFormRedux} from \"./ProfileData/ProfileDataForm/ProfileDataForm\";\nimport {ProfileRequestType} from \"../../../api/api\";\n\ntype ProfileInfoType = {\n  profile: ProfileType | null\n  status: string\n  updateStatus: (status: string) => void\n  saveProfile: (profile: ProfileRequestType) => Promise<any>\n}\n\n\nexport const ProfileInfo: FC<ProfileInfoType> = ({profile, status, updateStatus, saveProfile}) => {\n\n  const [editMode, setEditMode] = useState(false);\n\n  if (!profile) {\n    return <Preloader/>\n  }\n\n  const onSubmit = (formData: ProfileRequestType) => {\n    saveProfile(formData).then(() => {\n      setEditMode(false)\n    })\n\n  }\n  return (\n    <div className={s.profile}>\n      <div className={s.description}>\n        <img src={profile.photos.small != null ? profile.photos.large : avatar} alt=\"profile\"/>\n\n        {editMode ?\n          <ProfileDataFormRedux initialValues={profile} profile={profile} onSubmit={onSubmit}/>\n          :\n          <ProfileData profile={profile} status={status} updateStatus={updateStatus} callback={() => {\n            setEditMode(true)\n          }}/>}\n\n      </div>\n      {/*   {Object.keys(props.profile.contacts).map(key => {\n        return <Contacts key={key} contactTitle={key} contactValue={props.profile?.contacts[key]}/>\n      })}*/}\n      <ProfileStatus status={status} updateStatus={updateStatus}/>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}