{"ast":null,"code":"import _defineProperty from \"/Users/eduardanaida/Documents/GitHub/social-network/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"anchorOrigin\", \"className\", \"component\", \"components\", \"componentsProps\", \"overlap\", \"color\", \"invisible\", \"max\", \"badgeContent\", \"slots\", \"slotProps\", \"showZero\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { usePreviousProps } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport BadgeUnstyled from '@mui/base/BadgeUnstyled';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport shouldSpreadAdditionalProps from '../utils/shouldSpreadAdditionalProps';\nimport capitalize from '../utils/capitalize';\nimport badgeClasses, { getBadgeUtilityClass } from './badgeClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar RADIUS_STANDARD = 10;\nvar RADIUS_DOT = 4;\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var color = ownerState.color,\n      anchorOrigin = ownerState.anchorOrigin,\n      invisible = ownerState.invisible,\n      overlap = ownerState.overlap,\n      variant = ownerState.variant,\n      _ownerState$classes = ownerState.classes,\n      classes = _ownerState$classes === void 0 ? {} : _ownerState$classes;\n  var slots = {\n    root: ['root'],\n    badge: ['badge', variant, invisible && 'invisible', \"anchorOrigin\".concat(capitalize(anchorOrigin.vertical)).concat(capitalize(anchorOrigin.horizontal)), \"anchorOrigin\".concat(capitalize(anchorOrigin.vertical)).concat(capitalize(anchorOrigin.horizontal)).concat(capitalize(overlap)), \"overlap\".concat(capitalize(overlap)), color !== 'default' && \"color\".concat(capitalize(color))]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\n\nvar BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.root;\n  }\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nvar BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: function overridesResolver(props, styles) {\n    var ownerState = props.ownerState;\n    return [styles.badge, styles[ownerState.variant], styles[\"anchorOrigin\".concat(capitalize(ownerState.anchorOrigin.vertical)).concat(capitalize(ownerState.anchorOrigin.horizontal)).concat(capitalize(ownerState.overlap))], ownerState.color !== 'default' && styles[\"color\".concat(capitalize(ownerState.color))], ownerState.invisible && styles.invisible];\n  }\n})(function (_ref3) {\n  var theme = _ref3.theme,\n      ownerState = _ref3.ownerState;\n  return _extends({\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center',\n    position: 'absolute',\n    boxSizing: 'border-box',\n    fontFamily: theme.typography.fontFamily,\n    fontWeight: theme.typography.fontWeightMedium,\n    fontSize: theme.typography.pxToRem(12),\n    minWidth: RADIUS_STANDARD * 2,\n    lineHeight: 1,\n    padding: '0 6px',\n    height: RADIUS_STANDARD * 2,\n    borderRadius: RADIUS_STANDARD,\n    zIndex: 1,\n    // Render the badge on top of potential ripples.\n    transition: theme.transitions.create('transform', {\n      easing: theme.transitions.easing.easeInOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  }, ownerState.color !== 'default' && {\n    backgroundColor: (theme.vars || theme).palette[ownerState.color].main,\n    color: (theme.vars || theme).palette[ownerState.color].contrastText\n  }, ownerState.variant === 'dot' && {\n    borderRadius: RADIUS_DOT,\n    height: RADIUS_DOT * 2,\n    minWidth: RADIUS_DOT * 2,\n    padding: 0\n  }, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && _defineProperty({\n    top: 0,\n    right: 0,\n    transform: 'scale(1) translate(50%, -50%)',\n    transformOrigin: '100% 0%'\n  }, \"&.\".concat(badgeClasses.invisible), {\n    transform: 'scale(0) translate(50%, -50%)'\n  }), ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && _defineProperty({\n    bottom: 0,\n    right: 0,\n    transform: 'scale(1) translate(50%, 50%)',\n    transformOrigin: '100% 100%'\n  }, \"&.\".concat(badgeClasses.invisible), {\n    transform: 'scale(0) translate(50%, 50%)'\n  }), ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && _defineProperty({\n    top: 0,\n    left: 0,\n    transform: 'scale(1) translate(-50%, -50%)',\n    transformOrigin: '0% 0%'\n  }, \"&.\".concat(badgeClasses.invisible), {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }), ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && _defineProperty({\n    bottom: 0,\n    left: 0,\n    transform: 'scale(1) translate(-50%, 50%)',\n    transformOrigin: '0% 100%'\n  }, \"&.\".concat(badgeClasses.invisible), {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }), ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && _defineProperty({\n    top: '14%',\n    right: '14%',\n    transform: 'scale(1) translate(50%, -50%)',\n    transformOrigin: '100% 0%'\n  }, \"&.\".concat(badgeClasses.invisible), {\n    transform: 'scale(0) translate(50%, -50%)'\n  }), ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && _defineProperty({\n    bottom: '14%',\n    right: '14%',\n    transform: 'scale(1) translate(50%, 50%)',\n    transformOrigin: '100% 100%'\n  }, \"&.\".concat(badgeClasses.invisible), {\n    transform: 'scale(0) translate(50%, 50%)'\n  }), ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && _defineProperty({\n    top: '14%',\n    left: '14%',\n    transform: 'scale(1) translate(-50%, -50%)',\n    transformOrigin: '0% 0%'\n  }, \"&.\".concat(badgeClasses.invisible), {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }), ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && _defineProperty({\n    bottom: '14%',\n    left: '14%',\n    transform: 'scale(1) translate(-50%, 50%)',\n    transformOrigin: '0% 100%'\n  }, \"&.\".concat(badgeClasses.invisible), {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }), ownerState.invisible && {\n    transition: theme.transitions.create('transform', {\n      easing: theme.transitions.easing.easeInOut,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  });\n});\nvar Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  var _ref, _slots$root, _ref2, _slots$badge, _slotProps$root, _slotProps$badge;\n\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n\n  var _props$anchorOrigin = props.anchorOrigin,\n      anchorOriginProp = _props$anchorOrigin === void 0 ? {\n    vertical: 'top',\n    horizontal: 'right'\n  } : _props$anchorOrigin,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'span' : _props$component,\n      _props$components = props.components,\n      components = _props$components === void 0 ? {} : _props$components,\n      _props$componentsProp = props.componentsProps,\n      componentsProps = _props$componentsProp === void 0 ? {} : _props$componentsProp,\n      _props$overlap = props.overlap,\n      overlapProp = _props$overlap === void 0 ? 'rectangular' : _props$overlap,\n      _props$color = props.color,\n      colorProp = _props$color === void 0 ? 'default' : _props$color,\n      _props$invisible = props.invisible,\n      invisibleProp = _props$invisible === void 0 ? false : _props$invisible,\n      max = props.max,\n      badgeContentProp = props.badgeContent,\n      slots = props.slots,\n      slotProps = props.slotProps,\n      _props$showZero = props.showZero,\n      showZero = _props$showZero === void 0 ? false : _props$showZero,\n      _props$variant = props.variant,\n      variantProp = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp\n  });\n  var invisible = invisibleProp;\n\n  if (invisibleProp === false && (badgeContentProp === 0 && !showZero || badgeContentProp == null && variantProp !== 'dot')) {\n    invisible = true;\n  }\n\n  var _ref12 = invisible ? prevProps : props,\n      _ref12$color = _ref12.color,\n      color = _ref12$color === void 0 ? colorProp : _ref12$color,\n      _ref12$overlap = _ref12.overlap,\n      overlap = _ref12$overlap === void 0 ? overlapProp : _ref12$overlap,\n      _ref12$anchorOrigin = _ref12.anchorOrigin,\n      anchorOrigin = _ref12$anchorOrigin === void 0 ? anchorOriginProp : _ref12$anchorOrigin,\n      _ref12$variant = _ref12.variant,\n      variant = _ref12$variant === void 0 ? variantProp : _ref12$variant;\n\n  var ownerState = _extends({}, props, {\n    anchorOrigin: anchorOrigin,\n    invisible: invisible,\n    color: color,\n    overlap: overlap,\n    variant: variant\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  var displayValue;\n\n  if (variant !== 'dot') {\n    displayValue = badgeContentProp && Number(badgeContentProp) > max ? \"\".concat(max, \"+\") : badgeContentProp;\n  } // support both `slots` and `components` for backward compatibility\n\n\n  var RootSlot = (_ref = (_slots$root = slots == null ? void 0 : slots.root) != null ? _slots$root : components.Root) != null ? _ref : BadgeRoot;\n  var BadgeSlot = (_ref2 = (_slots$badge = slots == null ? void 0 : slots.badge) != null ? _slots$badge : components.Badge) != null ? _ref2 : BadgeBadge;\n  var rootSlotProps = (_slotProps$root = slotProps == null ? void 0 : slotProps.root) != null ? _slotProps$root : componentsProps.root;\n  var badgeSlotProps = (_slotProps$badge = slotProps == null ? void 0 : slotProps.badge) != null ? _slotProps$badge : componentsProps.badge;\n  return /*#__PURE__*/_jsx(BadgeUnstyled, _extends({\n    invisible: invisibleProp,\n    badgeContent: displayValue,\n    showZero: showZero,\n    max: max\n  }, other, {\n    slots: {\n      root: RootSlot,\n      badge: BadgeSlot\n    },\n    className: clsx(rootSlotProps == null ? void 0 : rootSlotProps.className, classes.root, className),\n    slotProps: {\n      root: _extends({}, rootSlotProps, shouldSpreadAdditionalProps(RootSlot) && {\n        as: component,\n        ownerState: _extends({}, rootSlotProps == null ? void 0 : rootSlotProps.ownerState, {\n          anchorOrigin: anchorOrigin,\n          color: color,\n          overlap: overlap,\n          variant: variant\n        })\n      }),\n      badge: _extends({}, badgeSlotProps, {\n        className: clsx(classes.badge, badgeSlotProps == null ? void 0 : badgeSlotProps.className)\n      }, shouldSpreadAdditionalProps(BadgeSlot) && {\n        ownerState: _extends({}, badgeSlotProps == null ? void 0 : badgeSlotProps.ownerState, {\n          anchorOrigin: anchorOrigin,\n          color: color,\n          overlap: overlap,\n          variant: variant\n        })\n      })\n    },\n    ref: ref\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'default'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `slots` prop.\n   * It's recommended to use the `slots` prop instead.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/social-network/node_modules/@mui/material/Badge/Badge.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","clsx","usePreviousProps","composeClasses","BadgeUnstyled","styled","useThemeProps","shouldSpreadAdditionalProps","capitalize","badgeClasses","getBadgeUtilityClass","jsx","_jsx","RADIUS_STANDARD","RADIUS_DOT","useUtilityClasses","ownerState","color","anchorOrigin","invisible","overlap","variant","classes","slots","root","badge","vertical","horizontal","BadgeRoot","name","slot","overridesResolver","props","styles","position","display","verticalAlign","flexShrink","BadgeBadge","theme","flexDirection","flexWrap","justifyContent","alignContent","alignItems","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","minWidth","lineHeight","padding","height","borderRadius","zIndex","transition","transitions","create","easing","easeInOut","duration","enteringScreen","backgroundColor","vars","palette","main","contrastText","top","right","transform","transformOrigin","bottom","left","leavingScreen","Badge","forwardRef","inProps","ref","_ref","_slots$root","_ref2","_slots$badge","_slotProps$root","_slotProps$badge","anchorOriginProp","className","component","components","componentsProps","overlapProp","colorProp","invisibleProp","max","badgeContentProp","badgeContent","slotProps","showZero","variantProp","other","prevProps","displayValue","Number","RootSlot","Root","BadgeSlot","rootSlotProps","badgeSlotProps","as","process","env","NODE_ENV","propTypes","shape","oneOf","isRequired","node","children","object","string","oneOfType","elementType","func","bool","number","sx","arrayOf"],"mappings":";AAAA,OAAOA,6BAAP,MAA0C,yDAA1C;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,IAAMC,SAAS,GAAG,CAAC,cAAD,EAAiB,WAAjB,EAA8B,WAA9B,EAA2C,YAA3C,EAAyD,iBAAzD,EAA4E,SAA5E,EAAuF,OAAvF,EAAgG,WAAhG,EAA6G,KAA7G,EAAoH,cAApH,EAAoI,OAApI,EAA6I,WAA7I,EAA0J,UAA1J,EAAsK,SAAtK,CAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAOC,2BAAP,MAAwC,sCAAxC;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,YAAP,IAAuBC,oBAAvB,QAAmD,gBAAnD;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,IAAMC,eAAe,GAAG,EAAxB;AACA,IAAMC,UAAU,GAAG,CAAnB;;AACA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,UAAU,EAAI;AACtC,MACEC,KADF,GAOID,UAPJ,CACEC,KADF;AAAA,MAEEC,YAFF,GAOIF,UAPJ,CAEEE,YAFF;AAAA,MAGEC,SAHF,GAOIH,UAPJ,CAGEG,SAHF;AAAA,MAIEC,OAJF,GAOIJ,UAPJ,CAIEI,OAJF;AAAA,MAKEC,OALF,GAOIL,UAPJ,CAKEK,OALF;AAAA,4BAOIL,UAPJ,CAMEM,OANF;AAAA,MAMEA,OANF,oCAMY,EANZ;AAQA,MAAMC,KAAK,GAAG;AACZC,IAAAA,IAAI,EAAE,CAAC,MAAD,CADM;AAEZC,IAAAA,KAAK,EAAE,CAAC,OAAD,EAAUJ,OAAV,EAAmBF,SAAS,IAAI,WAAhC,wBAA4DX,UAAU,CAACU,YAAY,CAACQ,QAAd,CAAtE,SAAgGlB,UAAU,CAACU,YAAY,CAACS,UAAd,CAA1G,yBAAsJnB,UAAU,CAACU,YAAY,CAACQ,QAAd,CAAhK,SAA0LlB,UAAU,CAACU,YAAY,CAACS,UAAd,CAApM,SAAgOnB,UAAU,CAACY,OAAD,CAA1O,oBAAiQZ,UAAU,CAACY,OAAD,CAA3Q,GAAwRH,KAAK,KAAK,SAAV,mBAA+BT,UAAU,CAACS,KAAD,CAAzC,CAAxR;AAFK,GAAd;AAIA,SAAOd,cAAc,CAACoB,KAAD,EAAQb,oBAAR,EAA8BY,OAA9B,CAArB;AACD,CAdD;;AAeA,IAAMM,SAAS,GAAGvB,MAAM,CAAC,MAAD,EAAS;AAC/BwB,EAAAA,IAAI,EAAE,UADyB;AAE/BC,EAAAA,IAAI,EAAE,MAFyB;AAG/BC,EAAAA,iBAAiB,EAAE,2BAACC,KAAD,EAAQC,MAAR;AAAA,WAAmBA,MAAM,CAACT,IAA1B;AAAA;AAHY,CAAT,CAAN,CAIf;AACDU,EAAAA,QAAQ,EAAE,UADT;AAEDC,EAAAA,OAAO,EAAE,aAFR;AAGD;AACAC,EAAAA,aAAa,EAAE,QAJd;AAKDC,EAAAA,UAAU,EAAE;AALX,CAJe,CAAlB;AAWA,IAAMC,UAAU,GAAGjC,MAAM,CAAC,MAAD,EAAS;AAChCwB,EAAAA,IAAI,EAAE,UAD0B;AAEhCC,EAAAA,IAAI,EAAE,OAF0B;AAGhCC,EAAAA,iBAAiB,EAAE,2BAACC,KAAD,EAAQC,MAAR,EAAmB;AACpC,QACEjB,UADF,GAEIgB,KAFJ,CACEhB,UADF;AAGA,WAAO,CAACiB,MAAM,CAACR,KAAR,EAAeQ,MAAM,CAACjB,UAAU,CAACK,OAAZ,CAArB,EAA2CY,MAAM,uBAAgBzB,UAAU,CAACQ,UAAU,CAACE,YAAX,CAAwBQ,QAAzB,CAA1B,SAA+DlB,UAAU,CAACQ,UAAU,CAACE,YAAX,CAAwBS,UAAzB,CAAzE,SAAgHnB,UAAU,CAACQ,UAAU,CAACI,OAAZ,CAA1H,EAAjD,EAAoMJ,UAAU,CAACC,KAAX,KAAqB,SAArB,IAAkCgB,MAAM,gBAASzB,UAAU,CAACQ,UAAU,CAACC,KAAZ,CAAnB,EAA5O,EAAsRD,UAAU,CAACG,SAAX,IAAwBc,MAAM,CAACd,SAArT,CAAP;AACD;AAR+B,CAAT,CAAN,CAShB;AAAA,MACDoB,KADC,SACDA,KADC;AAAA,MAEDvB,UAFC,SAEDA,UAFC;AAAA,SAGGnB,QAAQ,CAAC;AACbsC,IAAAA,OAAO,EAAE,MADI;AAEbK,IAAAA,aAAa,EAAE,KAFF;AAGbC,IAAAA,QAAQ,EAAE,MAHG;AAIbC,IAAAA,cAAc,EAAE,QAJH;AAKbC,IAAAA,YAAY,EAAE,QALD;AAMbC,IAAAA,UAAU,EAAE,QANC;AAObV,IAAAA,QAAQ,EAAE,UAPG;AAQbW,IAAAA,SAAS,EAAE,YARE;AASbC,IAAAA,UAAU,EAAEP,KAAK,CAACQ,UAAN,CAAiBD,UAThB;AAUbE,IAAAA,UAAU,EAAET,KAAK,CAACQ,UAAN,CAAiBE,gBAVhB;AAWbC,IAAAA,QAAQ,EAAEX,KAAK,CAACQ,UAAN,CAAiBI,OAAjB,CAAyB,EAAzB,CAXG;AAYbC,IAAAA,QAAQ,EAAEvC,eAAe,GAAG,CAZf;AAabwC,IAAAA,UAAU,EAAE,CAbC;AAcbC,IAAAA,OAAO,EAAE,OAdI;AAebC,IAAAA,MAAM,EAAE1C,eAAe,GAAG,CAfb;AAgBb2C,IAAAA,YAAY,EAAE3C,eAhBD;AAiBb4C,IAAAA,MAAM,EAAE,CAjBK;AAkBb;AACAC,IAAAA,UAAU,EAAEnB,KAAK,CAACoB,WAAN,CAAkBC,MAAlB,CAAyB,WAAzB,EAAsC;AAChDC,MAAAA,MAAM,EAAEtB,KAAK,CAACoB,WAAN,CAAkBE,MAAlB,CAAyBC,SADe;AAEhDC,MAAAA,QAAQ,EAAExB,KAAK,CAACoB,WAAN,CAAkBI,QAAlB,CAA2BC;AAFW,KAAtC;AAnBC,GAAD,EAuBXhD,UAAU,CAACC,KAAX,KAAqB,SAArB,IAAkC;AACnCgD,IAAAA,eAAe,EAAE,CAAC1B,KAAK,CAAC2B,IAAN,IAAc3B,KAAf,EAAsB4B,OAAtB,CAA8BnD,UAAU,CAACC,KAAzC,EAAgDmD,IAD9B;AAEnCnD,IAAAA,KAAK,EAAE,CAACsB,KAAK,CAAC2B,IAAN,IAAc3B,KAAf,EAAsB4B,OAAtB,CAA8BnD,UAAU,CAACC,KAAzC,EAAgDoD;AAFpB,GAvBvB,EA0BXrD,UAAU,CAACK,OAAX,KAAuB,KAAvB,IAAgC;AACjCmC,IAAAA,YAAY,EAAE1C,UADmB;AAEjCyC,IAAAA,MAAM,EAAEzC,UAAU,GAAG,CAFY;AAGjCsC,IAAAA,QAAQ,EAAEtC,UAAU,GAAG,CAHU;AAIjCwC,IAAAA,OAAO,EAAE;AAJwB,GA1BrB,EA+BXtC,UAAU,CAACE,YAAX,CAAwBQ,QAAxB,KAAqC,KAArC,IAA8CV,UAAU,CAACE,YAAX,CAAwBS,UAAxB,KAAuC,OAArF,IAAgGX,UAAU,CAACI,OAAX,KAAuB,aAAvH;AACDkD,IAAAA,GAAG,EAAE,CADJ;AAEDC,IAAAA,KAAK,EAAE,CAFN;AAGDC,IAAAA,SAAS,EAAE,+BAHV;AAIDC,IAAAA,eAAe,EAAE;AAJhB,iBAKKhE,YAAY,CAACU,SALlB,GAKgC;AAC/BqD,IAAAA,SAAS,EAAE;AADoB,GALhC,CA/BW,EAuCXxD,UAAU,CAACE,YAAX,CAAwBQ,QAAxB,KAAqC,QAArC,IAAiDV,UAAU,CAACE,YAAX,CAAwBS,UAAxB,KAAuC,OAAxF,IAAmGX,UAAU,CAACI,OAAX,KAAuB,aAA1H;AACDsD,IAAAA,MAAM,EAAE,CADP;AAEDH,IAAAA,KAAK,EAAE,CAFN;AAGDC,IAAAA,SAAS,EAAE,8BAHV;AAIDC,IAAAA,eAAe,EAAE;AAJhB,iBAKKhE,YAAY,CAACU,SALlB,GAKgC;AAC/BqD,IAAAA,SAAS,EAAE;AADoB,GALhC,CAvCW,EA+CXxD,UAAU,CAACE,YAAX,CAAwBQ,QAAxB,KAAqC,KAArC,IAA8CV,UAAU,CAACE,YAAX,CAAwBS,UAAxB,KAAuC,MAArF,IAA+FX,UAAU,CAACI,OAAX,KAAuB,aAAtH;AACDkD,IAAAA,GAAG,EAAE,CADJ;AAEDK,IAAAA,IAAI,EAAE,CAFL;AAGDH,IAAAA,SAAS,EAAE,gCAHV;AAIDC,IAAAA,eAAe,EAAE;AAJhB,iBAKKhE,YAAY,CAACU,SALlB,GAKgC;AAC/BqD,IAAAA,SAAS,EAAE;AADoB,GALhC,CA/CW,EAuDXxD,UAAU,CAACE,YAAX,CAAwBQ,QAAxB,KAAqC,QAArC,IAAiDV,UAAU,CAACE,YAAX,CAAwBS,UAAxB,KAAuC,MAAxF,IAAkGX,UAAU,CAACI,OAAX,KAAuB,aAAzH;AACDsD,IAAAA,MAAM,EAAE,CADP;AAEDC,IAAAA,IAAI,EAAE,CAFL;AAGDH,IAAAA,SAAS,EAAE,+BAHV;AAIDC,IAAAA,eAAe,EAAE;AAJhB,iBAKKhE,YAAY,CAACU,SALlB,GAKgC;AAC/BqD,IAAAA,SAAS,EAAE;AADoB,GALhC,CAvDW,EA+DXxD,UAAU,CAACE,YAAX,CAAwBQ,QAAxB,KAAqC,KAArC,IAA8CV,UAAU,CAACE,YAAX,CAAwBS,UAAxB,KAAuC,OAArF,IAAgGX,UAAU,CAACI,OAAX,KAAuB,UAAvH;AACDkD,IAAAA,GAAG,EAAE,KADJ;AAEDC,IAAAA,KAAK,EAAE,KAFN;AAGDC,IAAAA,SAAS,EAAE,+BAHV;AAIDC,IAAAA,eAAe,EAAE;AAJhB,iBAKKhE,YAAY,CAACU,SALlB,GAKgC;AAC/BqD,IAAAA,SAAS,EAAE;AADoB,GALhC,CA/DW,EAuEXxD,UAAU,CAACE,YAAX,CAAwBQ,QAAxB,KAAqC,QAArC,IAAiDV,UAAU,CAACE,YAAX,CAAwBS,UAAxB,KAAuC,OAAxF,IAAmGX,UAAU,CAACI,OAAX,KAAuB,UAA1H;AACDsD,IAAAA,MAAM,EAAE,KADP;AAEDH,IAAAA,KAAK,EAAE,KAFN;AAGDC,IAAAA,SAAS,EAAE,8BAHV;AAIDC,IAAAA,eAAe,EAAE;AAJhB,iBAKKhE,YAAY,CAACU,SALlB,GAKgC;AAC/BqD,IAAAA,SAAS,EAAE;AADoB,GALhC,CAvEW,EA+EXxD,UAAU,CAACE,YAAX,CAAwBQ,QAAxB,KAAqC,KAArC,IAA8CV,UAAU,CAACE,YAAX,CAAwBS,UAAxB,KAAuC,MAArF,IAA+FX,UAAU,CAACI,OAAX,KAAuB,UAAtH;AACDkD,IAAAA,GAAG,EAAE,KADJ;AAEDK,IAAAA,IAAI,EAAE,KAFL;AAGDH,IAAAA,SAAS,EAAE,gCAHV;AAIDC,IAAAA,eAAe,EAAE;AAJhB,iBAKKhE,YAAY,CAACU,SALlB,GAKgC;AAC/BqD,IAAAA,SAAS,EAAE;AADoB,GALhC,CA/EW,EAuFXxD,UAAU,CAACE,YAAX,CAAwBQ,QAAxB,KAAqC,QAArC,IAAiDV,UAAU,CAACE,YAAX,CAAwBS,UAAxB,KAAuC,MAAxF,IAAkGX,UAAU,CAACI,OAAX,KAAuB,UAAzH;AACDsD,IAAAA,MAAM,EAAE,KADP;AAEDC,IAAAA,IAAI,EAAE,KAFL;AAGDH,IAAAA,SAAS,EAAE,+BAHV;AAIDC,IAAAA,eAAe,EAAE;AAJhB,iBAKKhE,YAAY,CAACU,SALlB,GAKgC;AAC/BqD,IAAAA,SAAS,EAAE;AADoB,GALhC,CAvFW,EA+FXxD,UAAU,CAACG,SAAX,IAAwB;AACzBuC,IAAAA,UAAU,EAAEnB,KAAK,CAACoB,WAAN,CAAkBC,MAAlB,CAAyB,WAAzB,EAAsC;AAChDC,MAAAA,MAAM,EAAEtB,KAAK,CAACoB,WAAN,CAAkBE,MAAlB,CAAyBC,SADe;AAEhDC,MAAAA,QAAQ,EAAExB,KAAK,CAACoB,WAAN,CAAkBI,QAAlB,CAA2Ba;AAFW,KAAtC;AADa,GA/Fb,CAHX;AAAA,CATgB,CAAnB;AAiHA,IAAMC,KAAK,GAAG,aAAa9E,KAAK,CAAC+E,UAAN,CAAiB,SAASD,KAAT,CAAeE,OAAf,EAAwBC,GAAxB,EAA6B;AACvE,MAAIC,IAAJ,EAAUC,WAAV,EAAuBC,KAAvB,EAA8BC,YAA9B,EAA4CC,eAA5C,EAA6DC,gBAA7D;;AACA,MAAMtD,KAAK,GAAG1B,aAAa,CAAC;AAC1B0B,IAAAA,KAAK,EAAE+C,OADmB;AAE1BlD,IAAAA,IAAI,EAAE;AAFoB,GAAD,CAA3B;;AAIA,4BAkBMG,KAlBN,CACId,YADJ;AAAA,MACkBqE,gBADlB,oCACqC;AAC/B7D,IAAAA,QAAQ,EAAE,KADqB;AAE/BC,IAAAA,UAAU,EAAE;AAFmB,GADrC;AAAA,MAKI6D,SALJ,GAkBMxD,KAlBN,CAKIwD,SALJ;AAAA,yBAkBMxD,KAlBN,CAMIyD,SANJ;AAAA,MAMIA,SANJ,iCAMgB,MANhB;AAAA,0BAkBMzD,KAlBN,CAOI0D,UAPJ;AAAA,MAOIA,UAPJ,kCAOiB,EAPjB;AAAA,8BAkBM1D,KAlBN,CAQI2D,eARJ;AAAA,MAQIA,eARJ,sCAQsB,EARtB;AAAA,uBAkBM3D,KAlBN,CASIZ,OATJ;AAAA,MASawE,WATb,+BAS2B,aAT3B;AAAA,qBAkBM5D,KAlBN,CAUIf,KAVJ;AAAA,MAUW4E,SAVX,6BAUuB,SAVvB;AAAA,yBAkBM7D,KAlBN,CAWIb,SAXJ;AAAA,MAWe2E,aAXf,iCAW+B,KAX/B;AAAA,MAYIC,GAZJ,GAkBM/D,KAlBN,CAYI+D,GAZJ;AAAA,MAakBC,gBAblB,GAkBMhE,KAlBN,CAaIiE,YAbJ;AAAA,MAcI1E,KAdJ,GAkBMS,KAlBN,CAcIT,KAdJ;AAAA,MAeI2E,SAfJ,GAkBMlE,KAlBN,CAeIkE,SAfJ;AAAA,wBAkBMlE,KAlBN,CAgBImE,QAhBJ;AAAA,MAgBIA,QAhBJ,gCAgBe,KAhBf;AAAA,uBAkBMnE,KAlBN,CAiBIX,OAjBJ;AAAA,MAiBa+E,WAjBb,+BAiB2B,UAjB3B;AAAA,MAmBEC,KAnBF,GAmBUzG,6BAA6B,CAACoC,KAAD,EAAQlC,SAAR,CAnBvC;;AAoBA,MAAMwG,SAAS,GAAGpG,gBAAgB,CAAC;AACjCgB,IAAAA,YAAY,EAAEqE,gBADmB;AAEjCtE,IAAAA,KAAK,EAAE4E,SAF0B;AAGjCzE,IAAAA,OAAO,EAAEwE,WAHwB;AAIjCvE,IAAAA,OAAO,EAAE+E;AAJwB,GAAD,CAAlC;AAMA,MAAIjF,SAAS,GAAG2E,aAAhB;;AACA,MAAIA,aAAa,KAAK,KAAlB,KAA4BE,gBAAgB,KAAK,CAArB,IAA0B,CAACG,QAA3B,IAAuCH,gBAAgB,IAAI,IAApB,IAA4BI,WAAW,KAAK,KAA/G,CAAJ,EAA2H;AACzHjF,IAAAA,SAAS,GAAG,IAAZ;AACD;;AACD,eAKIA,SAAS,GAAGmF,SAAH,GAAetE,KAL5B;AAAA,4BACEf,KADF;AAAA,MACEA,KADF,6BACU4E,SADV;AAAA,8BAEEzE,OAFF;AAAA,MAEEA,OAFF,+BAEYwE,WAFZ;AAAA,mCAGE1E,YAHF;AAAA,MAGEA,YAHF,oCAGiBqE,gBAHjB;AAAA,8BAIElE,OAJF;AAAA,MAIEA,OAJF,+BAIY+E,WAJZ;;AAMA,MAAMpF,UAAU,GAAGnB,QAAQ,CAAC,EAAD,EAAKmC,KAAL,EAAY;AACrCd,IAAAA,YAAY,EAAZA,YADqC;AAErCC,IAAAA,SAAS,EAATA,SAFqC;AAGrCF,IAAAA,KAAK,EAALA,KAHqC;AAIrCG,IAAAA,OAAO,EAAPA,OAJqC;AAKrCC,IAAAA,OAAO,EAAPA;AALqC,GAAZ,CAA3B;;AAOA,MAAMC,OAAO,GAAGP,iBAAiB,CAACC,UAAD,CAAjC;AACA,MAAIuF,YAAJ;;AACA,MAAIlF,OAAO,KAAK,KAAhB,EAAuB;AACrBkF,IAAAA,YAAY,GAAGP,gBAAgB,IAAIQ,MAAM,CAACR,gBAAD,CAAN,GAA2BD,GAA/C,aAAwDA,GAAxD,SAAiEC,gBAAhF;AACD,GArDsE,CAuDvE;;;AACA,MAAMS,QAAQ,GAAG,CAACxB,IAAI,GAAG,CAACC,WAAW,GAAG3D,KAAK,IAAI,IAAT,GAAgB,KAAK,CAArB,GAAyBA,KAAK,CAACC,IAA9C,KAAuD,IAAvD,GAA8D0D,WAA9D,GAA4EQ,UAAU,CAACgB,IAA/F,KAAwG,IAAxG,GAA+GzB,IAA/G,GAAsHrD,SAAvI;AACA,MAAM+E,SAAS,GAAG,CAACxB,KAAK,GAAG,CAACC,YAAY,GAAG7D,KAAK,IAAI,IAAT,GAAgB,KAAK,CAArB,GAAyBA,KAAK,CAACE,KAA/C,KAAyD,IAAzD,GAAgE2D,YAAhE,GAA+EM,UAAU,CAACb,KAAnG,KAA6G,IAA7G,GAAoHM,KAApH,GAA4H7C,UAA9I;AACA,MAAMsE,aAAa,GAAG,CAACvB,eAAe,GAAGa,SAAS,IAAI,IAAb,GAAoB,KAAK,CAAzB,GAA6BA,SAAS,CAAC1E,IAA1D,KAAmE,IAAnE,GAA0E6D,eAA1E,GAA4FM,eAAe,CAACnE,IAAlI;AACA,MAAMqF,cAAc,GAAG,CAACvB,gBAAgB,GAAGY,SAAS,IAAI,IAAb,GAAoB,KAAK,CAAzB,GAA6BA,SAAS,CAACzE,KAA3D,KAAqE,IAArE,GAA4E6D,gBAA5E,GAA+FK,eAAe,CAAClE,KAAtI;AACA,SAAO,aAAab,IAAI,CAACR,aAAD,EAAgBP,QAAQ,CAAC;AAC/CsB,IAAAA,SAAS,EAAE2E,aADoC;AAE/CG,IAAAA,YAAY,EAAEM,YAFiC;AAG/CJ,IAAAA,QAAQ,EAAEA,QAHqC;AAI/CJ,IAAAA,GAAG,EAAEA;AAJ0C,GAAD,EAK7CM,KAL6C,EAKtC;AACR9E,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAEiF,QADD;AAELhF,MAAAA,KAAK,EAAEkF;AAFF,KADC;AAKRnB,IAAAA,SAAS,EAAEvF,IAAI,CAAC2G,aAAa,IAAI,IAAjB,GAAwB,KAAK,CAA7B,GAAiCA,aAAa,CAACpB,SAAhD,EAA2DlE,OAAO,CAACE,IAAnE,EAAyEgE,SAAzE,CALP;AAMRU,IAAAA,SAAS,EAAE;AACT1E,MAAAA,IAAI,EAAE3B,QAAQ,CAAC,EAAD,EAAK+G,aAAL,EAAoBrG,2BAA2B,CAACkG,QAAD,CAA3B,IAAyC;AACzEK,QAAAA,EAAE,EAAErB,SADqE;AAEzEzE,QAAAA,UAAU,EAAEnB,QAAQ,CAAC,EAAD,EAAK+G,aAAa,IAAI,IAAjB,GAAwB,KAAK,CAA7B,GAAiCA,aAAa,CAAC5F,UAApD,EAAgE;AAClFE,UAAAA,YAAY,EAAZA,YADkF;AAElFD,UAAAA,KAAK,EAALA,KAFkF;AAGlFG,UAAAA,OAAO,EAAPA,OAHkF;AAIlFC,UAAAA,OAAO,EAAPA;AAJkF,SAAhE;AAFqD,OAA7D,CADL;AAUTI,MAAAA,KAAK,EAAE5B,QAAQ,CAAC,EAAD,EAAKgH,cAAL,EAAqB;AAClCrB,QAAAA,SAAS,EAAEvF,IAAI,CAACqB,OAAO,CAACG,KAAT,EAAgBoF,cAAc,IAAI,IAAlB,GAAyB,KAAK,CAA9B,GAAkCA,cAAc,CAACrB,SAAjE;AADmB,OAArB,EAEZjF,2BAA2B,CAACoG,SAAD,CAA3B,IAA0C;AAC3C3F,QAAAA,UAAU,EAAEnB,QAAQ,CAAC,EAAD,EAAKgH,cAAc,IAAI,IAAlB,GAAyB,KAAK,CAA9B,GAAkCA,cAAc,CAAC7F,UAAtD,EAAkE;AACpFE,UAAAA,YAAY,EAAZA,YADoF;AAEpFD,UAAAA,KAAK,EAALA,KAFoF;AAGpFG,UAAAA,OAAO,EAAPA,OAHoF;AAIpFC,UAAAA,OAAO,EAAPA;AAJoF,SAAlE;AADuB,OAF9B;AAVN,KANH;AA2BR2D,IAAAA,GAAG,EAAEA;AA3BG,GALsC,CAAxB,CAAxB;AAkCD,CA9F0B,CAA3B;AA+FA+B,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCpC,KAAK,CAACqC;AAAU;AAAhB,EAAyC;AAC/E;AACA;AACA;AACA;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACEhG,EAAAA,YAAY,EAAElB,SAAS,CAACmH,KAAV,CAAgB;AAC5BxF,IAAAA,UAAU,EAAE3B,SAAS,CAACoH,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,CAAhB,EAAmCC,UADnB;AAE5B3F,IAAAA,QAAQ,EAAE1B,SAAS,CAACoH,KAAV,CAAgB,CAAC,QAAD,EAAW,KAAX,CAAhB,EAAmCC;AAFjB,GAAhB,CAZiE;;AAgB/E;AACF;AACA;AACEpB,EAAAA,YAAY,EAAEjG,SAAS,CAACsH,IAnBuD;;AAoB/E;AACF;AACA;AACEC,EAAAA,QAAQ,EAAEvH,SAAS,CAACsH,IAvB2D;;AAwB/E;AACF;AACA;AACEhG,EAAAA,OAAO,EAAEtB,SAAS,CAACwH,MA3B4D;;AA4B/E;AACF;AACA;AACEhC,EAAAA,SAAS,EAAExF,SAAS,CAACyH,MA/B0D;;AAgC/E;AACF;AACA;AACA;AACA;AACA;AACExG,EAAAA,KAAK,EAAEjB;AAAU;AAAD,GAAuC0H,SAAhD,CAA0D,CAAC1H,SAAS,CAACoH,KAAV,CAAgB,CAAC,SAAD,EAAY,SAAZ,EAAuB,WAAvB,EAAoC,OAApC,EAA6C,MAA7C,EAAqD,SAArD,EAAgE,SAAhE,CAAhB,CAAD,EAA8FpH,SAAS,CAACyH,MAAxG,CAA1D,CAtCwE;;AAuC/E;AACF;AACA;AACA;AACEhC,EAAAA,SAAS,EAAEzF,SAAS,CAAC2H,WA3C0D;;AA4C/E;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEjC,EAAAA,UAAU,EAAE1F,SAAS,CAACmH,KAAV,CAAgB;AAC1BtC,IAAAA,KAAK,EAAE7E,SAAS,CAAC2H,WADS;AAE1BjB,IAAAA,IAAI,EAAE1G,SAAS,CAAC2H;AAFU,GAAhB,CApDmE;;AAwD/E;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEhC,EAAAA,eAAe,EAAE3F,SAAS,CAACmH,KAAV,CAAgB;AAC/B1F,IAAAA,KAAK,EAAEzB,SAAS,CAAC0H,SAAV,CAAoB,CAAC1H,SAAS,CAAC4H,IAAX,EAAiB5H,SAAS,CAACwH,MAA3B,CAApB,CADwB;AAE/BhG,IAAAA,IAAI,EAAExB,SAAS,CAAC0H,SAAV,CAAoB,CAAC1H,SAAS,CAAC4H,IAAX,EAAiB5H,SAAS,CAACwH,MAA3B,CAApB;AAFyB,GAAhB,CAjE8D;;AAqE/E;AACF;AACA;AACA;AACErG,EAAAA,SAAS,EAAEnB,SAAS,CAAC6H,IAzE0D;;AA0E/E;AACF;AACA;AACA;AACE9B,EAAAA,GAAG,EAAE/F,SAAS,CAAC8H,MA9EgE;;AA+E/E;AACF;AACA;AACA;AACE1G,EAAAA,OAAO,EAAEpB,SAAS,CAACoH,KAAV,CAAgB,CAAC,UAAD,EAAa,aAAb,CAAhB,CAnFsE;;AAoF/E;AACF;AACA;AACA;AACEjB,EAAAA,QAAQ,EAAEnG,SAAS,CAAC6H,IAxF2D;;AAyF/E;AACF;AACA;AACA;AACE3B,EAAAA,SAAS,EAAElG,SAAS,CAACmH,KAAV,CAAgB;AACzB1F,IAAAA,KAAK,EAAEzB,SAAS,CAAC0H,SAAV,CAAoB,CAAC1H,SAAS,CAAC4H,IAAX,EAAiB5H,SAAS,CAACwH,MAA3B,CAApB,CADkB;AAEzBhG,IAAAA,IAAI,EAAExB,SAAS,CAAC0H,SAAV,CAAoB,CAAC1H,SAAS,CAAC4H,IAAX,EAAiB5H,SAAS,CAACwH,MAA3B,CAApB;AAFmB,GAAhB,CA7FoE;;AAiG/E;AACF;AACA;AACA;AACA;AACEjG,EAAAA,KAAK,EAAEvB,SAAS,CAACmH,KAAV,CAAgB;AACrB1F,IAAAA,KAAK,EAAEzB,SAAS,CAAC2H,WADI;AAErBnG,IAAAA,IAAI,EAAExB,SAAS,CAAC2H;AAFK,GAAhB,CAtGwE;;AA0G/E;AACF;AACA;AACEI,EAAAA,EAAE,EAAE/H,SAAS,CAAC0H,SAAV,CAAoB,CAAC1H,SAAS,CAACgI,OAAV,CAAkBhI,SAAS,CAAC0H,SAAV,CAAoB,CAAC1H,SAAS,CAAC4H,IAAX,EAAiB5H,SAAS,CAACwH,MAA3B,EAAmCxH,SAAS,CAAC6H,IAA7C,CAApB,CAAlB,CAAD,EAA6F7H,SAAS,CAAC4H,IAAvG,EAA6G5H,SAAS,CAACwH,MAAvH,CAApB,CA7G2E;;AA8G/E;AACF;AACA;AACA;AACEnG,EAAAA,OAAO,EAAErB;AAAU;AAAD,GAAuC0H,SAAhD,CAA0D,CAAC1H,SAAS,CAACoH,KAAV,CAAgB,CAAC,KAAD,EAAQ,UAAR,CAAhB,CAAD,EAAuCpH,SAAS,CAACyH,MAAjD,CAA1D;AAlHsE,CAAjF,GAmHI,KAAK,CAnHT;AAoHA,eAAe5C,KAAf","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"anchorOrigin\", \"className\", \"component\", \"components\", \"componentsProps\", \"overlap\", \"color\", \"invisible\", \"max\", \"badgeContent\", \"slots\", \"slotProps\", \"showZero\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { usePreviousProps } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport BadgeUnstyled from '@mui/base/BadgeUnstyled';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport shouldSpreadAdditionalProps from '../utils/shouldSpreadAdditionalProps';\nimport capitalize from '../utils/capitalize';\nimport badgeClasses, { getBadgeUtilityClass } from './badgeClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    anchorOrigin,\n    invisible,\n    overlap,\n    variant,\n    classes = {}\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, invisible && 'invisible', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, `overlap${capitalize(overlap)}`, color !== 'default' && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  justifyContent: 'center',\n  alignContent: 'center',\n  alignItems: 'center',\n  position: 'absolute',\n  boxSizing: 'border-box',\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(12),\n  minWidth: RADIUS_STANDARD * 2,\n  lineHeight: 1,\n  padding: '0 6px',\n  height: RADIUS_STANDARD * 2,\n  borderRadius: RADIUS_STANDARD,\n  zIndex: 1,\n  // Render the badge on top of potential ripples.\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.enteringScreen\n  })\n}, ownerState.color !== 'default' && {\n  backgroundColor: (theme.vars || theme).palette[ownerState.color].main,\n  color: (theme.vars || theme).palette[ownerState.color].contrastText\n}, ownerState.variant === 'dot' && {\n  borderRadius: RADIUS_DOT,\n  height: RADIUS_DOT * 2,\n  minWidth: RADIUS_DOT * 2,\n  padding: 0\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n  top: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n  bottom: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n  top: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n  bottom: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n  top: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n  bottom: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n  top: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n  bottom: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, ownerState.invisible && {\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.leavingScreen\n  })\n}));\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  var _ref, _slots$root, _ref2, _slots$badge, _slotProps$root, _slotProps$badge;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n  const {\n      anchorOrigin: anchorOriginProp = {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      className,\n      component = 'span',\n      components = {},\n      componentsProps = {},\n      overlap: overlapProp = 'rectangular',\n      color: colorProp = 'default',\n      invisible: invisibleProp = false,\n      max,\n      badgeContent: badgeContentProp,\n      slots,\n      slotProps,\n      showZero = false,\n      variant: variantProp = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp\n  });\n  let invisible = invisibleProp;\n  if (invisibleProp === false && (badgeContentProp === 0 && !showZero || badgeContentProp == null && variantProp !== 'dot')) {\n    invisible = true;\n  }\n  const {\n    color = colorProp,\n    overlap = overlapProp,\n    anchorOrigin = anchorOriginProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n  const ownerState = _extends({}, props, {\n    anchorOrigin,\n    invisible,\n    color,\n    overlap,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  let displayValue;\n  if (variant !== 'dot') {\n    displayValue = badgeContentProp && Number(badgeContentProp) > max ? `${max}+` : badgeContentProp;\n  }\n\n  // support both `slots` and `components` for backward compatibility\n  const RootSlot = (_ref = (_slots$root = slots == null ? void 0 : slots.root) != null ? _slots$root : components.Root) != null ? _ref : BadgeRoot;\n  const BadgeSlot = (_ref2 = (_slots$badge = slots == null ? void 0 : slots.badge) != null ? _slots$badge : components.Badge) != null ? _ref2 : BadgeBadge;\n  const rootSlotProps = (_slotProps$root = slotProps == null ? void 0 : slotProps.root) != null ? _slotProps$root : componentsProps.root;\n  const badgeSlotProps = (_slotProps$badge = slotProps == null ? void 0 : slotProps.badge) != null ? _slotProps$badge : componentsProps.badge;\n  return /*#__PURE__*/_jsx(BadgeUnstyled, _extends({\n    invisible: invisibleProp,\n    badgeContent: displayValue,\n    showZero: showZero,\n    max: max\n  }, other, {\n    slots: {\n      root: RootSlot,\n      badge: BadgeSlot\n    },\n    className: clsx(rootSlotProps == null ? void 0 : rootSlotProps.className, classes.root, className),\n    slotProps: {\n      root: _extends({}, rootSlotProps, shouldSpreadAdditionalProps(RootSlot) && {\n        as: component,\n        ownerState: _extends({}, rootSlotProps == null ? void 0 : rootSlotProps.ownerState, {\n          anchorOrigin,\n          color,\n          overlap,\n          variant\n        })\n      }),\n      badge: _extends({}, badgeSlotProps, {\n        className: clsx(classes.badge, badgeSlotProps == null ? void 0 : badgeSlotProps.className)\n      }, shouldSpreadAdditionalProps(BadgeSlot) && {\n        ownerState: _extends({}, badgeSlotProps == null ? void 0 : badgeSlotProps.ownerState, {\n          anchorOrigin,\n          color,\n          overlap,\n          variant\n        })\n      })\n    },\n    ref: ref\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `slots` prop.\n   * It's recommended to use the `slots` prop instead.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;"]},"metadata":{},"sourceType":"module"}