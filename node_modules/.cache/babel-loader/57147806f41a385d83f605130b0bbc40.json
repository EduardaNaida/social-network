{"ast":null,"code":"import _slicedToArray from\"/Users/eduardanaida/Documents/GitHub/social-network/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import s from\"./ProfileInfo.module.css\";import Preloader from\"../../common/preloader/Preloder\";import ProfileStatus from\"./ProfileStatus/ProfileStatus\";import avatar from\"../../../assets/images/avatar.png\";import{ProfileData}from\"./ProfileData/ProfileData\";import{ProfileDataFormRedux}from\"./ProfileData/ProfileDataForm/ProfileDataForm\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var ProfileInfo=function ProfileInfo(_ref){var profile=_ref.profile,status=_ref.status,updateStatus=_ref.updateStatus,saveProfile=_ref.saveProfile,isOwner=_ref.isOwner,savePhoto=_ref.savePhoto;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),editMode=_useState2[0],setEditMode=_useState2[1];var _React$useState=React.useState(),_React$useState2=_slicedToArray(_React$useState,2),img=_React$useState2[0],setImg=_React$useState2[1];if(!profile){return/*#__PURE__*/_jsx(Preloader,{});}var onSubmit=function onSubmit(formData){saveProfile(formData).then(function(){setEditMode(false);});};var onSelectedPhoto=function onSelectedPhoto(e){if(e.target.files&&e.target.files.length){console.log(e.target.files[0]);savePhoto(e.target.files[0]);}};return/*#__PURE__*/_jsxs(\"div\",{className:s.profile,children:[/*#__PURE__*/_jsxs(\"div\",{className:s.description,children:[/*#__PURE__*/_jsx(\"img\",{src:profile.photos.large||avatar,alt:\"profile\"}),isOwner&&/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:onSelectedPhoto}),editMode?/*#__PURE__*/_jsx(ProfileDataFormRedux,{initialValues:profile,profile:profile,onSubmit:onSubmit}):/*#__PURE__*/_jsx(ProfileData,{profile:profile,status:status,updateStatus:updateStatus,callback:function callback(){setEditMode(true);},isOwner:isOwner})]}),/*#__PURE__*/_jsx(ProfileStatus,{status:status,updateStatus:updateStatus})]});};","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/social-network/src/components/Profile/ProfileInfo/ProfileInfo.tsx"],"names":["React","useState","s","Preloader","ProfileStatus","avatar","ProfileData","ProfileDataFormRedux","ProfileInfo","profile","status","updateStatus","saveProfile","isOwner","savePhoto","editMode","setEditMode","img","setImg","onSubmit","formData","then","onSelectedPhoto","e","target","files","length","console","log","description","photos","large"],"mappings":"yIAAA,MAAOA,CAAAA,KAAP,EAAgCC,QAAhC,KAA+C,OAA/C,CACA,MAAOC,CAAAA,CAAP,KAAc,0BAAd,CACA,MAAOC,CAAAA,SAAP,KAAsB,iCAAtB,CAEA,MAAOC,CAAAA,aAAP,KAA0B,+BAA1B,CACA,MAAOC,CAAAA,MAAP,KAAmB,mCAAnB,CACA,OAAQC,WAAR,KAA0B,2BAA1B,CACA,OAAQC,oBAAR,KAAmC,+CAAnC,C,wFAaA,MAAO,IAAMC,CAAAA,WAAgC,CAAG,QAAnCA,CAAAA,WAAmC,MAAsE,IAApEC,CAAAA,OAAoE,MAApEA,OAAoE,CAA3DC,MAA2D,MAA3DA,MAA2D,CAAnDC,YAAmD,MAAnDA,YAAmD,CAArCC,WAAqC,MAArCA,WAAqC,CAAxBC,OAAwB,MAAxBA,OAAwB,CAAfC,SAAe,MAAfA,SAAe,CAEpH,cAAgCb,QAAQ,CAAC,KAAD,CAAxC,wCAAOc,QAAP,eAAiBC,WAAjB,eACA,oBAAsBhB,KAAK,CAACC,QAAN,EAAtB,oDAAOgB,GAAP,qBAAYC,MAAZ,qBAEA,GAAI,CAACT,OAAL,CAAc,CACZ,mBAAO,KAAC,SAAD,IAAP,CACD,CAED,GAAMU,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,QAAD,CAAkC,CACjDR,WAAW,CAACQ,QAAD,CAAX,CAAsBC,IAAtB,CAA2B,UAAM,CAC/BL,WAAW,CAAC,KAAD,CAAX,CACD,CAFD,EAGD,CAJD,CAMA,GAAMM,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,CAAD,CAAsC,CAC5D,GAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,EAAkBF,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,MAArC,CAA6C,CAC3CC,OAAO,CAACC,GAAR,CAAYL,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAZ,EACAX,SAAS,CAACS,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAT,CACD,CACF,CALD,CAOA,mBACE,aAAK,SAAS,CAAEvB,CAAC,CAACO,OAAlB,wBACE,aAAK,SAAS,CAAEP,CAAC,CAAC2B,WAAlB,wBACE,YAAK,GAAG,CAAEpB,OAAO,CAACqB,MAAR,CAAeC,KAAf,EAAwB1B,MAAlC,CAA0C,GAAG,CAAC,SAA9C,EADF,CAEGQ,OAAO,eAAI,cAAO,IAAI,CAAC,MAAZ,CAAmB,QAAQ,CAAES,eAA7B,EAFd,CAIGP,QAAQ,cACP,KAAC,oBAAD,EAAsB,aAAa,CAAEN,OAArC,CAA8C,OAAO,CAAEA,OAAvD,CAAgE,QAAQ,CAAEU,QAA1E,EADO,cAGP,KAAC,WAAD,EAAa,OAAO,CAAEV,OAAtB,CAA+B,MAAM,CAAEC,MAAvC,CAA+C,YAAY,CAAEC,YAA7D,CAA2E,QAAQ,CAAE,mBAAM,CACzFK,WAAW,CAAC,IAAD,CAAX,CACD,CAFD,CAEG,OAAO,CAAEH,OAFZ,EAPJ,GADF,cAaE,KAAC,aAAD,EAAe,MAAM,CAAEH,MAAvB,CAA+B,YAAY,CAAEC,YAA7C,EAbF,GADF,CAiBD,CAvCM","sourcesContent":["import React, {ChangeEvent, FC, useState} from 'react';\nimport s from \"./ProfileInfo.module.css\";\nimport Preloader from \"../../common/preloader/Preloder\";\nimport {ProfileType, savePhoto} from \"../../../redux/profileReducer\";\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\nimport avatar from \"../../../assets/images/avatar.png\";\nimport {ProfileData} from \"./ProfileData/ProfileData\";\nimport {ProfileDataFormRedux} from \"./ProfileData/ProfileDataForm/ProfileDataForm\";\nimport {ProfileRequestType} from \"../../../api/api\";\n\ntype ProfileInfoType = {\n  profile: ProfileType | null\n  status: string\n  updateStatus: (status: string) => void\n  saveProfile: (profile: ProfileRequestType) => Promise<any>\n  isOwner: boolean\n  savePhoto: (file: File) => void\n}\n\n\nexport const ProfileInfo: FC<ProfileInfoType> = ({profile, status, updateStatus, saveProfile, isOwner, savePhoto}) => {\n\n  const [editMode, setEditMode] = useState(false);\n  const [img, setImg] = React.useState<string | undefined>()\n\n  if (!profile) {\n    return <Preloader/>\n  }\n\n  const onSubmit = (formData: ProfileRequestType) => {\n    saveProfile(formData).then(() => {\n      setEditMode(false)\n    })\n  }\n\n  const onSelectedPhoto = (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files.length) {\n      console.log(e.target.files[0])\n      savePhoto(e.target.files[0]);\n    }\n  }\n\n  return (\n    <div className={s.profile}>\n      <div className={s.description}>\n        <img src={profile.photos.large || avatar} alt=\"profile\"/>\n        {isOwner && <input type=\"file\" onChange={onSelectedPhoto} />}\n\n        {editMode ?\n          <ProfileDataFormRedux initialValues={profile} profile={profile} onSubmit={onSubmit}/>\n          :\n          <ProfileData profile={profile} status={status} updateStatus={updateStatus} callback={() => {\n            setEditMode(true)\n          }} isOwner={isOwner}/>}\n\n      </div>\n      <ProfileStatus status={status} updateStatus={updateStatus}/>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}