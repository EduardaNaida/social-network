{"ast":null,"code":"var _jsxFileName = \"/Users/eduardanaida/Documents/GitHub/social-network/src/components/Users/UsersContainer.tsx\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { follow, requestUser, setCurrentPage, setIsFetching, setTotalCount, setUsers, unfollow } from \"../../redux/usersReducer\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/preloader/Preloder\";\nimport { compose } from \"redux\";\nimport { getCurrentPage, getFollowingInProgress, getIsFetching, getPageSize, getTotalUsersCount, getUser } from \"../../redux/usersSelectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class UsersContainer extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.onPageChanged = pageNumber => {\n      this.props.requestUser(pageNumber, this.props.pageSize);\n    };\n  }\n\n  componentDidMount() {\n    this.props.requestUser(this.props.currentPage, this.props.pageSize);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 32\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        setCurrentPage: this.props.setCurrentPage,\n        totalUsersCount: this.props.totalUsersCount,\n        usersPage: this.props.usersPage,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        follow: this.props.follow,\n        unfollow: this.props.unfollow,\n        onPageChanged: this.onPageChanged,\n        followingInProgress: this.props.followingInProgress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    usersPage: getUser(state),\n    pageSize: getPageSize(state),\n    totalUsersCount: getTotalUsersCount(state),\n    currentPage: getCurrentPage(state),\n    isFetching: getIsFetching(state),\n    followingInProgress: getFollowingInProgress(state)\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalCount,\n  setIsFetching,\n  requestUser\n}))(UsersContainer);","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/social-network/src/components/Users/UsersContainer.tsx"],"names":["React","connect","follow","requestUser","setCurrentPage","setIsFetching","setTotalCount","setUsers","unfollow","Users","Preloader","compose","getCurrentPage","getFollowingInProgress","getIsFetching","getPageSize","getTotalUsersCount","getUser","UsersContainer","Component","onPageChanged","pageNumber","props","pageSize","componentDidMount","currentPage","render","isFetching","totalUsersCount","usersPage","followingInProgress","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SACEC,MADF,EACUC,WADV,EAEEC,cAFF,EAEkBC,aAFlB,EAGEC,aAHF,EAIEC,QAJF,EAIYC,QAJZ,QAMO,0BANP;AAQA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SACEC,cADF,EAEEC,sBAFF,EAGEC,aAHF,EAIEC,WAJF,EAKEC,kBALF,EAMEC,OANF,QAOO,4BAPP;;;AA+BA,OAAO,MAAMC,cAAN,SAA6BlB,KAAK,CAACmB,SAAnC,CAAiE;AAAA;AAAA;;AAAA,SAMtEC,aANsE,GAMrDC,UAAD,IAAwB;AACtC,WAAKC,KAAL,CAAWnB,WAAX,CAAuBkB,UAAvB,EAAmC,KAAKC,KAAL,CAAWC,QAA9C;AACD,KARqE;AAAA;;AAEtEC,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,KAAL,CAAWnB,WAAX,CAAuB,KAAKmB,KAAL,CAAWG,WAAlC,EAA+C,KAAKH,KAAL,CAAWC,QAA1D;AACD;;AAMDG,EAAAA,MAAM,GAAG;AAEP,wBAAO;AAAA,iBACJ,KAAKJ,KAAL,CAAWK,UAAX,gBAAwB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAAxB,GAAuC,IADnC,eAEL,QAAC,KAAD;AACE,QAAA,cAAc,EAAE,KAAKL,KAAL,CAAWlB,cAD7B;AAEE,QAAA,eAAe,EAAE,KAAKkB,KAAL,CAAWM,eAF9B;AAGE,QAAA,SAAS,EAAE,KAAKN,KAAL,CAAWO,SAHxB;AAIE,QAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWC,QAJvB;AAKE,QAAA,WAAW,EAAE,KAAKD,KAAL,CAAWG,WAL1B;AAME,QAAA,MAAM,EAAE,KAAKH,KAAL,CAAWpB,MANrB;AAOE,QAAA,QAAQ,EAAE,KAAKoB,KAAL,CAAWd,QAPvB;AAQE,QAAA,aAAa,EAAE,KAAKY,aARtB;AASE,QAAA,mBAAmB,EAAE,KAAKE,KAAL,CAAWQ;AATlC;AAAA;AAAA;AAAA;AAAA,cAFK;AAAA,oBAAP;AAcD;;AA1BqE;;AA8BxE,IAAIC,eAAe,GAAIC,KAAD,IAA4C;AAChE,SAAO;AACLH,IAAAA,SAAS,EAAEZ,OAAO,CAACe,KAAD,CADb;AAELT,IAAAA,QAAQ,EAAER,WAAW,CAACiB,KAAD,CAFhB;AAGLJ,IAAAA,eAAe,EAAEZ,kBAAkB,CAACgB,KAAD,CAH9B;AAILP,IAAAA,WAAW,EAAEb,cAAc,CAACoB,KAAD,CAJtB;AAKLL,IAAAA,UAAU,EAAEb,aAAa,CAACkB,KAAD,CALpB;AAMLF,IAAAA,mBAAmB,EAAEjB,sBAAsB,CAACmB,KAAD;AANtC,GAAP;AAQD,CATD;;AAWA,eAAerB,OAAO,CACpBV,OAAO,CAAC8B,eAAD,EAAkB;AAAC7B,EAAAA,MAAD;AAASM,EAAAA,QAAT;AAAmBD,EAAAA,QAAnB;AAA6BH,EAAAA,cAA7B;AAA6CE,EAAAA,aAA7C;AAA4DD,EAAAA,aAA5D;AAA2EF,EAAAA;AAA3E,CAAlB,CADa,CAAP,CAEbe,cAFa,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from \"react-redux\";\nimport {\n  follow, requestUser,\n  setCurrentPage, setIsFetching,\n  setTotalCount,\n  setUsers, unfollow,\n  UsersData\n} from \"../../redux/usersReducer\";\nimport {AppStateType} from \"../../redux/reduxStore\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/preloader/Preloder\";\nimport {compose} from \"redux\";\nimport {\n  getCurrentPage,\n  getFollowingInProgress,\n  getIsFetching,\n  getPageSize,\n  getTotalUsersCount,\n  getUser\n} from \"../../redux/usersSelectors\";\n\ntype MapStatePropsType = {\n  usersPage: UsersData[]\n  pageSize: number\n  totalUsersCount: number\n  currentPage: number\n  isFetching: boolean\n  followingInProgress: Array<any>\n}\n\ntype MapDispatchPropsType = {\n  follow: (userId: number) => void\n  unfollow: (userId: number) => void\n  setUsers: (users: any) => void\n  setCurrentPage: (currentPage: number) => void\n  setTotalCount: (totalUsersCount: number) => void\n  setIsFetching: (isFetching: boolean) => void\n  requestUser: (currentPage: number, pageSize: number) => void\n}\n\nexport type UsersPagePropsType = MapStatePropsType & MapDispatchPropsType\n\n\nexport class UsersContainer extends React.Component<UsersPagePropsType> {\n\n  componentDidMount() {\n    this.props.requestUser(this.props.currentPage, this.props.pageSize)\n  }\n\n  onPageChanged = (pageNumber: number) => {\n    this.props.requestUser(pageNumber, this.props.pageSize)\n  }\n\n  render() {\n\n    return <>\n      {this.props.isFetching ? <Preloader/> : null}\n      <Users \n        setCurrentPage={this.props.setCurrentPage}\n        totalUsersCount={this.props.totalUsersCount}\n        usersPage={this.props.usersPage}\n        pageSize={this.props.pageSize}\n        currentPage={this.props.currentPage}\n        follow={this.props.follow}\n        unfollow={this.props.unfollow}\n        onPageChanged={this.onPageChanged}\n        followingInProgress={this.props.followingInProgress}\n      />\n    </>\n  }\n\n}\n\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\n  return {\n    usersPage: getUser(state),\n    pageSize: getPageSize(state),\n    totalUsersCount: getTotalUsersCount(state),\n    currentPage: getCurrentPage(state),\n    isFetching: getIsFetching(state),\n    followingInProgress: getFollowingInProgress(state)\n  }\n}\n\nexport default compose<React.ComponentType>(\n  connect(mapStateToProps, {follow, unfollow, setUsers, setCurrentPage, setTotalCount, setIsFetching, requestUser}),\n)(UsersContainer)\n\n"]},"metadata":{},"sourceType":"module"}