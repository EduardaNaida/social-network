{"ast":null,"code":"import React from'react';import s from'./MyPosts.module.css';import{Post}from\"./Post/Post\";import{Field,reduxForm}from\"redux-form\";import{maxLengthCreator,requiredField}from\"../../../utils/validators/validators\";import{TextArea}from\"../../common/formControls/formControl\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var maxLength=maxLengthCreator(10);var MyPostForm=function MyPostForm(props){return/*#__PURE__*/_jsxs(\"form\",{onSubmit:props.handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Field,{placeholder:'Write your new post',name:'text',component:TextArea,validate:[requiredField,maxLength]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{children:\"Add post\"})})]});};var PostReduxForm=reduxForm({form:'text'})(MyPostForm);export var MyPosts=/*#__PURE__*/React.memo(function(props){console.log(\"RENDER POST\");var getPostData=props.profilePage.postData.map(function(ev,id){return/*#__PURE__*/_jsx(Post,{name:ev.name,message:ev.message,likes:ev.likes},id);});var addPost=function addPost(newTextValue){props.addPostCallback(newTextValue.text);};return/*#__PURE__*/_jsxs(\"div\",{className:s.posts,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"My posts\"}),/*#__PURE__*/_jsx(PostReduxForm,{onSubmit:addPost}),getPostData]});});","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/social-network/src/components/Profile/MyPosts/MyPosts.tsx"],"names":["React","s","Post","Field","reduxForm","maxLengthCreator","requiredField","TextArea","maxLength","MyPostForm","props","handleSubmit","PostReduxForm","form","MyPosts","memo","console","log","getPostData","profilePage","postData","map","ev","id","name","message","likes","addPost","newTextValue","addPostCallback","text","posts"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,CAAP,KAAc,sBAAd,CACA,OAAQC,IAAR,KAAmB,aAAnB,CAEA,OAAQC,KAAR,CAAkCC,SAAlC,KAAkD,YAAlD,CACA,OAAQC,gBAAR,CAA0BC,aAA1B,KAA8C,sCAA9C,CACA,OAAQC,QAAR,KAAuB,uCAAvB,C,wFAMA,GAAMC,CAAAA,SAAS,CAAGH,gBAAgB,CAAC,EAAD,CAAlC,CAEA,GAAMI,CAAAA,UAAqD,CAAG,QAAxDA,CAAAA,UAAwD,CAACC,KAAD,CAAW,CAEvE,mBACE,cAAM,QAAQ,CAAEA,KAAK,CAACC,YAAtB,wBACE,kCACE,KAAC,KAAD,EAAO,WAAW,CAAE,qBAApB,CACO,IAAI,CAAE,MADb,CAEO,SAAS,CAAEJ,QAFlB,CAGO,QAAQ,CAAE,CAACD,aAAD,CAAgBE,SAAhB,CAHjB,EADF,EADF,cAOE,kCACE,oCADF,EAPF,GADF,CAaD,CAfD,CAkBA,GAAMI,CAAAA,aAAa,CAAGR,SAAS,CAAe,CAACS,IAAI,CAAE,MAAP,CAAf,CAAT,CAAwCJ,UAAxC,CAAtB,CAGA,MAAO,IAAMK,CAAAA,OAAO,cAAGd,KAAK,CAACe,IAAN,CAA6B,SAACL,KAAD,CAAW,CAE7DM,OAAO,CAACC,GAAR,CAAY,aAAZ,EACA,GAAIC,CAAAA,WAAW,CAAGR,KAAK,CAACS,WAAN,CAAkBC,QAAlB,CAA2BC,GAA3B,CAA+B,SAACC,EAAD,CAAKC,EAAL,CAAY,CAC3D,mBACE,KAAC,IAAD,EAAe,IAAI,CAAED,EAAE,CAACE,IAAxB,CAA8B,OAAO,CAAEF,EAAE,CAACG,OAA1C,CAAmD,KAAK,CAAEH,EAAE,CAACI,KAA7D,EAAWH,EAAX,CADF,CAGD,CAJiB,CAAlB,CAMA,GAAMI,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,YAAD,CAAgC,CAC9ClB,KAAK,CAACmB,eAAN,CAAsBD,YAAY,CAACE,IAAnC,EACD,CAFD,CAIA,mBACE,aAAK,SAAS,CAAE7B,CAAC,CAAC8B,KAAlB,wBACE,gCADF,cAEE,KAAC,aAAD,EAAe,QAAQ,CAAEJ,OAAzB,EAFF,CAGGT,WAHH,GADF,CAOD,CApBsB,CAAhB","sourcesContent":["import React from 'react';\nimport s from './MyPosts.module.css';\nimport {Post} from \"./Post/Post\";\nimport {ProfilePropsType} from \"./MyPostsContainer\";\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\nimport {TextArea} from \"../../common/formControls/formControl\";\n\ntype FormDataType = {\n  text: string\n}\n\nconst maxLength = maxLengthCreator(10);\n\nconst MyPostForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\n\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field placeholder={'Write your new post'}\n               name={'text'}\n               component={TextArea}\n               validate={[requiredField, maxLength]}/>\n      </div>\n      <div>\n        <button>Add post</button>\n      </div>\n    </form>\n  );\n};\n\n\nconst PostReduxForm = reduxForm<FormDataType>({form: 'text'})(MyPostForm)\n\n\nexport const MyPosts = React.memo<ProfilePropsType>((props) => {\n\n  console.log(\"RENDER POST\")\n  let getPostData = props.profilePage.postData.map((ev, id) => {\n    return (\n      <Post key={id} name={ev.name} message={ev.message} likes={ev.likes}/>\n    )\n  })\n\n  const addPost = (newTextValue: FormDataType) => {\n    props.addPostCallback(newTextValue.text);\n  }\n\n  return (\n    <div className={s.posts}>\n      <h3>My posts</h3>\n      <PostReduxForm onSubmit={addPost}/>\n      {getPostData}\n    </div>\n  )\n});"]},"metadata":{},"sourceType":"module"}