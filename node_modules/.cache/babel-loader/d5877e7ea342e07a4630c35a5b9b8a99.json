{"ast":null,"code":"import _objectSpread from\"/Users/eduardanaida/Documents/GitHub/social-network/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{getAuthUserData}from\"./authReducer\";var SET_INITIALIZED=\"APP/SET_INITIALIZED\";var initialState={initialized:false};export var appReducer=function appReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case SET_INITIALIZED:return _objectSpread(_objectSpread({},state),{},{initialized:true});default:return state;}};export var setInitialized=function setInitialized(){return{type:SET_INITIALIZED};};export var initializeApp=function initializeApp(){return function(dispatch){var promise=dispatch(getAuthUserData());promise.then(function(){dispatch(setInitialized());});};};","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/social-network/src/redux/appReducer.ts"],"names":["getAuthUserData","SET_INITIALIZED","initialState","initialized","appReducer","state","action","type","setInitialized","initializeApp","dispatch","promise","then"],"mappings":"wIACA,OAAQA,eAAR,KAA8B,eAA9B,CAKA,GAAMC,CAAAA,eAAe,CAAG,qBAAxB,CAMA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,WAAW,CAAE,KADI,CAArB,CAKA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAoF,IAAnFC,CAAAA,KAAmF,2DAA9DH,YAA8D,IAAhDI,CAAAA,MAAgD,2CAC1G,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKN,CAAAA,eAAL,CACI,sCACOI,KADP,MACcF,WAAW,CAAE,IAD3B,GAGJ,QACI,MAAOE,CAAAA,KAAP,CANR,CAQH,CATM,CAWP,MAAO,IAAMG,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAChC,MAAO,CAACD,IAAI,CAAEN,eAAP,CAAP,CACH,CAFM,CAIP,MAAO,IAAMQ,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,SAAM,UAACC,QAAD,CAA+B,CAC9D,GAAMC,CAAAA,OAAO,CAAGD,QAAQ,CAACV,eAAe,EAAhB,CAAxB,CAEAW,OAAO,CAACC,IAAR,CAAa,UAAM,CACfF,QAAQ,CAACF,cAAc,EAAf,CAAR,CACH,CAFD,EAGH,CAN4B,EAAtB","sourcesContent":["import {AppDispatchType} from \"./reduxStore\";\nimport {getAuthUserData} from \"./authReducer\";\n\nexport type authReducersActionType =\n    | ReturnType<typeof setInitialized>\n\nconst SET_INITIALIZED = \"APP/SET_INITIALIZED\";\n\nexport type AppDataType = {\n    initialized: boolean\n}\n\nconst initialState = {\n    initialized: false\n}\n\n\nexport const appReducer = (state: AppDataType = initialState, action: authReducersActionType): AppDataType => {\n    switch (action.type) {\n        case SET_INITIALIZED:\n            return {\n                ...state, initialized: true\n            }\n        default:\n            return state;\n    }\n};\n\nexport const setInitialized = () => {\n    return {type: SET_INITIALIZED} as const\n}\n\nexport const initializeApp = () => (dispatch: AppDispatchType) => {\n    const promise = dispatch(getAuthUserData())\n\n    promise.then(() => {\n        dispatch(setInitialized())\n    })\n}"]},"metadata":{},"sourceType":"module"}