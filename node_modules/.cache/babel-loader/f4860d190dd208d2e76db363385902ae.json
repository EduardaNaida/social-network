{"ast":null,"code":"export const uploadImg = (e, callBack) => {\n  if (e.target.files && e.target.files.length) {\n    const file = e.target.files[0];\n\n    if (file.size < 4000000) {\n      convertFileToBase64(file, file64 => {\n        callBack(file64);\n      });\n    } else {\n      console.error('Error: ', 'Файл слишком большого размера');\n    }\n  }\n};\nexport const convertFileToBase64 = (file, callBack) => {\n  const reader = new FileReader();\n\n  reader.onloadend = () => {\n    const file64 = reader.result;\n    callBack(file64);\n  };\n\n  reader.readAsDataURL(file);\n};","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/social-network/src/utils/InputTypeFile/InputTypeFile.tsx"],"names":["uploadImg","e","callBack","target","files","length","file","size","convertFileToBase64","file64","console","error","reader","FileReader","onloadend","result","readAsDataURL"],"mappings":"AAEA,OAAO,MAAMA,SAAS,GAAG,CAACC,CAAD,EAAmCC,QAAnC,KAAyE;AAChG,MAAID,CAAC,CAACE,MAAF,CAASC,KAAT,IAAkBH,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,MAArC,EAA6C;AAC3C,UAAMC,IAAI,GAAGL,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;;AACA,QAAIE,IAAI,CAACC,IAAL,GAAY,OAAhB,EAAyB;AACvBC,MAAAA,mBAAmB,CAACF,IAAD,EAAQG,MAAD,IAAoB;AAC5CP,QAAAA,QAAQ,CAACO,MAAD,CAAR;AACD,OAFkB,CAAnB;AAGD,KAJD,MAIO;AACLC,MAAAA,OAAO,CAACC,KAAR,CAAc,SAAd,EAAyB,+BAAzB;AACD;AACF;AACF,CAXM;AAaP,OAAO,MAAMH,mBAAmB,GAAG,CAACF,IAAD,EAAaJ,QAAb,KAAmD;AACpF,QAAMU,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,EAAAA,MAAM,CAACE,SAAP,GAAmB,MAAM;AACvB,UAAML,MAAM,GAAGG,MAAM,CAACG,MAAtB;AACAb,IAAAA,QAAQ,CAACO,MAAD,CAAR;AACD,GAHD;;AAIAG,EAAAA,MAAM,CAACI,aAAP,CAAqBV,IAArB;AACD,CAPM","sourcesContent":["import React, { ChangeEvent } from 'react'\n\nexport const uploadImg = (e: ChangeEvent<HTMLInputElement>, callBack: (value: string) => void) => {\n  if (e.target.files && e.target.files.length) {\n    const file = e.target.files[0]\n    if (file.size < 4000000) {\n      convertFileToBase64(file, (file64: string) => {\n        callBack(file64)\n      })\n    } else {\n      console.error('Error: ', 'Файл слишком большого размера')\n    }\n  }\n}\n\nexport const convertFileToBase64 = (file: File, callBack: (value: string) => void) => {\n  const reader = new FileReader()\n  reader.onloadend = () => {\n    const file64 = reader.result as string\n    callBack(file64)\n  }\n  reader.readAsDataURL(file)\n}\n"]},"metadata":{},"sourceType":"module"}