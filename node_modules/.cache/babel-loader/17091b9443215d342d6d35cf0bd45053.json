{"ast":null,"code":"var _jsxFileName = \"/Users/eduardanaida/Documents/GitHub/social-network/src/components/Profile/MyPosts/MyPosts.tsx\";\nimport React from 'react';\nimport s from './MyPosts.module.css';\nimport { Post } from \"./Post/Post\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { requiredLength } from \"../../../utils/validators/validators\";\nimport { TextArea } from \"../../common/formControls/formControl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyPostForm = props => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.postsBlock,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.field,\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          placeholder: 'Write your new post',\n          name: 'text',\n          component: TextArea,\n          validate: [requiredLength]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.buttonBlock,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: s.button,\n          children: \"Add post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MyPostForm;\nconst PostReduxForm = reduxForm({\n  form: 'text'\n})(MyPostForm);\n_c2 = PostReduxForm;\nexport const MyPosts = /*#__PURE__*/React.memo(_c3 = props => {\n  let getPostData = props.profilePage.postData.map((ev, id) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.postsInfoBlock,\n      children: /*#__PURE__*/_jsxDEV(Post, {\n        name: ev.name,\n        message: ev.message,\n        likes: ev.likes\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  });\n\n  const addPost = newTextValue => {\n    props.addPostCallback(newTextValue.text);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.posts,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"My posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostReduxForm, {\n      onSubmit: addPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), getPostData]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n});\n_c4 = MyPosts;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"MyPostForm\");\n$RefreshReg$(_c2, \"PostReduxForm\");\n$RefreshReg$(_c3, \"MyPosts$React.memo\");\n$RefreshReg$(_c4, \"MyPosts\");","map":{"version":3,"sources":["/Users/eduardanaida/Documents/GitHub/social-network/src/components/Profile/MyPosts/MyPosts.tsx"],"names":["React","s","Post","Field","reduxForm","requiredLength","TextArea","MyPostForm","props","handleSubmit","postsBlock","field","buttonBlock","button","PostReduxForm","form","MyPosts","memo","getPostData","profilePage","postData","map","ev","id","postsInfoBlock","name","message","likes","addPost","newTextValue","addPostCallback","text","posts"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,SAAQC,IAAR,QAAmB,aAAnB;AAEA,SAAQC,KAAR,EAAkCC,SAAlC,QAAkD,YAAlD;AACA,SAAyCC,cAAzC,QAA8D,sCAA9D;AACA,SAAQC,QAAR,QAAuB,uCAAvB;;;AAOA,MAAMC,UAAqD,GAAIC,KAAD,IAAW;AAEvE,sBACE;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAACC,YAAtB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAER,CAAC,CAACS,UAAlB;AAAA,8BACA;AAAK,QAAA,SAAS,EAAET,CAAC,CAACU,KAAlB;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,WAAW,EAAE,qBAApB;AACO,UAAA,IAAI,EAAE,MADb;AAEO,UAAA,SAAS,EAAEL,QAFlB;AAGO,UAAA,QAAQ,EAAE,CAACD,cAAD;AAHjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADA,eAOA;AAAK,QAAA,SAAS,EAAEJ,CAAC,CAACW,WAAlB;AAAA,+BACE;AAAQ,UAAA,SAAS,EAAEX,CAAC,CAACY,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAjBD;;KAAMN,U;AAoBN,MAAMO,aAAa,GAAGV,SAAS,CAAe;AAACW,EAAAA,IAAI,EAAE;AAAP,CAAf,CAAT,CAAwCR,UAAxC,CAAtB;MAAMO,a;AAGN,OAAO,MAAME,OAAO,gBAAGhB,KAAK,CAACiB,IAAN,OAA8BT,KAAD,IAAW;AAE7D,MAAIU,WAAW,GAAGV,KAAK,CAACW,WAAN,CAAkBC,QAAlB,CAA2BC,GAA3B,CAA+B,CAACC,EAAD,EAAKC,EAAL,KAAY;AAC3D,wBACE;AAAK,MAAA,SAAS,EAAEtB,CAAC,CAACuB,cAAlB;AAAA,6BACE,QAAC,IAAD;AAAe,QAAA,IAAI,EAAEF,EAAE,CAACG,IAAxB;AAA8B,QAAA,OAAO,EAAEH,EAAE,CAACI,OAA1C;AAAmD,QAAA,KAAK,EAAEJ,EAAE,CAACK;AAA7D,SAAWJ,EAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GANiB,CAAlB;;AAQA,QAAMK,OAAO,GAAIC,YAAD,IAAgC;AAC9CrB,IAAAA,KAAK,CAACsB,eAAN,CAAsBD,YAAY,CAACE,IAAnC;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAE9B,CAAC,CAAC+B,KAAlB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AAAe,MAAA,QAAQ,EAAEJ;AAAzB;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGV,WAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CArBsB,CAAhB;MAAMF,O","sourcesContent":["import React from 'react';\nimport s from './MyPosts.module.css';\nimport {Post} from \"./Post/Post\";\nimport {ProfilePropsType} from \"./MyPostsContainer\";\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, requiredField, requiredLength} from \"../../../utils/validators/validators\";\nimport {TextArea} from \"../../common/formControls/formControl\";\n\ntype FormDataType = {\n  text: string\n}\n\n\nconst MyPostForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\n\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div className={s.postsBlock}>\n      <div className={s.field}>\n        <Field placeholder={'Write your new post'}\n               name={'text'}\n               component={TextArea}\n               validate={[requiredLength]}/>\n      </div>\n      <div className={s.buttonBlock} >\n        <button className={s.button}>Add post</button>\n      </div>\n      </div>\n    </form>\n  );\n};\n\n\nconst PostReduxForm = reduxForm<FormDataType>({form: 'text'})(MyPostForm)\n\n\nexport const MyPosts = React.memo<ProfilePropsType>((props) => {\n\n  let getPostData = props.profilePage.postData.map((ev, id) => {\n    return (\n      <div className={s.postsInfoBlock}>\n        <Post key={id} name={ev.name} message={ev.message} likes={ev.likes}/>\n      </div>\n    )\n  })\n\n  const addPost = (newTextValue: FormDataType) => {\n    props.addPostCallback(newTextValue.text);\n  }\n\n  return (\n    <div className={s.posts}>\n      <h3>My posts</h3>\n      <PostReduxForm onSubmit={addPost}/>\n      {getPostData}\n    </div>\n  )\n});"]},"metadata":{},"sourceType":"module"}